"use strict";var THREE=THREE||{REVISION:"59dev"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}};self.Int32Array=self.Int32Array||Array;self.Float32Array=self.Float32Array||Array;String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")};THREE.extend=function(h,g){if(Object.keys){for(var l=Object.keys(g),k=0,j=l.length;k<j;k++){var i=l[k];Object.defineProperty(h,i,Object.getOwnPropertyDescriptor(g,i))}}else{for(i in l={}.hasOwnProperty,g){l.call(g,i)&&(h[i]=g[i])}}return h};(function(){for(var e=0,d=["ms","moz","webkit","o"],f=0;f<d.length&&!self.requestAnimationFrame;++f){self.requestAnimationFrame=self[d[f]+"RequestAnimationFrame"],self.cancelAnimationFrame=self[d[f]+"CancelAnimationFrame"]||self[d[f]+"CancelRequestAnimationFrame"]}void 0===self.requestAnimationFrame&&void 0!==self.setTimeout&&(self.requestAnimationFrame=function(a){var j=Date.now(),i=Math.max(0,16-(j-e)),g=self.setTimeout(function(){a(j+i)},i);e=j+i;return g});void 0===self.cancelAnimationFrame&&void 0!==self.clearTimeout&&(self.cancelAnimationFrame=function(b){self.clearTimeout(b)})})();THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.RepeatWrapping=1000;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Color=function(b){void 0!==b&&this.set(b);return this};THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(b){b instanceof THREE.Color?this.copy(b):"number"===typeof b?this.setHex(b):"string"===typeof b&&this.setStyle(b);return this},setHex:function(b){b=Math.floor(b);this.r=(b>>16&255)/255;this.g=(b>>8&255)/255;this.b=(b&255)/255;return this},setRGB:function(e,d,f){this.r=e;this.g=d;this.b=f;return this},setHSL:function(f,e,h){if(0===e){this.r=this.g=this.b=h}else{var g=function(i,d,j){0>j&&(j+=1);1<j&&(j-=1);return j<1/6?i+6*(d-i)*j:0.5>j?d:j<2/3?i+6*(d-i)*(2/3-j):i},e=0.5>=h?h*(1+e):h+e-h*e,h=2*h-e;this.r=g(h,e,f+1/3);this.g=g(h,e,f);this.b=g(h,e,f-1/3)}return this},setStyle:function(b){if(/^rgb\((\d+),(\d+),(\d+)\)$/i.test(b)){return b=/^rgb\((\d+),(\d+),(\d+)\)$/i.exec(b),this.r=Math.min(255,parseInt(b[1],10))/255,this.g=Math.min(255,parseInt(b[2],10))/255,this.b=Math.min(255,parseInt(b[3],10))/255,this}if(/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.test(b)){return b=/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.exec(b),this.r=Math.min(100,parseInt(b[1],10))/100,this.g=Math.min(100,parseInt(b[2],10))/100,this.b=Math.min(100,parseInt(b[3],10))/100,this}if(/^\#([0-9a-f]{6})$/i.test(b)){return b=/^\#([0-9a-f]{6})$/i.exec(b),this.setHex(parseInt(b[1],16)),this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(b)){return b=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(b),this.setHex(parseInt(b[1]+b[1]+b[2]+b[2]+b[3]+b[3],16)),this}if(/^(\w+)$/i.test(b)){return this.setHex(THREE.ColorKeywords[b]),this}},copy:function(b){this.r=b.r;this.g=b.g;this.b=b.b;return this},copyGammaToLinear:function(b){this.r=b.r*b.r;this.g=b.g*b.g;this.b=b.b*b.b;return this},copyLinearToGamma:function(b){this.r=Math.sqrt(b.r);this.g=Math.sqrt(b.g);this.b=Math.sqrt(b.b);return this},convertGammaToLinear:function(){var e=this.r,d=this.g,f=this.b;this.r=e*e;this.g=d*d;this.b=f*f;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(){var b={h:0,s:0,l:0};return function(){var a=this.r,p=this.g,o=this.b,n=Math.max(a,p,o),m=Math.min(a,p,o),k,l=(m+n)/2;if(m===n){m=k=0}else{var j=n-m,m=0.5>=l?j/(n+m):j/(2-n-m);switch(n){case a:k=(p-o)/j+(p<o?6:0);break;case p:k=(o-a)/j+2;break;case o:k=(a-p)/j+4}k/=6}b.h=k;b.s=m;b.l=l;return b}}(),getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(f,e,h){var g=this.getHSL();g.h+=f;g.s+=e;g.l+=h;this.setHSL(g.h,g.s,g.l);return this},add:function(b){this.r+=b.r;this.g+=b.g;this.b+=b.b;return this},addColors:function(d,c){this.r=d.r+c.r;this.g=d.g+c.g;this.b=d.b+c.b;return this},addScalar:function(b){this.r+=b;this.g+=b;this.b+=b;return this},multiply:function(b){this.r*=b.r;this.g*=b.g;this.b*=b.b;return this},multiplyScalar:function(b){this.r*=b;this.g*=b;this.b*=b;return this},lerp:function(d,c){this.r+=(d.r-this.r)*c;this.g+=(d.g-this.g)*c;this.b+=(d.b-this.b)*c;return this},equals:function(b){return b.r===this.r&&b.g===this.g&&b.b===this.b},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(f,e,h,g){this.x=f||0;this.y=e||0;this.z=h||0;this.w=void 0!==g?g:1};THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(f,e,h,g){this.x=f;this.y=e;this.z=h;this.w=g;return this},copy:function(b){this.x=b.x;this.y=b.y;this.z=b.z;this.w=b.w;return this},setFromEuler:function(j,i){var p=Math.cos(j.x/2),o=Math.cos(j.y/2),n=Math.cos(j.z/2),m=Math.sin(j.x/2),k=Math.sin(j.y/2),l=Math.sin(j.z/2);void 0===i||"XYZ"===i?(this.x=m*o*n+p*k*l,this.y=p*k*n-m*o*l,this.z=p*o*l+m*k*n,this.w=p*o*n-m*k*l):"YXZ"===i?(this.x=m*o*n+p*k*l,this.y=p*k*n-m*o*l,this.z=p*o*l-m*k*n,this.w=p*o*n+m*k*l):"ZXY"===i?(this.x=m*o*n-p*k*l,this.y=p*k*n+m*o*l,this.z=p*o*l+m*k*n,this.w=p*o*n-m*k*l):"ZYX"===i?(this.x=m*o*n-p*k*l,this.y=p*k*n+m*o*l,this.z=p*o*l-m*k*n,this.w=p*o*n+m*k*l):"YZX"===i?(this.x=m*o*n+p*k*l,this.y=p*k*n+m*o*l,this.z=p*o*l-m*k*n,this.w=p*o*n-m*k*l):"XZY"===i&&(this.x=m*o*n-p*k*l,this.y=p*k*n-m*o*l,this.z=p*o*l+m*k*n,this.w=p*o*n+m*k*l);return this},setFromAxisAngle:function(f,e){var h=e/2,g=Math.sin(h);this.x=f.x*g;this.y=f.y*g;this.z=f.z*g;this.w=Math.cos(h);return this},setFromRotationMatrix:function(t){var s=t.elements,r=s[0],t=s[4],q=s[8],p=s[1],o=s[5],m=s[9],n=s[2],l=s[6],s=s[10],k=r+o+s;0<k?(r=0.5/Math.sqrt(k+1),this.w=0.25/r,this.x=(l-m)*r,this.y=(q-n)*r,this.z=(p-t)*r):r>o&&r>s?(r=2*Math.sqrt(1+r-o-s),this.w=(l-m)/r,this.x=0.25*r,this.y=(t+p)/r,this.z=(q+n)/r):o>s?(r=2*Math.sqrt(1+o-r-s),this.w=(q-n)/r,this.x=(t+p)/r,this.y=0.25*r,this.z=(m+l)/r):(r=2*Math.sqrt(1+s-r-o),this.w=(p-t)/r,this.x=(q+n)/r,this.y=(m+l)/r,this.z=0.25*r);return this},inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var b=this.length();0===b?(this.z=this.y=this.x=0,this.w=1):(b=1/b,this.x*=b,this.y*=b,this.z*=b,this.w*=b);return this},multiply:function(d,c){return void 0!==c?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(d,c)):this.multiplyQuaternions(this,d)},multiplyQuaternions:function(t,s){var r=t.x,q=t.y,p=t.z,o=t.w,m=s.x,n=s.y,l=s.z,k=s.w;this.x=r*k+o*m+q*l-p*n;this.y=q*k+o*n+p*m-r*l;this.z=p*k+o*l+r*n-q*m;this.w=o*k-r*m-q*n-p*l;return this},multiplyVector3:function(b){console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");return b.applyQuaternion(this)},slerp:function(r,q){var p=this.x,o=this.y,n=this.z,m=this.w,k=m*r.w+p*r.x+o*r.y+n*r.z;0>k?(this.w=-r.w,this.x=-r.x,this.y=-r.y,this.z=-r.z,k=-k):this.copy(r);if(1<=k){return this.w=m,this.x=p,this.y=o,this.z=n,this}var l=Math.acos(k),j=Math.sqrt(1-k*k);if(0.001>Math.abs(j)){return this.w=0.5*(m+this.w),this.x=0.5*(p+this.x),this.y=0.5*(o+this.y),this.z=0.5*(n+this.z),this}k=Math.sin((1-q)*l)/j;l=Math.sin(q*l)/j;this.w=m*k+this.w*l;this.x=p*k+this.x*l;this.y=o*k+this.y*l;this.z=n*k+this.z*l;return this},equals:function(b){return b.x===this.x&&b.y===this.y&&b.z===this.z&&b.w===this.w},fromArray:function(b){this.x=b[0];this.y=b[1];this.z=b[2];this.w=b[3];return this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}};THREE.Quaternion.slerp=function(f,e,h,g){return h.copy(f).slerp(e,g)};THREE.Vector2=function(d,c){this.x=d||0;this.y=c||0};THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(d,c){this.x=d;this.y=c;return this},setX:function(b){this.x=b;return this},setY:function(b){this.y=b;return this},setComponent:function(d,c){switch(d){case 0:this.x=c;break;case 1:this.y=c;break;default:throw Error("index is out of range: "+d)}},getComponent:function(b){switch(b){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+b)}},copy:function(b){this.x=b.x;this.y=b.y;return this},add:function(d,c){if(void 0!==c){return console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(d,c)}this.x+=d.x;this.y+=d.y;return this},addVectors:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;return this},addScalar:function(b){this.x+=b;this.y+=b;return this},sub:function(d,c){if(void 0!==c){return console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(d,c)}this.x-=d.x;this.y-=d.y;return this},subVectors:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;return this},divideScalar:function(b){0!==b?(this.x/=b,this.y/=b):this.set(0,0);return this},min:function(b){this.x>b.x&&(this.x=b.x);this.y>b.y&&(this.y=b.y);return this},max:function(b){this.x<b.x&&(this.x=b.x);this.y<b.y&&(this.y=b.y);return this},clamp:function(d,c){this.x<d.x?this.x=d.x:this.x>c.x&&(this.x=c.x);this.y<d.y?this.y=d.y:this.y>c.y&&(this.y=c.y);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(b){return this.x*b.x+this.y*b.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(b){return Math.sqrt(this.distanceToSquared(b))},distanceToSquared:function(d){var c=this.x-d.x,d=this.y-d.y;return c*c+d*d},setLength:function(d){var c=this.length();0!==c&&d!==c&&this.multiplyScalar(d/c);return this},lerp:function(d,c){this.x+=(d.x-this.x)*c;this.y+=(d.y-this.y)*c;return this},equals:function(b){return b.x===this.x&&b.y===this.y},fromArray:function(b){this.x=b[0];this.y=b[1];return this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(e,d,f){this.x=e||0;this.y=d||0;this.z=f||0};THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,d,f){this.x=e;this.y=d;this.z=f;return this},setX:function(b){this.x=b;return this},setY:function(b){this.y=b;return this},setZ:function(b){this.z=b;return this},setComponent:function(d,c){switch(d){case 0:this.x=c;break;case 1:this.y=c;break;case 2:this.z=c;break;default:throw Error("index is out of range: "+d)}},getComponent:function(b){switch(b){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+b)}},copy:function(b){this.x=b.x;this.y=b.y;this.z=b.z;return this},add:function(d,c){if(void 0!==c){return console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(d,c)}this.x+=d.x;this.y+=d.y;this.z+=d.z;return this},addScalar:function(b){this.x+=b;this.y+=b;this.z+=b;return this},addVectors:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;this.z=d.z+c.z;return this},sub:function(d,c){if(void 0!==c){return console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(d,c)}this.x-=d.x;this.y-=d.y;this.z-=d.z;return this},subVectors:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;this.z=d.z-c.z;return this},multiply:function(d,c){if(void 0!==c){return console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(d,c)}this.x*=d.x;this.y*=d.y;this.z*=d.z;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;this.z*=b;return this},multiplyVectors:function(d,c){this.x=d.x*c.x;this.y=d.y*c.y;this.z=d.z*c.z;return this},applyMatrix3:function(f){var e=this.x,h=this.y,g=this.z,f=f.elements;this.x=f[0]*e+f[3]*h+f[6]*g;this.y=f[1]*e+f[4]*h+f[7]*g;this.z=f[2]*e+f[5]*h+f[8]*g;return this},applyMatrix4:function(f){var e=this.x,h=this.y,g=this.z,f=f.elements;this.x=f[0]*e+f[4]*h+f[8]*g+f[12];this.y=f[1]*e+f[5]*h+f[9]*g+f[13];this.z=f[2]*e+f[6]*h+f[10]*g+f[14];return this},applyProjection:function(g){var f=this.x,j=this.y,i=this.z,g=g.elements,h=1/(g[3]*f+g[7]*j+g[11]*i+g[15]);this.x=(g[0]*f+g[4]*j+g[8]*i+g[12])*h;this.y=(g[1]*f+g[5]*j+g[9]*i+g[13])*h;this.z=(g[2]*f+g[6]*j+g[10]*i+g[14])*h;return this},applyQuaternion:function(t){var s=this.x,r=this.y,q=this.z,p=t.x,o=t.y,m=t.z,t=t.w,n=t*s+o*q-m*r,l=t*r+m*s-p*q,k=t*q+p*r-o*s,s=-p*s-o*r-m*q;this.x=n*t+s*-p+l*-m-k*-o;this.y=l*t+s*-o+k*-p-n*-m;this.z=k*t+s*-m+n*-o-l*-p;return this},transformDirection:function(f){var e=this.x,h=this.y,g=this.z,f=f.elements;this.x=f[0]*e+f[4]*h+f[8]*g;this.y=f[1]*e+f[5]*h+f[9]*g;this.z=f[2]*e+f[6]*h+f[10]*g;this.normalize();return this},divide:function(b){this.x/=b.x;this.y/=b.y;this.z/=b.z;return this},divideScalar:function(b){0!==b?(this.x/=b,this.y/=b,this.z/=b):this.z=this.y=this.x=0;return this},min:function(b){this.x>b.x&&(this.x=b.x);this.y>b.y&&(this.y=b.y);this.z>b.z&&(this.z=b.z);return this},max:function(b){this.x<b.x&&(this.x=b.x);this.y<b.y&&(this.y=b.y);this.z<b.z&&(this.z=b.z);return this},clamp:function(d,c){this.x<d.x?this.x=d.x:this.x>c.x&&(this.x=c.x);this.y<d.y?this.y=d.y:this.y>c.y&&(this.y=c.y);this.z<d.z?this.z=d.z:this.z>c.z&&(this.z=c.z);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(b){return this.x*b.x+this.y*b.y+this.z*b.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(d){var c=this.length();0!==c&&d!==c&&this.multiplyScalar(d/c);return this},lerp:function(d,c){this.x+=(d.x-this.x)*c;this.y+=(d.y-this.y)*c;this.z+=(d.z-this.z)*c;return this},cross:function(g,f){if(void 0!==f){return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(g,f)}var j=this.x,i=this.y,h=this.z;this.x=i*g.z-h*g.y;this.y=h*g.x-j*g.z;this.z=j*g.y-i*g.x;return this},crossVectors:function(d,c){this.x=d.y*c.z-d.z*c.y;this.y=d.z*c.x-d.x*c.z;this.z=d.x*c.y-d.y*c.x;return this},angleTo:function(b){b=this.dot(b)/(this.length()*b.length());return Math.acos(THREE.Math.clamp(b,-1,1))},distanceTo:function(b){return Math.sqrt(this.distanceToSquared(b))},distanceToSquared:function(e){var d=this.x-e.x,f=this.y-e.y,e=this.z-e.z;return d*d+f*f+e*e},setEulerFromRotationMatrix:function(x,w){function v(b){return Math.min(Math.max(b,-1),1)}var u=x.elements,t=u[0],s=u[4],q=u[8],r=u[1],p=u[5],o=u[9],m=u[2],k=u[6],u=u[10];void 0===w||"XYZ"===w?(this.y=Math.asin(v(q)),0.99999>Math.abs(q)?(this.x=Math.atan2(-o,u),this.z=Math.atan2(-s,t)):(this.x=Math.atan2(k,p),this.z=0)):"YXZ"===w?(this.x=Math.asin(-v(o)),0.99999>Math.abs(o)?(this.y=Math.atan2(q,u),this.z=Math.atan2(r,p)):(this.y=Math.atan2(-m,t),this.z=0)):"ZXY"===w?(this.x=Math.asin(v(k)),0.99999>Math.abs(k)?(this.y=Math.atan2(-m,u),this.z=Math.atan2(-s,p)):(this.y=0,this.z=Math.atan2(r,t))):"ZYX"===w?(this.y=Math.asin(-v(m)),0.99999>Math.abs(m)?(this.x=Math.atan2(k,u),this.z=Math.atan2(r,t)):(this.x=0,this.z=Math.atan2(-s,p))):"YZX"===w?(this.z=Math.asin(v(r)),0.99999>Math.abs(r)?(this.x=Math.atan2(-o,p),this.y=Math.atan2(-m,t)):(this.x=0,this.y=Math.atan2(q,u))):"XZY"===w&&(this.z=Math.asin(-v(s)),0.99999>Math.abs(s)?(this.x=Math.atan2(k,p),this.y=Math.atan2(q,t)):(this.x=Math.atan2(-o,u),this.y=0));return this},setEulerFromQuaternion:function(i,g){function n(b){return Math.min(Math.max(b,-1),1)}var m=i.x*i.x,l=i.y*i.y,k=i.z*i.z,j=i.w*i.w;void 0===g||"XYZ"===g?(this.x=Math.atan2(2*(i.x*i.w-i.y*i.z),j-m-l+k),this.y=Math.asin(n(2*(i.x*i.z+i.y*i.w))),this.z=Math.atan2(2*(i.z*i.w-i.x*i.y),j+m-l-k)):"YXZ"===g?(this.x=Math.asin(n(2*(i.x*i.w-i.y*i.z))),this.y=Math.atan2(2*(i.x*i.z+i.y*i.w),j-m-l+k),this.z=Math.atan2(2*(i.x*i.y+i.z*i.w),j-m+l-k)):"ZXY"===g?(this.x=Math.asin(n(2*(i.x*i.w+i.y*i.z))),this.y=Math.atan2(2*(i.y*i.w-i.z*i.x),j-m-l+k),this.z=Math.atan2(2*(i.z*i.w-i.x*i.y),j-m+l-k)):"ZYX"===g?(this.x=Math.atan2(2*(i.x*i.w+i.z*i.y),j-m-l+k),this.y=Math.asin(n(2*(i.y*i.w-i.x*i.z))),this.z=Math.atan2(2*(i.x*i.y+i.z*i.w),j+m-l-k)):"YZX"===g?(this.x=Math.atan2(2*(i.x*i.w-i.z*i.y),j-m+l-k),this.y=Math.atan2(2*(i.y*i.w-i.x*i.z),j+m-l-k),this.z=Math.asin(n(2*(i.x*i.y+i.z*i.w)))):"XZY"===g&&(this.x=Math.atan2(2*(i.x*i.w+i.y*i.z),j-m+l-k),this.y=Math.atan2(2*(i.x*i.z+i.y*i.w),j+m-l-k),this.z=Math.asin(n(2*(i.z*i.w-i.x*i.y))));return this},getPositionFromMatrix:function(b){this.x=b.elements[12];this.y=b.elements[13];this.z=b.elements[14];return this},getScaleFromMatrix:function(e){var d=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),f=this.set(e.elements[4],e.elements[5],e.elements[6]).length(),e=this.set(e.elements[8],e.elements[9],e.elements[10]).length();this.x=d;this.y=f;this.z=e;return this},getColumnFromMatrix:function(f,e){var h=4*f,g=e.elements;this.x=g[h];this.y=g[h+1];this.z=g[h+2];return this},equals:function(b){return b.x===this.x&&b.y===this.y&&b.z===this.z},fromArray:function(b){this.x=b[0];this.y=b[1];this.z=b[2];return this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.extend(THREE.Vector3.prototype,{applyEuler:function(){var b=new THREE.Quaternion;return function(a,f){var e=b.setFromEuler(a,f);this.applyQuaternion(e);return this}}(),applyAxisAngle:function(){var b=new THREE.Quaternion;return function(a,f){var e=b.setFromAxisAngle(a,f);this.applyQuaternion(e);return this}}(),projectOnVector:function(){var b=new THREE.Vector3;return function(a){b.copy(a).normalize();a=this.dot(b);return this.copy(b).multiplyScalar(a)}}(),projectOnPlane:function(){var b=new THREE.Vector3;return function(a){b.copy(this).projectOnVector(a);return this.sub(b)}}(),reflect:function(){var b=new THREE.Vector3;return function(a){b.copy(this).projectOnVector(a).multiplyScalar(2);return this.subVectors(b,this)}}()});THREE.Vector4=function(f,e,h,g){this.x=f||0;this.y=e||0;this.z=h||0;this.w=void 0!==g?g:1};THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(f,e,h,g){this.x=f;this.y=e;this.z=h;this.w=g;return this},setX:function(b){this.x=b;return this},setY:function(b){this.y=b;return this},setZ:function(b){this.z=b;return this},setW:function(b){this.w=b;return this},setComponent:function(d,c){switch(d){case 0:this.x=c;break;case 1:this.y=c;break;case 2:this.z=c;break;case 3:this.w=c;break;default:throw Error("index is out of range: "+d)}},getComponent:function(b){switch(b){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+b)}},copy:function(b){this.x=b.x;this.y=b.y;this.z=b.z;this.w=void 0!==b.w?b.w:1;return this},add:function(d,c){if(void 0!==c){return console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(d,c)}this.x+=d.x;this.y+=d.y;this.z+=d.z;this.w+=d.w;return this},addScalar:function(b){this.x+=b;this.y+=b;this.z+=b;this.w+=b;return this},addVectors:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;this.z=d.z+c.z;this.w=d.w+c.w;return this},sub:function(d,c){if(void 0!==c){return console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(d,c)}this.x-=d.x;this.y-=d.y;this.z-=d.z;this.w-=d.w;return this},subVectors:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;this.z=d.z-c.z;this.w=d.w-c.w;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;this.z*=b;this.w*=b;return this},applyMatrix4:function(g){var f=this.x,j=this.y,i=this.z,h=this.w,g=g.elements;this.x=g[0]*f+g[4]*j+g[8]*i+g[12]*h;this.y=g[1]*f+g[5]*j+g[9]*i+g[13]*h;this.z=g[2]*f+g[6]*j+g[10]*i+g[14]*h;this.w=g[3]*f+g[7]*j+g[11]*i+g[15]*h;return this},divideScalar:function(b){0!==b?(this.x/=b,this.y/=b,this.z/=b,this.w/=b):(this.z=this.y=this.x=0,this.w=1);return this},setAxisAngleFromQuaternion:function(d){this.w=2*Math.acos(d.w);var c=Math.sqrt(1-d.w*d.w);0.0001>c?(this.x=1,this.z=this.y=0):(this.x=d.x/c,this.y=d.y/c,this.z=d.z/c);return this},setAxisAngleFromRotationMatrix:function(t){var s,r,q,t=t.elements,p=t[0];q=t[4];var o=t[8],m=t[1],n=t[5],l=t[9];r=t[2];s=t[6];var k=t[10];if(0.01>Math.abs(q-m)&&0.01>Math.abs(o-r)&&0.01>Math.abs(l-s)){if(0.1>Math.abs(q+m)&&0.1>Math.abs(o+r)&&0.1>Math.abs(l+s)&&0.1>Math.abs(p+n+k-3)){return this.set(1,0,0,0),this}t=Math.PI;p=(p+1)/2;n=(n+1)/2;k=(k+1)/2;q=(q+m)/4;o=(o+r)/4;l=(l+s)/4;p>n&&p>k?0.01>p?(s=0,q=r=0.707106781):(s=Math.sqrt(p),r=q/s,q=o/s):n>k?0.01>n?(s=0.707106781,r=0,q=0.707106781):(r=Math.sqrt(n),s=q/r,q=l/r):0.01>k?(r=s=0.707106781,q=0):(q=Math.sqrt(k),s=o/q,r=l/q);this.set(s,r,q,t);return this}t=Math.sqrt((s-l)*(s-l)+(o-r)*(o-r)+(m-q)*(m-q));0.001>Math.abs(t)&&(t=1);this.x=(s-l)/t;this.y=(o-r)/t;this.z=(m-q)/t;this.w=Math.acos((p+n+k-1)/2);return this},min:function(b){this.x>b.x&&(this.x=b.x);this.y>b.y&&(this.y=b.y);this.z>b.z&&(this.z=b.z);this.w>b.w&&(this.w=b.w);return this},max:function(b){this.x<b.x&&(this.x=b.x);this.y<b.y&&(this.y=b.y);this.z<b.z&&(this.z=b.z);this.w<b.w&&(this.w=b.w);return this},clamp:function(d,c){this.x<d.x?this.x=d.x:this.x>c.x&&(this.x=c.x);this.y<d.y?this.y=d.y:this.y>c.y&&(this.y=c.y);this.z<d.z?this.z=d.z:this.z>c.z&&(this.z=c.z);this.w<d.w?this.w=d.w:this.w>c.w&&(this.w=c.w);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(b){return this.x*b.x+this.y*b.y+this.z*b.z+this.w*b.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(d){var c=this.length();0!==c&&d!==c&&this.multiplyScalar(d/c);return this},lerp:function(d,c){this.x+=(d.x-this.x)*c;this.y+=(d.y-this.y)*c;this.z+=(d.z-this.z)*c;this.w+=(d.w-this.w)*c;return this},equals:function(b){return b.x===this.x&&b.y===this.y&&b.z===this.z&&b.w===this.w},fromArray:function(b){this.x=b[0];this.y=b[1];this.z=b[2];this.w=b[3];return this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}};THREE.Line3=function(d,c){this.start=void 0!==d?d:new THREE.Vector3;this.end=void 0!==c?c:new THREE.Vector3};THREE.Line3.prototype={constructor:THREE.Line3,set:function(d,c){this.start.copy(d);this.end.copy(c);return this},copy:function(b){this.start.copy(b.start);this.end.copy(b.end);return this},center:function(b){return(b||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(0.5)},delta:function(b){return(b||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,d){var f=d||new THREE.Vector3;return this.delta(f).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(f,b){d.subVectors(f,this.start);c.subVectors(this.end,this.start);var a=c.dot(c),a=c.dot(d)/a;b&&(a=THREE.Math.clamp(a,0,1));return a}}(),closestPointToPoint:function(e,d,f){e=this.closestPointToPointParameter(e,d);f=f||new THREE.Vector3;return this.delta(f).multiplyScalar(e).add(this.start)},applyMatrix4:function(b){this.start.applyMatrix4(b);this.end.applyMatrix4(b);return this},equals:function(b){return b.start.equals(this.start)&&b.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}};THREE.Box2=function(d,c){this.min=void 0!==d?d:new THREE.Vector2(Infinity,Infinity);this.max=void 0!==c?c:new THREE.Vector2(-Infinity,-Infinity)};THREE.Box2.prototype={constructor:THREE.Box2,set:function(d,c){this.min.copy(d);this.max.copy(c);return this},setFromPoints:function(f){if(0<f.length){var e=f[0];this.min.copy(e);this.max.copy(e);for(var h=1,g=f.length;h<g;h++){e=f[h],e.x<this.min.x?this.min.x=e.x:e.x>this.max.x&&(this.max.x=e.x),e.y<this.min.y?this.min.y=e.y:e.y>this.max.y&&(this.max.y=e.y)}}else{this.makeEmpty()}return this},setFromCenterAndSize:function(){var b=new THREE.Vector2;return function(a,f){var e=b.copy(f).multiplyScalar(0.5);this.min.copy(a).sub(e);this.max.copy(a).add(e);return this}}(),copy:function(b){this.min.copy(b.min);this.max.copy(b.max);return this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(b){return(b||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(b){return(b||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(b){this.min.min(b);this.max.max(b);return this},expandByVector:function(b){this.min.sub(b);this.max.add(b);return this},expandByScalar:function(b){this.min.addScalar(-b);this.max.addScalar(b);return this},containsPoint:function(b){return b.x<this.min.x||b.x>this.max.x||b.y<this.min.y||b.y>this.max.y?!1:!0},containsBox:function(b){return this.min.x<=b.min.x&&b.max.x<=this.max.x&&this.min.y<=b.min.y&&b.max.y<=this.max.y?!0:!1},getParameter:function(b){return new THREE.Vector2((b.x-this.min.x)/(this.max.x-this.min.x),(b.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(b){return b.max.x<this.min.x||b.min.x>this.max.x||b.max.y<this.min.y||b.min.y>this.max.y?!1:!0},clampPoint:function(d,c){return(c||new THREE.Vector2).copy(d).clamp(this.min,this.max)},distanceToPoint:function(){var b=new THREE.Vector2;return function(a){return b.copy(a).clamp(this.min,this.max).sub(a).length()}}(),intersect:function(b){this.min.max(b.min);this.max.min(b.max);return this},union:function(b){this.min.min(b.min);this.max.max(b.max);return this},translate:function(b){this.min.add(b);this.max.add(b);return this},equals:function(b){return b.min.equals(this.min)&&b.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}};THREE.Box3=function(d,c){this.min=void 0!==d?d:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==c?c:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};THREE.Box3.prototype={constructor:THREE.Box3,set:function(d,c){this.min.copy(d);this.max.copy(c);return this},setFromPoints:function(f){if(0<f.length){var e=f[0];this.min.copy(e);this.max.copy(e);for(var h=1,g=f.length;h<g;h++){e=f[h],e.x<this.min.x?this.min.x=e.x:e.x>this.max.x&&(this.max.x=e.x),e.y<this.min.y?this.min.y=e.y:e.y>this.max.y&&(this.max.y=e.y),e.z<this.min.z?this.min.z=e.z:e.z>this.max.z&&(this.max.z=e.z)}}else{this.makeEmpty()}return this},setFromCenterAndSize:function(){var b=new THREE.Vector3;return function(a,f){var e=b.copy(f).multiplyScalar(0.5);this.min.copy(a).sub(e);this.max.copy(a).add(e);return this}}(),copy:function(b){this.min.copy(b.min);this.max.copy(b.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(b){return(b||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(b){return(b||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(b){this.min.min(b);this.max.max(b);return this},expandByVector:function(b){this.min.sub(b);this.max.add(b);return this},expandByScalar:function(b){this.min.addScalar(-b);this.max.addScalar(b);return this},containsPoint:function(b){return b.x<this.min.x||b.x>this.max.x||b.y<this.min.y||b.y>this.max.y||b.z<this.min.z||b.z>this.max.z?!1:!0},containsBox:function(b){return this.min.x<=b.min.x&&b.max.x<=this.max.x&&this.min.y<=b.min.y&&b.max.y<=this.max.y&&this.min.z<=b.min.z&&b.max.z<=this.max.z?!0:!1},getParameter:function(b){return new THREE.Vector3((b.x-this.min.x)/(this.max.x-this.min.x),(b.y-this.min.y)/(this.max.y-this.min.y),(b.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(b){return b.max.x<this.min.x||b.min.x>this.max.x||b.max.y<this.min.y||b.min.y>this.max.y||b.max.z<this.min.z||b.min.z>this.max.z?!1:!0},clampPoint:function(d,c){return(c||new THREE.Vector3).copy(d).clamp(this.min,this.max)},distanceToPoint:function(){var b=new THREE.Vector3;return function(a){return b.copy(a).clamp(this.min,this.max).sub(a).length()}}(),getBoundingSphere:function(){var b=new THREE.Vector3;return function(a){a=a||new THREE.Sphere;a.center=this.center();a.radius=0.5*this.size(b).length();return a}}(),intersect:function(b){this.min.max(b.min);this.max.min(b.max);return this},union:function(b){this.min.min(b.min);this.max.max(b.max);return this},applyMatrix4:function(){var b=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(a){b[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(a);b[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(a);b[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(a);b[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(a);b[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(a);b[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(a);b[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(a);b[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(a);this.makeEmpty();this.setFromPoints(b);return this}}(),translate:function(b){this.min.add(b);this.max.add(b);return this},equals:function(b){return b.min.equals(this.min)&&b.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}};THREE.Matrix3=function(r,q,p,o,n,m,k,l,j){this.elements=new Float32Array(9);this.set(void 0!==r?r:1,q||0,p||0,o||0,void 0!==n?n:1,m||0,k||0,l||0,void 0!==j?j:1)};THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(t,s,r,q,p,o,m,n,l){var k=this.elements;k[0]=t;k[3]=s;k[6]=r;k[1]=q;k[4]=p;k[7]=o;k[2]=m;k[5]=n;k[8]=l;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},copy:function(b){b=b.elements;this.set(b[0],b[3],b[6],b[1],b[4],b[7],b[2],b[5],b[8]);return this},multiplyVector3:function(b){console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return b.applyMatrix3(this)},multiplyVector3Array:function(){var b=new THREE.Vector3;return function(a){for(var f=0,e=a.length;f<e;f+=3){b.x=a[f],b.y=a[f+1],b.z=a[f+2],b.applyMatrix3(this),a[f]=b.x,a[f+1]=b.y,a[f+2]=b.z}return a}}(),multiplyScalar:function(d){var c=this.elements;c[0]*=d;c[3]*=d;c[6]*=d;c[1]*=d;c[4]*=d;c[7]*=d;c[2]*=d;c[5]*=d;c[8]*=d;return this},determinant:function(){var r=this.elements,q=r[0],p=r[1],o=r[2],n=r[3],m=r[4],k=r[5],l=r[6],j=r[7],r=r[8];return q*m*r-q*k*j-p*n*r+p*k*l+o*n*j-o*m*l},getInverse:function(f,e){var h=f.elements,g=this.elements;g[0]=h[10]*h[5]-h[6]*h[9];g[1]=-h[10]*h[1]+h[2]*h[9];g[2]=h[6]*h[1]-h[2]*h[5];g[3]=-h[10]*h[4]+h[6]*h[8];g[4]=h[10]*h[0]-h[2]*h[8];g[5]=-h[6]*h[0]+h[2]*h[4];g[6]=h[9]*h[4]-h[5]*h[8];g[7]=-h[9]*h[0]+h[1]*h[8];g[8]=h[5]*h[0]-h[1]*h[4];h=h[0]*g[0]+h[1]*g[3]+h[2]*g[6];if(0===h){if(e){throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0")}console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/h);return this},transpose:function(){var d,c=this.elements;d=c[1];c[1]=c[3];c[3]=d;d=c[2];c[2]=c[6];c[6]=d;d=c[5];c[5]=c[7];c[7]=d;return this},getNormalMatrix:function(b){this.getInverse(b).transpose();return this},transposeIntoArray:function(d){var c=this.elements;d[0]=c[0];d[1]=c[3];d[2]=c[6];d[3]=c[1];d[4]=c[4];d[5]=c[7];d[6]=c[2];d[7]=c[5];d[8]=c[8];return this},clone:function(){var b=this.elements;return new THREE.Matrix3(b[0],b[3],b[6],b[1],b[4],b[7],b[2],b[5],b[8])}};THREE.Matrix4=function(G,F,E,D,C,B,z,A,y,x,w,u,v,o,H,k){var s=this.elements=new Float32Array(16);s[0]=void 0!==G?G:1;s[4]=F||0;s[8]=E||0;s[12]=D||0;s[1]=C||0;s[5]=void 0!==B?B:1;s[9]=z||0;s[13]=A||0;s[2]=y||0;s[6]=x||0;s[10]=void 0!==w?w:1;s[14]=u||0;s[3]=v||0;s[7]=o||0;s[11]=H||0;s[15]=void 0!==k?k:1};THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(G,F,E,D,C,B,z,A,y,x,w,u,v,o,H,k){var s=this.elements;s[0]=G;s[4]=F;s[8]=E;s[12]=D;s[1]=C;s[5]=B;s[9]=z;s[13]=A;s[2]=y;s[6]=x;s[10]=w;s[14]=u;s[3]=v;s[7]=o;s[11]=H;s[15]=k;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(b){b=b.elements;this.set(b[0],b[4],b[8],b[12],b[1],b[5],b[9],b[13],b[2],b[6],b[10],b[14],b[3],b[7],b[11],b[15]);return this},extractPosition:function(b){console.warn("DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition().");return this.copyPosition(b)},copyPosition:function(d){var c=this.elements,d=d.elements;c[12]=d[12];c[13]=d[13];c[14]=d[14];return this},extractRotation:function(){var b=new THREE.Vector3;return function(a){var j=this.elements,a=a.elements,i=1/b.set(a[0],a[1],a[2]).length(),h=1/b.set(a[4],a[5],a[6]).length(),g=1/b.set(a[8],a[9],a[10]).length();j[0]=a[0]*i;j[1]=a[1]*i;j[2]=a[2]*i;j[4]=a[4]*h;j[5]=a[5]*h;j[6]=a[6]*h;j[8]=a[8]*g;j[9]=a[9]*g;j[10]=a[10]*g;return this}}(),setRotationFromEuler:function(d,c){console.warn("DEPRECATED: Matrix4's .setRotationFromEuler() has been deprecated in favor of makeRotationFromEuler.  Please update your code.");return this.makeRotationFromEuler(d,c)},makeRotationFromEuler:function(z,y){var x=this.elements,w=z.x,v=z.y,u=z.z,s=Math.cos(w),w=Math.sin(w),t=Math.cos(v),v=Math.sin(v),r=Math.cos(u),u=Math.sin(u);if(void 0===y||"XYZ"===y){var q=s*r,p=s*u,k=w*r,o=w*u;x[0]=t*r;x[4]=-t*u;x[8]=v;x[1]=p+k*v;x[5]=q-o*v;x[9]=-w*t;x[2]=o-q*v;x[6]=k+p*v;x[10]=s*t}else{"YXZ"===y?(q=t*r,p=t*u,k=v*r,o=v*u,x[0]=q+o*w,x[4]=k*w-p,x[8]=s*v,x[1]=s*u,x[5]=s*r,x[9]=-w,x[2]=p*w-k,x[6]=o+q*w,x[10]=s*t):"ZXY"===y?(q=t*r,p=t*u,k=v*r,o=v*u,x[0]=q-o*w,x[4]=-s*u,x[8]=k+p*w,x[1]=p+k*w,x[5]=s*r,x[9]=o-q*w,x[2]=-s*v,x[6]=w,x[10]=s*t):"ZYX"===y?(q=s*r,p=s*u,k=w*r,o=w*u,x[0]=t*r,x[4]=k*v-p,x[8]=q*v+o,x[1]=t*u,x[5]=o*v+q,x[9]=p*v-k,x[2]=-v,x[6]=w*t,x[10]=s*t):"YZX"===y?(q=s*t,p=s*v,k=w*t,o=w*v,x[0]=t*r,x[4]=o-q*u,x[8]=k*u+p,x[1]=u,x[5]=s*r,x[9]=-w*r,x[2]=-v*r,x[6]=p*u+k,x[10]=q-o*u):"XZY"===y&&(q=s*t,p=s*v,k=w*t,o=w*v,x[0]=t*r,x[4]=-u,x[8]=v*r,x[1]=q*u+o,x[5]=s*r,x[9]=p*u-k,x[2]=k*u-p,x[6]=w*r,x[10]=o*u+q)}x[3]=0;x[7]=0;x[11]=0;x[12]=0;x[13]=0;x[14]=0;x[15]=1;return this},setRotationFromQuaternion:function(b){console.warn("DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code.");return this.makeRotationFromQuaternion(b)},makeRotationFromQuaternion:function(v){var u=this.elements,t=v.x,s=v.y,r=v.z,q=v.w,o=t+t,p=s+s,n=r+r,v=t*o,m=t*p,t=t*n,k=s*p,s=s*n,r=r*n,o=q*o,p=q*p,q=q*n;u[0]=1-(k+r);u[4]=m-q;u[8]=t+p;u[1]=m+q;u[5]=1-(v+r);u[9]=s-o;u[2]=t-p;u[6]=s+o;u[10]=1-(v+k);u[3]=0;u[7]=0;u[11]=0;u[12]=0;u[13]=0;u[14]=0;u[15]=1;return this},lookAt:function(){var e=new THREE.Vector3,d=new THREE.Vector3,f=new THREE.Vector3;return function(g,c,b){var a=this.elements;f.subVectors(g,c).normalize();0===f.length()&&(f.z=1);e.crossVectors(b,f).normalize();0===e.length()&&(f.x+=0.0001,e.crossVectors(b,f).normalize());d.crossVectors(f,e);a[0]=e.x;a[4]=d.x;a[8]=f.x;a[1]=e.y;a[5]=d.y;a[9]=f.y;a[2]=e.z;a[6]=d.z;a[10]=f.z;return this}}(),multiply:function(d,c){return void 0!==c?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(d,c)):this.multiplyMatrices(this,d)},multiplyMatrices:function(ar,aq){var ap=ar.elements,ao=aq.elements,an=this.elements,am=ap[0],ak=ap[4],al=ap[8],aj=ap[12],ai=ap[1],ah=ap[5],af=ap[9],ag=ap[13],ac=ap[2],W=ap[6],aa=ap[10],ae=ap[14],X=ap[3],U=ap[7],P=ap[11],ap=ap[15],T=ao[0],S=ao[4],Q=ao[8],V=ao[12],ad=ao[1],ab=ao[5],x=ao[9],Y=ao[13],O=ao[2],o=ao[6],E=ao[10],u=ao[14],R=ao[3],k=ao[7],D=ao[11],ao=ao[15];an[0]=am*T+ak*ad+al*O+aj*R;an[4]=am*S+ak*ab+al*o+aj*k;an[8]=am*Q+ak*x+al*E+aj*D;an[12]=am*V+ak*Y+al*u+aj*ao;an[1]=ai*T+ah*ad+af*O+ag*R;an[5]=ai*S+ah*ab+af*o+ag*k;an[9]=ai*Q+ah*x+af*E+ag*D;an[13]=ai*V+ah*Y+af*u+ag*ao;an[2]=ac*T+W*ad+aa*O+ae*R;an[6]=ac*S+W*ab+aa*o+ae*k;an[10]=ac*Q+W*x+aa*E+ae*D;an[14]=ac*V+W*Y+aa*u+ae*ao;an[3]=X*T+U*ad+P*O+ap*R;an[7]=X*S+U*ab+P*o+ap*k;an[11]=X*Q+U*x+P*E+ap*D;an[15]=X*V+U*Y+P*u+ap*ao;return this},multiplyToArray:function(f,e,h){var g=this.elements;this.multiplyMatrices(f,e);h[0]=g[0];h[1]=g[1];h[2]=g[2];h[3]=g[3];h[4]=g[4];h[5]=g[5];h[6]=g[6];h[7]=g[7];h[8]=g[8];h[9]=g[9];h[10]=g[10];h[11]=g[11];h[12]=g[12];h[13]=g[13];h[14]=g[14];h[15]=g[15];return this},multiplyScalar:function(d){var c=this.elements;c[0]*=d;c[4]*=d;c[8]*=d;c[12]*=d;c[1]*=d;c[5]*=d;c[9]*=d;c[13]*=d;c[2]*=d;c[6]*=d;c[10]*=d;c[14]*=d;c[3]*=d;c[7]*=d;c[11]*=d;c[15]*=d;return this},multiplyVector3:function(b){console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");return b.applyProjection(this)},multiplyVector4:function(b){console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return b.applyMatrix4(this)},multiplyVector3Array:function(){var b=new THREE.Vector3;return function(a){for(var f=0,e=a.length;f<e;f+=3){b.x=a[f],b.y=a[f+1],b.z=a[f+2],b.applyProjection(this),a[f]=b.x,a[f+1]=b.y,a[f+2]=b.z}return a}}(),rotateAxis:function(b){console.warn("DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");b.transformDirection(this)},crossVector:function(b){console.warn("DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");return b.applyMatrix4(this)},determinant:function(){var z=this.elements,y=z[0],x=z[4],w=z[8],v=z[12],u=z[1],s=z[5],t=z[9],r=z[13],q=z[2],p=z[6],k=z[10],o=z[14];return z[3]*(+v*t*p-w*r*p-v*s*k+x*r*k+w*s*o-x*t*o)+z[7]*(+y*t*o-y*r*k+v*u*k-w*u*o+w*r*q-v*t*q)+z[11]*(+y*r*p-y*s*o-v*u*p+x*u*o+v*s*q-x*r*q)+z[15]*(-w*s*q-y*t*p+y*s*k+w*u*p-x*u*k+x*t*q)},transpose:function(){var d=this.elements,c;c=d[1];d[1]=d[4];d[4]=c;c=d[2];d[2]=d[8];d[8]=c;c=d[6];d[6]=d[9];d[9]=c;c=d[3];d[3]=d[12];d[12]=c;c=d[7];d[7]=d[13];d[13]=c;c=d[11];d[11]=d[14];d[14]=c;return this},flattenToArray:function(d){var c=this.elements;d[0]=c[0];d[1]=c[1];d[2]=c[2];d[3]=c[3];d[4]=c[4];d[5]=c[5];d[6]=c[6];d[7]=c[7];d[8]=c[8];d[9]=c[9];d[10]=c[10];d[11]=c[11];d[12]=c[12];d[13]=c[13];d[14]=c[14];d[15]=c[15];return d},flattenToArrayOffset:function(e,d){var f=this.elements;e[d]=f[0];e[d+1]=f[1];e[d+2]=f[2];e[d+3]=f[3];e[d+4]=f[4];e[d+5]=f[5];e[d+6]=f[6];e[d+7]=f[7];e[d+8]=f[8];e[d+9]=f[9];e[d+10]=f[10];e[d+11]=f[11];e[d+12]=f[12];e[d+13]=f[13];e[d+14]=f[14];e[d+15]=f[15];return e},getPosition:function(){var b=new THREE.Vector3;return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.getPositionFromMatrix( matrix ) instead.");var a=this.elements;return b.set(a[12],a[13],a[14])}}(),setPosition:function(d){var c=this.elements;c[12]=d.x;c[13]=d.y;c[14]=d.z;return this},getInverse:function(N,M){var L=this.elements,K=N.elements,J=K[0],I=K[4],G=K[8],H=K[12],F=K[1],E=K[5],D=K[9],B=K[13],C=K[2],z=K[6],u=K[10],x=K[14],A=K[3],w=K[7],o=K[11],k=K[15];L[0]=D*x*w-B*u*w+B*z*o-E*x*o-D*z*k+E*u*k;L[4]=H*u*w-G*x*w-H*z*o+I*x*o+G*z*k-I*u*k;L[8]=G*B*w-H*D*w+H*E*o-I*B*o-G*E*k+I*D*k;L[12]=H*D*z-G*B*z-H*E*u+I*B*u+G*E*x-I*D*x;L[1]=B*u*A-D*x*A-B*C*o+F*x*o+D*C*k-F*u*k;L[5]=G*x*A-H*u*A+H*C*o-J*x*o-G*C*k+J*u*k;L[9]=H*D*A-G*B*A-H*F*o+J*B*o+G*F*k-J*D*k;L[13]=G*B*C-H*D*C+H*F*u-J*B*u-G*F*x+J*D*x;L[2]=E*x*A-B*z*A+B*C*w-F*x*w-E*C*k+F*z*k;L[6]=H*z*A-I*x*A-H*C*w+J*x*w+I*C*k-J*z*k;L[10]=I*B*A-H*E*A+H*F*w-J*B*w-I*F*k+J*E*k;L[14]=H*E*C-I*B*C-H*F*z+J*B*z+I*F*x-J*E*x;L[3]=D*z*A-E*u*A-D*C*w+F*u*w+E*C*o-F*z*o;L[7]=I*u*A-G*z*A+G*C*w-J*u*w-I*C*o+J*z*o;L[11]=G*E*A-I*D*A-G*F*w+J*D*w+I*F*o-J*E*o;L[15]=I*D*C-G*E*C+G*F*z-J*D*z-I*F*u+J*E*u;L=K[0]*L[0]+K[1]*L[4]+K[2]*L[8]+K[3]*L[12];if(0==L){if(M){throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0")}console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/L);return this},translate:function(){console.warn("DEPRECATED: Matrix4's .translate() has been removed.")},rotateX:function(){console.warn("DEPRECATED: Matrix4's .rotateX() has been removed.")},rotateY:function(){console.warn("DEPRECATED: Matrix4's .rotateY() has been removed.")},rotateZ:function(){console.warn("DEPRECATED: Matrix4's .rotateZ() has been removed.")},rotateByAxis:function(){console.warn("DEPRECATED: Matrix4's .rotateByAxis() has been removed.")},scale:function(f){var e=this.elements,h=f.x,g=f.y,f=f.z;e[0]*=h;e[4]*=g;e[8]*=f;e[1]*=h;e[5]*=g;e[9]*=f;e[2]*=h;e[6]*=g;e[10]*=f;e[3]*=h;e[7]*=g;e[11]*=f;return this},getMaxScaleOnAxis:function(){var b=this.elements;return Math.sqrt(Math.max(b[0]*b[0]+b[1]*b[1]+b[2]*b[2],Math.max(b[4]*b[4]+b[5]*b[5]+b[6]*b[6],b[8]*b[8]+b[9]*b[9]+b[10]*b[10])))},makeTranslation:function(e,d,f){this.set(1,0,0,e,0,1,0,d,0,0,1,f,0,0,0,1);return this},makeRotationX:function(d){var c=Math.cos(d),d=Math.sin(d);this.set(1,0,0,0,0,c,-d,0,0,d,c,0,0,0,0,1);return this},makeRotationY:function(d){var c=Math.cos(d),d=Math.sin(d);this.set(c,0,d,0,0,1,0,0,-d,0,c,0,0,0,0,1);return this},makeRotationZ:function(d){var c=Math.cos(d),d=Math.sin(d);this.set(c,-d,0,0,d,c,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(t,s){var r=Math.cos(s),q=Math.sin(s),p=1-r,o=t.x,m=t.y,n=t.z,l=p*o,k=p*m;this.set(l*o+r,l*m-q*n,l*n+q*m,0,l*m+q*n,k*m+r,k*n-q*o,0,l*n-q*m,k*n+q*o,p*n*n+r,0,0,0,0,1);return this},makeScale:function(e,d,f){this.set(e,0,0,0,0,d,0,0,0,0,f,0,0,0,0,1);return this},compose:function(e,d,f){console.warn("DEPRECATED: Matrix4's .compose() has been deprecated in favor of makeFromPositionQuaternionScale. Please update your code.");return this.makeFromPositionQuaternionScale(e,d,f)},makeFromPositionQuaternionScale:function(e,d,f){this.makeRotationFromQuaternion(d);this.scale(f);this.setPosition(e);return this},makeFromPositionEulerScale:function(f,e,h,g){this.makeRotationFromEuler(e,h);this.scale(g);this.setPosition(f);return this},makeFrustum:function(i,g,n,m,l,k){var j=this.elements;j[0]=2*l/(g-i);j[4]=0;j[8]=(g+i)/(g-i);j[12]=0;j[1]=0;j[5]=2*l/(m-n);j[9]=(m+n)/(m-n);j[13]=0;j[2]=0;j[6]=0;j[10]=-(k+l)/(k-l);j[14]=-2*k*l/(k-l);j[3]=0;j[7]=0;j[11]=-1;j[15]=0;return this},makePerspective:function(g,f,j,i){var g=j*Math.tan(THREE.Math.degToRad(0.5*g)),h=-g;return this.makeFrustum(h*f,g*f,h,g,j,i)},makeOrthographic:function(t,s,r,q,p,o){var m=this.elements,n=s-t,l=r-q,k=o-p;m[0]=2/n;m[4]=0;m[8]=0;m[12]=-((s+t)/n);m[1]=0;m[5]=2/l;m[9]=0;m[13]=-((r+q)/l);m[2]=0;m[6]=0;m[10]=-2/k;m[14]=-((o+p)/k);m[3]=0;m[7]=0;m[11]=0;m[15]=1;return this},clone:function(){var b=this.elements;return new THREE.Matrix4(b[0],b[4],b[8],b[12],b[1],b[5],b[9],b[13],b[2],b[6],b[10],b[14],b[3],b[7],b[11],b[15])}};THREE.extend(THREE.Matrix4.prototype,{decompose:function(){var f=new THREE.Vector3,e=new THREE.Vector3,h=new THREE.Vector3,g=new THREE.Matrix4;return function(d,c,a){var b=this.elements;f.set(b[0],b[1],b[2]);e.set(b[4],b[5],b[6]);h.set(b[8],b[9],b[10]);d=d instanceof THREE.Vector3?d:new THREE.Vector3;c=c instanceof THREE.Quaternion?c:new THREE.Quaternion;a=a instanceof THREE.Vector3?a:new THREE.Vector3;a.x=f.length();a.y=e.length();a.z=h.length();d.x=b[12];d.y=b[13];d.z=b[14];g.copy(this);g.elements[0]/=a.x;g.elements[1]/=a.x;g.elements[2]/=a.x;g.elements[4]/=a.y;g.elements[5]/=a.y;g.elements[6]/=a.y;g.elements[8]/=a.z;g.elements[9]/=a.z;g.elements[10]/=a.z;c.setFromRotationMatrix(g);return[d,c,a]}}()});THREE.Ray=function(d,c){this.origin=void 0!==d?d:new THREE.Vector3;this.direction=void 0!==c?c:new THREE.Vector3};THREE.Ray.prototype={constructor:THREE.Ray,set:function(d,c){this.origin.copy(d);this.direction.copy(c);return this},copy:function(b){this.origin.copy(b.origin);this.direction.copy(b.direction);return this},at:function(d,c){return(c||new THREE.Vector3).copy(this.direction).multiplyScalar(d).add(this.origin)},recast:function(){var b=new THREE.Vector3;return function(a){this.origin.copy(this.at(a,b));return this}}(),closestPointToPoint:function(f,e){var h=e||new THREE.Vector3;h.subVectors(f,this.origin);var g=h.dot(this.direction);return h.copy(this.direction).multiplyScalar(g).add(this.origin)},distanceToPoint:function(){var b=new THREE.Vector3;return function(a){var d=b.subVectors(a,this.origin).dot(this.direction);b.copy(this.direction).multiplyScalar(d).add(this.origin);return b.distanceTo(a)}}(),isIntersectionSphere:function(b){return this.distanceToPoint(b.center)<=b.radius},isIntersectionPlane:function(b){return 0!=b.normal.dot(this.direction)||0==b.distanceToPoint(this.origin)?!0:!1},distanceToPlane:function(d){var c=d.normal.dot(this.direction);if(0==c){if(0==d.distanceToPoint(this.origin)){return 0}}else{return -(this.origin.dot(d.normal)+d.constant)/c}},intersectPlane:function(e,d){var f=this.distanceToPlane(e);return void 0===f?void 0:this.at(f,d)},applyMatrix4:function(b){this.direction.add(this.origin).applyMatrix4(b);this.origin.applyMatrix4(b);this.direction.sub(this.origin);return this},equals:function(b){return b.origin.equals(this.origin)&&b.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}};THREE.Sphere=function(d,c){this.center=void 0!==d?d:new THREE.Vector3;this.radius=void 0!==c?c:0};THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(d,c){this.center.copy(d);this.radius=c;return this},setFromCenterAndPoints:function(h,g){for(var l=0,k=0,j=g.length;k<j;k++){var i=h.distanceToSquared(g[k]),l=Math.max(l,i)}this.center=h;this.radius=Math.sqrt(l);return this},copy:function(b){this.center.copy(b.center);this.radius=b.radius;return this},empty:function(){return 0>=this.radius},containsPoint:function(b){return b.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(b){return b.distanceTo(this.center)-this.radius},intersectsSphere:function(d){var c=this.radius+d.radius;return d.center.distanceToSquared(this.center)<=c*c},clampPoint:function(f,e){var h=this.center.distanceToSquared(f),g=e||new THREE.Vector3;g.copy(f);h>this.radius*this.radius&&(g.sub(this.center).normalize(),g.multiplyScalar(this.radius).add(this.center));return g},getBoundingBox:function(b){b=b||new THREE.Box3;b.set(this.center,this.center);b.expandByScalar(this.radius);return b},applyMatrix4:function(b){this.center.applyMatrix4(b);this.radius*=b.getMaxScaleOnAxis();return this},translate:function(b){this.center.add(b);return this},equals:function(b){return b.center.equals(this.center)&&b.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}};THREE.Frustum=function(h,g,l,k,j,i){this.planes=[void 0!==h?h:new THREE.Plane,void 0!==g?g:new THREE.Plane,void 0!==l?l:new THREE.Plane,void 0!==k?k:new THREE.Plane,void 0!==j?j:new THREE.Plane,void 0!==i?i:new THREE.Plane]};THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(i,g,n,m,l,k){var j=this.planes;j[0].copy(i);j[1].copy(g);j[2].copy(n);j[3].copy(m);j[4].copy(l);j[5].copy(k);return this},copy:function(e){for(var d=this.planes,f=0;6>f;f++){d[f].copy(e.planes[f])}return this},setFromMatrix:function(G){var F=this.planes,E=G.elements,G=E[0],D=E[1],C=E[2],B=E[3],z=E[4],A=E[5],y=E[6],x=E[7],w=E[8],u=E[9],v=E[10],o=E[11],H=E[12],k=E[13],s=E[14],E=E[15];F[0].setComponents(B-G,x-z,o-w,E-H).normalize();F[1].setComponents(B+G,x+z,o+w,E+H).normalize();F[2].setComponents(B+D,x+A,o+u,E+k).normalize();F[3].setComponents(B-D,x-A,o-u,E-k).normalize();F[4].setComponents(B-C,x-y,o-v,E-s).normalize();F[5].setComponents(B+C,x+y,o+v,E+s).normalize();return this},intersectsObject:function(){var b=new THREE.Vector3;return function(a){var f=a.matrixWorld,e=this.planes,a=-a.geometry.boundingSphere.radius*f.getMaxScaleOnAxis();b.getPositionFromMatrix(f);for(f=0;6>f;f++){if(e[f].distanceToPoint(b)<a){return !1}}return !0}}(),intersectsSphere:function(f){for(var e=this.planes,h=f.center,f=-f.radius,g=0;6>g;g++){if(e[g].distanceToPoint(h)<f){return !1}}return !0},containsPoint:function(e){for(var d=this.planes,f=0;6>f;f++){if(0>d[f].distanceToPoint(e)){return !1}}return !0},clone:function(){return(new THREE.Frustum).copy(this)}};THREE.Plane=function(d,c){this.normal=void 0!==d?d:new THREE.Vector3(1,0,0);this.constant=void 0!==c?c:0};THREE.Plane.prototype={constructor:THREE.Plane,set:function(d,c){this.normal.copy(d);this.constant=c;return this},setComponents:function(f,e,h,g){this.normal.set(f,e,h);this.constant=g;return this},setFromNormalAndCoplanarPoint:function(d,c){this.normal.copy(d);this.constant=-c.dot(this.normal);return this},setFromCoplanarPoints:function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(f,b,a){b=d.subVectors(a,b).cross(c.subVectors(f,b)).normalize();this.setFromNormalAndCoplanarPoint(b,f);return this}}(),copy:function(b){this.normal.copy(b.normal);this.constant=b.constant;return this},normalize:function(){var b=1/this.normal.length();this.normal.multiplyScalar(b);this.constant*=b;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(b){return this.normal.dot(b)+this.constant},distanceToSphere:function(b){return this.distanceToPoint(b.center)-b.radius},projectPoint:function(d,c){return this.orthoPoint(d,c).sub(d).negate()},orthoPoint:function(e,d){var f=this.distanceToPoint(e);return(d||new THREE.Vector3).copy(this.normal).multiplyScalar(f)},isIntersectionLine:function(d){var c=this.distanceToPoint(d.start),d=this.distanceToPoint(d.end);return 0>c&&0<d||0>d&&0<c},intersectLine:function(){var b=new THREE.Vector3;return function(a,j){var i=j||new THREE.Vector3,h=a.delta(b),g=this.normal.dot(h);if(0==g){if(0==this.distanceToPoint(a.start)){return i.copy(a.start)}}else{return g=-(a.start.dot(this.normal)+this.constant)/g,0>g||1<g?void 0:i.copy(h).multiplyScalar(g).add(a.start)}}}(),coplanarPoint:function(b){return(b||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(h,g){var g=g||(new THREE.Matrix3).getNormalMatrix(h),b=d.copy(this.normal).applyMatrix3(g),a=this.coplanarPoint(c);a.applyMatrix4(h);this.setFromNormalAndCoplanarPoint(b,a);return this}}(),translate:function(b){this.constant-=b.dot(this.normal);return this},equals:function(b){return b.normal.equals(this.normal)&&b.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}};THREE.Math={clamp:function(e,d,f){return e<d?d:e>f?f:e},clampBottom:function(d,c){return d<c?c:d},mapLinear:function(g,f,j,i,h){return i+(g-f)*(h-i)/(j-f)},smoothstep:function(e,d,f){if(e<=d){return 0}if(e>=f){return 1}e=(e-d)/(f-d);return e*e*(3-2*e)},smootherstep:function(e,d,f){if(e<=d){return 0}if(e>=f){return 1}e=(e-d)/(f-d);return e*e*e*(e*(6*e-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(d,c){return d+Math.floor(Math.random()*(c-d+1))},randFloat:function(d,c){return d+Math.random()*(c-d)},randFloatSpread:function(b){return b*(0.5-Math.random())},sign:function(b){return 0>b?-1:0<b?1:0},degToRad:function(){var b=Math.PI/180;return function(a){return a*b}}(),radToDeg:function(){var b=180/Math.PI;return function(a){return a*b}}()};THREE.Spline=function(z){function y(i,g,A,n,m,l,j){i=0.5*(A-i);n=0.5*(n-g);return(2*(g-A)+i+n)*j+(-3*(g-A)-2*i-n)*l+i*m+g}this.points=z;var x=[],w={x:0,y:0,z:0},v,u,s,t,r,q,p,k,o;this.initFromArray=function(d){this.points=[];for(var c=0;c<d.length;c++){this.points[c]={x:d[c][0],y:d[c][1],z:d[c][2]}}};this.getPoint=function(b){v=(this.points.length-1)*b;u=Math.floor(v);s=v-u;x[0]=0===u?u:u-1;x[1]=u;x[2]=u>this.points.length-2?this.points.length-1:u+1;x[3]=u>this.points.length-3?this.points.length-1:u+2;q=this.points[x[0]];p=this.points[x[1]];k=this.points[x[2]];o=this.points[x[3]];t=s*s;r=s*t;w.x=y(q.x,p.x,k.x,o.x,s,t,r);w.y=y(q.y,p.y,k.y,o.y,s,t,r);w.z=y(q.z,p.z,k.z,o.z,s,t,r);return w};this.getControlPointsArray=function(){var f,e,h=this.points.length,g=[];for(f=0;f<h;f++){e=this.points[f],g[f]=[e.x,e.y,e.z]}return g};this.getLength=function(E){var D,C,B,A=D=D=0,n=new THREE.Vector3,l=new THREE.Vector3,m=[],j=0;m[0]=0;E||(E=100);C=this.points.length*E;n.copy(this.points[0]);for(E=1;E<C;E++){D=E/C,B=this.getPoint(D),l.copy(B),j+=l.distanceTo(n),n.copy(B),D*=this.points.length-1,D=Math.floor(D),D!=A&&(m[D]=j,A=D)}m[m.length]=j;return{chunks:m,total:j}};this.reparametrizeByArcLength=function(G){var F,E,D,C,B,n,A=[],m=new THREE.Vector3,l=this.getLength();A.push(m.copy(this.points[0]).clone());for(F=1;F<this.points.length;F++){E=l.chunks[F]-l.chunks[F-1];n=Math.ceil(G*E/l.total);C=(F-1)/(this.points.length-1);B=F/(this.points.length-1);for(E=1;E<n-1;E++){D=C+E*(1/n)*(B-C),D=this.getPoint(D),A.push(m.copy(D).clone())}A.push(m.copy(this.points[F]).clone())}this.points=A}};THREE.Triangle=function(e,d,f){this.a=void 0!==e?e:new THREE.Vector3;this.b=void 0!==d?d:new THREE.Vector3;this.c=void 0!==f?f:new THREE.Vector3};THREE.Triangle.normal=function(){var b=new THREE.Vector3;return function(a,h,g,f){f=f||new THREE.Vector3;f.subVectors(g,h);b.subVectors(a,h);f.cross(b);a=f.lengthSq();return 0<a?f.multiplyScalar(1/Math.sqrt(a)):f.set(0,0,0)}}();THREE.Triangle.barycoordFromPoint=function(){var e=new THREE.Vector3,d=new THREE.Vector3,f=new THREE.Vector3;return function(n,m,l,c,k){e.subVectors(c,m);d.subVectors(l,m);f.subVectors(n,m);var n=e.dot(e),m=e.dot(d),l=e.dot(f),b=d.dot(d),c=d.dot(f),a=n*b-m*m,k=k||new THREE.Vector3;if(0==a){return k.set(-2,-1,-1)}a=1/a;b=(b*l-m*c)*a;n=(n*c-m*l)*a;return k.set(1-b-n,n,b)}}();THREE.Triangle.containsPoint=function(){var b=new THREE.Vector3;return function(a,h,g,f){a=THREE.Triangle.barycoordFromPoint(a,h,g,f,b);return 0<=a.x&&0<=a.y&&1>=a.x+a.y}}();THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,d,f){this.a.copy(e);this.b.copy(d);this.c.copy(f);return this},setFromPointsAndIndices:function(f,e,h,g){this.a.copy(f[e]);this.b.copy(f[h]);this.c.copy(f[g]);return this},copy:function(b){this.a.copy(b.a);this.b.copy(b.b);this.c.copy(b.c);return this},area:function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(){d.subVectors(this.c,this.b);c.subVectors(this.a,this.b);return 0.5*d.cross(c).length()}}(),midpoint:function(b){return(b||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(b){return THREE.Triangle.normal(this.a,this.b,this.c,b)},plane:function(b){return(b||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(d,c){return THREE.Triangle.barycoordFromPoint(d,this.a,this.b,this.c,c)},containsPoint:function(b){return THREE.Triangle.containsPoint(b,this.a,this.b,this.c)},equals:function(b){return b.a.equals(this.a)&&b.b.equals(this.b)&&b.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}};THREE.Vertex=function(b){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.");return b};THREE.UV=function(d,c){console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead.");return new THREE.Vector2(d,c)};THREE.Clock=function(b){this.autoStart=void 0!==b?b:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();this.running=!0},stop:function(){this.getElapsedTime();this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var d=0;this.autoStart&&!this.running&&this.start();if(this.running){var c=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),d=0.001*(c-this.oldTime);this.oldTime=c;this.elapsedTime+=d}return d}};THREE.EventDispatcher=function(){};THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,addEventListener:function(e,d){void 0===this._listeners&&(this._listeners={});var f=this._listeners;void 0===f[e]&&(f[e]=[]);-1===f[e].indexOf(d)&&f[e].push(d)},hasEventListener:function(e,d){if(void 0===this._listeners){return !1}var f=this._listeners;return void 0!==f[e]&&-1!==f[e].indexOf(d)?!0:!1},removeEventListener:function(f,e){if(void 0!==this._listeners){var h=this._listeners,g=h[f].indexOf(e);-1!==g&&h[f].splice(g,1)}},dispatchEvent:function(f){if(void 0!==this._listeners){var e=this._listeners[f.type];if(void 0!==e){f.target=this;for(var h=0,g=e.length;h<g;h++){e[h].call(this,f)}}}}};(function(t){t.Raycaster=function(a,h,g,f){this.ray=new t.Ray(a,h);0<this.ray.direction.lengthSq()&&this.ray.direction.normalize();this.near=g||0;this.far=f||Infinity};var s=new t.Sphere,r=new t.Ray,q=new t.Plane,p=new t.Vector3,o=new t.Vector3,m=new t.Matrix4,n=function(d,c){return d.distance-c.distance},l=function(i,h,f){if(i instanceof t.Particle){o.getPositionFromMatrix(i.matrixWorld);var b=h.ray.distanceToPoint(o);if(b>i.scale.x){return f}f.push({distance:b,point:i.position,face:null,object:i})}else{if(i instanceof t.LOD){o.getPositionFromMatrix(i.matrixWorld),b=h.ray.origin.distanceTo(o),l(i.getObjectForDistance(b),h,f)}else{if(i instanceof t.Mesh){o.getPositionFromMatrix(i.matrixWorld);s.set(o,i.geometry.boundingSphere.radius*i.matrixWorld.getMaxScaleOnAxis());if(!1===h.ray.isIntersectionSphere(s)){return f}var b=i.geometry,J=b.vertices;if(b instanceof t.BufferGeometry){var a=i.material instanceof t.MeshFaceMaterial,d=!0===a?i.material.materials:null,K=i.material.side,C,w,D,z=h.precision;m.getInverse(i.matrixWorld);r.copy(h.ray).applyMatrix4(m);if(!b.dynamic){return f}var x,J=!1;b.attributes.index?(J=!0,x=b.attributes.index.numItems/3):x=b.attributes.position.numItems/9;for(var E=0;E<x;E++){J?(C=b.attributes.index.array[3*E],w=b.attributes.index.array[3*E+1],D=b.attributes.index.array[3*E+2]):(C=3*E,w=3*E+1,D=3*E+2);var e=[b.attributes.position.array[3*C],b.attributes.position.array[3*C+1],b.attributes.position.array[3*C+2]],a=[b.attributes.position.array[3*w],b.attributes.position.array[3*w+1],b.attributes.position.array[3*w+2]],d=[b.attributes.position.array[3*D],b.attributes.position.array[3*D+1],b.attributes.position.array[3*D+2]],K=i.material;if(void 0!==K){var c=new t.Vector3,u=new t.Vector3,e=new t.Vector3(e[0],e[1],e[2]),a=new t.Vector3(a[0],a[1],a[2]),d=new t.Vector3(d[0],d[1],d[2]);c.subVectors(d,a);u.subVectors(e,a);c.cross(u);c.normalize();q.setFromNormalAndCoplanarPoint(c,e);c=r.distanceToPlane(q);if(!(Math.abs(c)<z)&&!(0>c)){K=K.side;if(K!==t.DoubleSide&&(u=r.direction.dot(q.normal),!(K===t.FrontSide?0>u:0<u))){continue}c<h.near||c>h.far||(p=r.at(c,p),t.Triangle.containsPoint(p,e,a,d)&&(e=new t.Face3(C,w,D),K=b.attributes.color.array,e.vertexColors[0]=new t.Color(K[3*C],K[3*C+1],K[3*C+2]),e.vertexColors[1]=new t.Color(K[3*w],K[3*w+1],K[3*w+2]),e.vertexColors[2]=new t.Color(K[3*D],K[3*D+1],K[3*D+2]),f.push({distance:c,point:h.ray.at(c),face:e,faceIndex:E,object:i})))}}}}else{if(b instanceof t.Geometry){a=i.material instanceof t.MeshFaceMaterial;d=!0===a?i.material.materials:null;z=h.precision;m.getInverse(i.matrixWorld);r.copy(h.ray).applyMatrix4(m);E=0;for(x=b.faces.length;E<x;E++){if(e=b.faces[E],K=!0===a?d[e.materialIndex]:i.material,void 0!==K&&(q.setFromNormalAndCoplanarPoint(e.normal,J[e.a]),c=r.distanceToPlane(q),!(Math.abs(c)<z)&&!(0>c))){K=K.side;if(K!==t.DoubleSide&&(u=r.direction.dot(q.normal),!(K===t.FrontSide?0>u:0<u))){continue}if(!(c<h.near||c>h.far)){p=r.at(c,p);if(e instanceof t.Face3){if(C=J[e.a],w=J[e.b],D=J[e.c],!t.Triangle.containsPoint(p,C,w,D)){continue}}else{if(e instanceof t.Face4){if(C=J[e.a],w=J[e.b],D=J[e.c],K=J[e.d],!t.Triangle.containsPoint(p,C,w,K)&&!t.Triangle.containsPoint(p,w,D,K)){continue}}else{throw Error("face type not supported")}}f.push({distance:c,point:h.ray.at(c),face:e,faceIndex:E,object:i})}}}}}}}}},k=function(g,f,j){for(var g=g.getDescendants(),i=0,h=g.length;i<h;i++){l(g[i],f,j)}};t.Raycaster.prototype.precision=0.0001;t.Raycaster.prototype.set=function(d,c){this.ray.set(d,c);0<this.ray.direction.length()&&this.ray.direction.normalize()};t.Raycaster.prototype.intersectObject=function(e,d){var f=[];!0===d&&k(e,this,f);l(e,this,f);f.sort(n);return f};t.Raycaster.prototype.intersectObjects=function(g,f){for(var j=[],i=0,h=g.length;i<h;i++){l(g[i],this,j),!0===f&&k(g[i],this,j)}j.sort(n);return j}})(THREE);THREE.Object3D=function(){this.id=THREE.Object3DIdCount++;this.name="";this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder=THREE.Object3D.defaultEulerOrder;this.scale=new THREE.Vector3(1,1,1);this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=!0;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.userData={}};THREE.Object3D.prototype={constructor:THREE.Object3D,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent,applyMatrix:function(){var b=new THREE.Matrix4;return function(a){this.matrix.multiplyMatrices(a,this.matrix);this.position.getPositionFromMatrix(this.matrix);this.scale.getScaleFromMatrix(this.matrix);b.extractRotation(this.matrix);!0===this.useQuaternion?this.quaternion.setFromRotationMatrix(b):this.rotation.setEulerFromRotationMatrix(b,this.eulerOrder)}}(),rotateOnAxis:function(){var d=new THREE.Quaternion,c=new THREE.Quaternion;return function(b,a){d.setFromAxisAngle(b,a);!0===this.useQuaternion?this.quaternion.multiply(d):(c.setFromEuler(this.rotation,this.eulerOrder),c.multiply(d),this.rotation.setEulerFromQuaternion(c,this.eulerOrder));return this}}(),translateOnAxis:function(){var b=new THREE.Vector3;return function(a,d){b.copy(a);!0===this.useQuaternion?b.applyQuaternion(this.quaternion):b.applyEuler(this.rotation,this.eulerOrder);this.position.add(b.multiplyScalar(d));return this}}(),translate:function(d,c){console.warn("DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed.");return this.translateOnAxis(c,d)},translateX:function(){var b=new THREE.Vector3(1,0,0);return function(a){return this.translateOnAxis(b,a)}}(),translateY:function(){var b=new THREE.Vector3(0,1,0);return function(a){return this.translateOnAxis(b,a)}}(),translateZ:function(){var b=new THREE.Vector3(0,0,1);return function(a){return this.translateOnAxis(b,a)}}(),localToWorld:function(b){return b.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var b=new THREE.Matrix4;return function(a){return a.applyMatrix4(b.getInverse(this.matrixWorld))}}(),lookAt:function(){var b=new THREE.Matrix4;return function(a){b.lookAt(a,this.position,this.up);!0===this.useQuaternion?this.quaternion.setFromRotationMatrix(b):this.rotation.setEulerFromRotationMatrix(b,this.eulerOrder)}}(),add:function(d){if(d===this){console.warn("THREE.Object3D.add: An object can't be added as a child of itself.")}else{if(d instanceof THREE.Object3D){void 0!==d.parent&&d.parent.remove(d);d.parent=this;this.children.push(d);for(var c=this;void 0!==c.parent;){c=c.parent}void 0!==c&&c instanceof THREE.Scene&&c.__addObject(d)}}},remove:function(d){var c=this.children.indexOf(d);if(-1!==c){d.parent=void 0;this.children.splice(c,1);for(c=this;void 0!==c.parent;){c=c.parent}void 0!==c&&c instanceof THREE.Scene&&c.__removeObject(d)}},traverse:function(e){e(this);for(var d=0,f=this.children.length;d<f;d++){this.children[d].traverse(e)}},getObjectById:function(g,f){for(var j=0,i=this.children.length;j<i;j++){var h=this.children[j];if(h.id===g||!0===f&&(h=h.getObjectById(g,f),void 0!==h)){return h}}},getObjectByName:function(g,f){for(var j=0,i=this.children.length;j<i;j++){var h=this.children[j];if(h.name===g||!0===f&&(h=h.getObjectByName(g,f),void 0!==h)){return h}}},getChildByName:function(d,c){console.warn("DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName().");return this.getObjectByName(d,c)},getDescendants:function(e){void 0===e&&(e=[]);Array.prototype.push.apply(e,this.children);for(var d=0,f=this.children.length;d<f;d++){this.children[d].getDescendants(e)}return e},updateMatrix:function(){!1===this.useQuaternion?this.matrix.makeFromPositionEulerScale(this.position,this.rotation,this.eulerOrder,this.scale):this.matrix.makeFromPositionQuaternionScale(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===e){void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0}for(var d=0,f=this.children.length;d<f;d++){this.children[d].updateMatrixWorld(e)}},clone:function(d){void 0===d&&(d=new THREE.Object3D);d.name=this.name;d.up.copy(this.up);d.position.copy(this.position);d.rotation instanceof THREE.Vector3&&d.rotation.copy(this.rotation);d.eulerOrder=this.eulerOrder;d.scale.copy(this.scale);d.renderDepth=this.renderDepth;d.rotationAutoUpdate=this.rotationAutoUpdate;d.matrix.copy(this.matrix);d.matrixWorld.copy(this.matrixWorld);d.matrixAutoUpdate=this.matrixAutoUpdate;d.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;d.quaternion.copy(this.quaternion);d.useQuaternion=this.useQuaternion;d.visible=this.visible;d.castShadow=this.castShadow;d.receiveShadow=this.receiveShadow;d.frustumCulled=this.frustumCulled;d.userData=JSON.parse(JSON.stringify(this.userData));for(var c=0;c<this.children.length;c++){d.add(this.children[c].clone())}return d}};THREE.Object3D.defaultEulerOrder="XYZ";THREE.Object3DIdCount=0;THREE.Projector=function(){function aF(){if(aw===at){var b=new THREE.RenderableVertex;av.push(b);at++;aw++;return b}return av[aw++]}function aE(d,c){return c.z-d.z}function aD(j,i){var r=0,q=1,p=j.z+j.w,n=i.z+i.w,l=-j.z+j.w,m=-i.z+i.w;if(0<=p&&0<=n&&0<=l&&0<=m){return !0}if(0>p&&0>n||0>l&&0>m){return !1}0>p?r=Math.max(r,p/(p-n)):0>n&&(q=Math.min(q,p/(p-n)));0>l?r=Math.max(r,l/(l-m)):0>m&&(q=Math.min(q,l/(l-m)));if(q<r){return !1}j.lerp(i,r);i.lerp(j,1-q);return !0}var aC,aB,aA=[],ax=0,az,aw,av=[],at=0,aq,ar,ao=[],al=0,an,ap=[],am=0,ak,ah,aa=[],Y=0,X,ab,af=[],ae=0,T={objects:[],sprites:[],lights:[],elements:[]},ad=new THREE.Vector3,W=new THREE.Vector4,R=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),ag=new THREE.Box3,S=Array(3),ai=Array(4),o=new THREE.Matrix4,U=new THREE.Matrix4,aj,au=new THREE.Matrix4,ay=new THREE.Matrix3,Q=new THREE.Matrix3,x=new THREE.Vector3,E=new THREE.Frustum,P=new THREE.Vector4,ac=new THREE.Vector4;this.projectVector=function(d,c){c.matrixWorldInverse.getInverse(c.matrixWorld);U.multiplyMatrices(c.projectionMatrix,c.matrixWorldInverse);return d.applyProjection(U)};this.unprojectVector=function(d,c){c.projectionMatrixInverse.getInverse(c.projectionMatrix);U.multiplyMatrices(c.matrixWorld,c.projectionMatrixInverse);return d.applyProjection(U)};this.pickingRay=function(e,d){e.z=-1;var f=new THREE.Vector3(e.x,e.y,1);this.unprojectVector(e,d);this.unprojectVector(f,d);f.sub(e).normalize();return new THREE.Raycaster(e,f)};var u=function(d){if(aB===ax){var c=new THREE.RenderableObject;aA.push(c);ax++;aB++;aC=c}else{aC=aA[aB++]}aC.object=d;null!==d.renderDepth?aC.z=d.renderDepth:(ad.getPositionFromMatrix(d.matrixWorld),ad.applyProjection(U),aC.z=ad.z);return aC},k=function(e){if(!1!==e.visible){e instanceof THREE.Light?T.lights.push(e):e instanceof THREE.Mesh||e instanceof THREE.Line?(!1===e.frustumCulled||!0===E.intersectsObject(e))&&T.objects.push(u(e)):(e instanceof THREE.Sprite||e instanceof THREE.Particle)&&T.sprites.push(u(e));for(var d=0,f=e.children.length;d<f;d++){k(e.children[d])}}};this.projectScene=function(z,y,v,q){var c=!1,m,n,B,e,A,r,b,a,w,g,p,i,s;ab=ah=an=ar=0;T.elements.length=0;!0===z.autoUpdate&&z.updateMatrixWorld();void 0===y.parent&&y.updateMatrixWorld();o.copy(y.matrixWorldInverse.getInverse(y.matrixWorld));U.multiplyMatrices(y.projectionMatrix,o);Q.getNormalMatrix(o);E.setFromMatrix(U);aB=0;T.objects.length=0;T.sprites.length=0;T.lights.length=0;k(z);!0===v&&T.objects.sort(aE);z=0;for(v=T.objects.length;z<v;z++){if(a=T.objects[z].object,aj=a.matrixWorld,aw=0,a instanceof THREE.Mesh){w=a.geometry;B=w.vertices;g=w.faces;w=w.faceVertexUvs;ay.getNormalMatrix(aj);i=a.material instanceof THREE.MeshFaceMaterial;s=!0===i?a.material:null;m=0;for(n=B.length;m<n;m++){az=aF(),az.positionWorld.copy(B[m]).applyMatrix4(aj),az.positionScreen.copy(az.positionWorld).applyMatrix4(U),az.positionScreen.x/=az.positionScreen.w,az.positionScreen.y/=az.positionScreen.w,az.positionScreen.z/=az.positionScreen.w,az.visible=!(-1>az.positionScreen.x||1<az.positionScreen.x||-1>az.positionScreen.y||1<az.positionScreen.y||-1>az.positionScreen.z||1<az.positionScreen.z)}B=0;for(m=g.length;B<m;B++){n=g[B];var j=!0===i?s.materials[n.materialIndex]:a.material;if(void 0!==j){r=j.side;if(n instanceof THREE.Face3){if(e=av[n.a],A=av[n.b],b=av[n.c],S[0]=e.positionScreen,S[1]=A.positionScreen,S[2]=b.positionScreen,!0===e.visible||!0===A.visible||!0===b.visible||R.isIntersectionBox(ag.setFromPoints(S))){if(c=0>(b.positionScreen.x-e.positionScreen.x)*(A.positionScreen.y-e.positionScreen.y)-(b.positionScreen.y-e.positionScreen.y)*(A.positionScreen.x-e.positionScreen.x),r===THREE.DoubleSide||c===(r===THREE.FrontSide)){ar===al?(p=new THREE.RenderableFace3,ao.push(p),al++,ar++,aq=p):aq=ao[ar++],aq.v1.copy(e),aq.v2.copy(A),aq.v3.copy(b)}else{continue}}else{continue}}else{if(n instanceof THREE.Face4){if(e=av[n.a],A=av[n.b],b=av[n.c],p=av[n.d],ai[0]=e.positionScreen,ai[1]=A.positionScreen,ai[2]=b.positionScreen,ai[3]=p.positionScreen,!0===e.visible||!0===A.visible||!0===b.visible||!0===p.visible||R.isIntersectionBox(ag.setFromPoints(ai))){if(c=0>(p.positionScreen.x-e.positionScreen.x)*(A.positionScreen.y-e.positionScreen.y)-(p.positionScreen.y-e.positionScreen.y)*(A.positionScreen.x-e.positionScreen.x)||0>(A.positionScreen.x-b.positionScreen.x)*(p.positionScreen.y-b.positionScreen.y)-(A.positionScreen.y-b.positionScreen.y)*(p.positionScreen.x-b.positionScreen.x),r===THREE.DoubleSide||c===(r===THREE.FrontSide)){if(an===am){var t=new THREE.RenderableFace4;ap.push(t);am++;an++;aq=t}else{aq=ap[an++]}aq.v1.copy(e);aq.v2.copy(A);aq.v3.copy(b);aq.v4.copy(p)}else{continue}}else{continue}}}aq.normalModel.copy(n.normal);!1===c&&(r===THREE.BackSide||r===THREE.DoubleSide)&&aq.normalModel.negate();aq.normalModel.applyMatrix3(ay).normalize();aq.normalModelView.copy(aq.normalModel).applyMatrix3(Q);aq.centroidModel.copy(n.centroid).applyMatrix4(aj);b=n.vertexNormals;e=0;for(A=b.length;e<A;e++){p=aq.vertexNormalsModel[e],p.copy(b[e]),!1===c&&(r===THREE.BackSide||r===THREE.DoubleSide)&&p.negate(),p.applyMatrix3(ay).normalize(),aq.vertexNormalsModelView[e].copy(p).applyMatrix3(Q)}aq.vertexNormalsLength=b.length;e=0;for(A=w.length;e<A;e++){if(p=w[e][B],void 0!==p){r=0;for(b=p.length;r<b;r++){aq.uvs[e][r]=p[r]}}}aq.color=n.color;aq.material=j;x.copy(aq.centroidModel).applyProjection(U);aq.z=x.z;T.elements.push(aq)}}}else{if(a instanceof THREE.Line){au.multiplyMatrices(U,aj);B=a.geometry.vertices;e=aF();e.positionScreen.copy(B[0]).applyMatrix4(au);g=a.type===THREE.LinePieces?2:1;m=1;for(n=B.length;m<n;m++){e=aF(),e.positionScreen.copy(B[m]).applyMatrix4(au),0<(m+1)%g||(A=av[aw-2],P.copy(e.positionScreen),ac.copy(A.positionScreen),!0===aD(P,ac)&&(P.multiplyScalar(1/P.w),ac.multiplyScalar(1/ac.w),ah===Y?(w=new THREE.RenderableLine,aa.push(w),Y++,ah++,ak=w):ak=aa[ah++],ak.v1.positionScreen.copy(P),ak.v2.positionScreen.copy(ac),ak.z=Math.max(P.z,ac.z),ak.material=a.material,a.material.vertexColors===THREE.VertexColors&&(ak.vertexColors[0].copy(a.geometry.colors[m]),ak.vertexColors[1].copy(a.geometry.colors[m-1])),T.elements.push(ak)))}}}}z=0;for(v=T.sprites.length;z<v;z++){a=T.sprites[z].object,aj=a.matrixWorld,a instanceof THREE.Particle&&(W.set(aj.elements[12],aj.elements[13],aj.elements[14],1),W.applyMatrix4(U),W.z/=W.w,0<W.z&&1>W.z&&(ab===ae?(c=new THREE.RenderableParticle,af.push(c),ae++,ab++,X=c):X=af[ab++],X.object=a,X.x=W.x/W.w,X.y=W.y/W.w,X.z=W.z,X.rotation=a.rotation.z,X.scale.x=a.scale.x*Math.abs(X.x-(W.x+y.projectionMatrix.elements[0])/(W.w+y.projectionMatrix.elements[12])),X.scale.y=a.scale.y*Math.abs(X.y-(W.y+y.projectionMatrix.elements[5])/(W.w+y.projectionMatrix.elements[13])),X.material=a.material,T.elements.push(X)))}!0===q&&T.elements.sort(aE);return T}};THREE.Face3=function(h,g,l,k,j,i){this.a=h;this.b=g;this.c=l;this.normal=k instanceof THREE.Vector3?k:new THREE.Vector3;this.vertexNormals=k instanceof Array?k:[];this.color=j instanceof THREE.Color?j:new THREE.Color;this.vertexColors=j instanceof Array?j:[];this.vertexTangents=[];this.materialIndex=void 0!==i?i:0;this.centroid=new THREE.Vector3};THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e=new THREE.Face3(this.a,this.b,this.c);e.normal.copy(this.normal);e.color.copy(this.color);e.centroid.copy(this.centroid);e.materialIndex=this.materialIndex;var d,f;d=0;for(f=this.vertexNormals.length;d<f;d++){e.vertexNormals[d]=this.vertexNormals[d].clone()}d=0;for(f=this.vertexColors.length;d<f;d++){e.vertexColors[d]=this.vertexColors[d].clone()}d=0;for(f=this.vertexTangents.length;d<f;d++){e.vertexTangents[d]=this.vertexTangents[d].clone()}return e}};THREE.Face4=function(i,g,n,m,l,k,j){this.a=i;this.b=g;this.c=n;this.d=m;this.normal=l instanceof THREE.Vector3?l:new THREE.Vector3;this.vertexNormals=l instanceof Array?l:[];this.color=k instanceof THREE.Color?k:new THREE.Color;this.vertexColors=k instanceof Array?k:[];this.vertexTangents=[];this.materialIndex=void 0!==j?j:0;this.centroid=new THREE.Vector3};THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var e=new THREE.Face4(this.a,this.b,this.c,this.d);e.normal.copy(this.normal);e.color.copy(this.color);e.centroid.copy(this.centroid);e.materialIndex=this.materialIndex;var d,f;d=0;for(f=this.vertexNormals.length;d<f;d++){e.vertexNormals[d]=this.vertexNormals[d].clone()}d=0;for(f=this.vertexColors.length;d<f;d++){e.vertexColors[d]=this.vertexColors[d].clone()}d=0;for(f=this.vertexTangents.length;d<f;d++){e.vertexTangents[d]=this.vertexTangents[d].clone()}return e}};THREE.Geometry=function(){this.id=THREE.GeometryIdCount++;this.name="";this.vertices=[];this.colors=[];this.normals=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1};THREE.Geometry.prototype={constructor:THREE.Geometry,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent,applyMatrix:function(i){for(var g=(new THREE.Matrix3).getNormalMatrix(i),n=0,m=this.vertices.length;n<m;n++){this.vertices[n].applyMatrix4(i)}n=0;for(m=this.faces.length;n<m;n++){var l=this.faces[n];l.normal.applyMatrix3(g).normalize();for(var k=0,j=l.vertexNormals.length;k<j;k++){l.vertexNormals[k].applyMatrix3(g).normalize()}l.centroid.applyMatrix4(i)}},computeCentroids:function(){var e,d,f;e=0;for(d=this.faces.length;e<d;e++){f=this.faces[e],f.centroid.set(0,0,0),f instanceof THREE.Face3?(f.centroid.add(this.vertices[f.a]),f.centroid.add(this.vertices[f.b]),f.centroid.add(this.vertices[f.c]),f.centroid.divideScalar(3)):f instanceof THREE.Face4&&(f.centroid.add(this.vertices[f.a]),f.centroid.add(this.vertices[f.b]),f.centroid.add(this.vertices[f.c]),f.centroid.add(this.vertices[f.d]),f.centroid.divideScalar(4))}},computeFaceNormals:function(){for(var i=new THREE.Vector3,g=new THREE.Vector3,n=0,m=this.faces.length;n<m;n++){var l=this.faces[n],k=this.vertices[l.a],j=this.vertices[l.b];i.subVectors(this.vertices[l.c],j);g.subVectors(k,j);i.cross(g);i.normalize();l.normal.copy(i)}},computeVertexNormals:function(z){var y,x,w,v;if(void 0===this.__tmpVertices){v=this.__tmpVertices=Array(this.vertices.length);y=0;for(x=this.vertices.length;y<x;y++){v[y]=new THREE.Vector3}y=0;for(x=this.faces.length;y<x;y++){w=this.faces[y],w instanceof THREE.Face3?w.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:w instanceof THREE.Face4&&(w.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}}else{v=this.__tmpVertices;y=0;for(x=this.vertices.length;y<x;y++){v[y].set(0,0,0)}}if(z){var u,s,t,r=new THREE.Vector3,q=new THREE.Vector3,p=new THREE.Vector3,k=new THREE.Vector3,o=new THREE.Vector3;y=0;for(x=this.faces.length;y<x;y++){w=this.faces[y],w instanceof THREE.Face3?(z=this.vertices[w.a],u=this.vertices[w.b],s=this.vertices[w.c],r.subVectors(s,u),q.subVectors(z,u),r.cross(q),v[w.a].add(r),v[w.b].add(r),v[w.c].add(r)):w instanceof THREE.Face4&&(z=this.vertices[w.a],u=this.vertices[w.b],s=this.vertices[w.c],t=this.vertices[w.d],p.subVectors(t,u),q.subVectors(z,u),p.cross(q),v[w.a].add(p),v[w.b].add(p),v[w.d].add(p),k.subVectors(t,s),o.subVectors(u,s),k.cross(o),v[w.b].add(k),v[w.c].add(k),v[w.d].add(k))}}else{y=0;for(x=this.faces.length;y<x;y++){w=this.faces[y],w instanceof THREE.Face3?(v[w.a].add(w.normal),v[w.b].add(w.normal),v[w.c].add(w.normal)):w instanceof THREE.Face4&&(v[w.a].add(w.normal),v[w.b].add(w.normal),v[w.c].add(w.normal),v[w.d].add(w.normal))}}y=0;for(x=this.vertices.length;y<x;y++){v[y].normalize()}y=0;for(x=this.faces.length;y<x;y++){w=this.faces[y],w instanceof THREE.Face3?(w.vertexNormals[0].copy(v[w.a]),w.vertexNormals[1].copy(v[w.b]),w.vertexNormals[2].copy(v[w.c])):w instanceof THREE.Face4&&(w.vertexNormals[0].copy(v[w.a]),w.vertexNormals[1].copy(v[w.b]),w.vertexNormals[2].copy(v[w.c]),w.vertexNormals[3].copy(v[w.d]))}},computeMorphNormals:function(){var t,s,r,q,p;r=0;for(q=this.faces.length;r<q;r++){p=this.faces[r];p.__originalFaceNormal?p.__originalFaceNormal.copy(p.normal):p.__originalFaceNormal=p.normal.clone();p.__originalVertexNormals||(p.__originalVertexNormals=[]);t=0;for(s=p.vertexNormals.length;t<s;t++){p.__originalVertexNormals[t]?p.__originalVertexNormals[t].copy(p.vertexNormals[t]):p.__originalVertexNormals[t]=p.vertexNormals[t].clone()}}var o=new THREE.Geometry;o.faces=this.faces;t=0;for(s=this.morphTargets.length;t<s;t++){if(!this.morphNormals[t]){this.morphNormals[t]={};this.morphNormals[t].faceNormals=[];this.morphNormals[t].vertexNormals=[];var m=this.morphNormals[t].faceNormals,n=this.morphNormals[t].vertexNormals,l,k;r=0;for(q=this.faces.length;r<q;r++){p=this.faces[r],l=new THREE.Vector3,k=p instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},m.push(l),n.push(k)}}m=this.morphNormals[t];o.vertices=this.morphTargets[t].vertices;o.computeFaceNormals();o.computeVertexNormals();r=0;for(q=this.faces.length;r<q;r++){p=this.faces[r],l=m.faceNormals[r],k=m.vertexNormals[r],l.copy(p.normal),p instanceof THREE.Face3?(k.a.copy(p.vertexNormals[0]),k.b.copy(p.vertexNormals[1]),k.c.copy(p.vertexNormals[2])):(k.a.copy(p.vertexNormals[0]),k.b.copy(p.vertexNormals[1]),k.c.copy(p.vertexNormals[2]),k.d.copy(p.vertexNormals[3]))}}r=0;for(q=this.faces.length;r<q;r++){p=this.faces[r],p.normal=p.__originalFaceNormal,p.vertexNormals=p.__originalVertexNormals}},computeTangents:function(){function an(h,g,n,m,j,i,l){ah=h.vertices[g];af=h.vertices[n];ae=h.vertices[m];ad=ag[j];ab=ag[i];ac=ag[l];Y=af.x-ah.x;T=ae.x-ah.x;W=af.y-ah.y;aa=ae.y-ah.y;U=af.z-ah.z;R=ae.z-ah.z;E=ab.x-ad.x;Q=ac.x-ad.x;P=ab.y-ad.y;K=ac.y-ad.y;S=1/(E*K-Q*P);V.set((K*Y-P*T)*S,(K*W-P*aa)*S,(K*U-P*R)*S);D.set((E*T-Q*Y)*S,(E*aa-Q*W)*S,(E*R-Q*U)*S);X[g].add(V);X[n].add(V);X[m].add(V);u[g].add(D);u[n].add(D);u[m].add(D)}var am,al,ak,aj,ai,ag,ah,af,ae,ad,ab,ac,Y,T,W,aa,U,R,E,Q,P,K,S,Z,X=[],u=[],V=new THREE.Vector3,D=new THREE.Vector3,k=new THREE.Vector3,x=new THREE.Vector3,o=new THREE.Vector3;am=0;for(al=this.vertices.length;am<al;am++){X[am]=new THREE.Vector3,u[am]=new THREE.Vector3}am=0;for(al=this.faces.length;am<al;am++){ai=this.faces[am],ag=this.faceVertexUvs[0][am],ai instanceof THREE.Face3?an(this,ai.a,ai.b,ai.c,0,1,2):ai instanceof THREE.Face4&&(an(this,ai.a,ai.b,ai.d,0,1,3),an(this,ai.b,ai.c,ai.d,1,2,3))}var O=["a","b","c","d"];am=0;for(al=this.faces.length;am<al;am++){ai=this.faces[am];for(ak=0;ak<ai.vertexNormals.length;ak++){o.copy(ai.vertexNormals[ak]),aj=ai[O[ak]],Z=X[aj],k.copy(Z),k.sub(o.multiplyScalar(o.dot(Z))).normalize(),x.crossVectors(ai.vertexNormals[ak],Z),aj=x.dot(u[aj]),aj=0>aj?-1:1,ai.vertexTangents[ak]=new THREE.Vector4(k.x,k.y,k.z,aj)}}this.hasTangents=!0},computeLineDistances:function(){for(var f=0,e=this.vertices,h=0,g=e.length;h<g;h++){0<h&&(f+=e[h].distanceTo(e[h-1])),this.lineDistances[h]=f}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);this.boundingSphere.setFromCenterAndPoints(this.boundingSphere.center,this.vertices)},mergeVertices:function(){var v={},u=[],t=[],s,r=Math.pow(10,4),q,o,p,n,m;this.__tmpVertices=void 0;q=0;for(o=this.vertices.length;q<o;q++){s=this.vertices[q],s=Math.round(s.x*r)+"_"+Math.round(s.y*r)+"_"+Math.round(s.z*r),void 0===v[s]?(v[s]=q,u.push(this.vertices[q]),t[q]=u.length-1):t[q]=t[v[s]]}r=[];q=0;for(o=this.faces.length;q<o;q++){if(v=this.faces[q],v instanceof THREE.Face3){v.a=t[v.a];v.b=t[v.b];v.c=t[v.c];p=[v.a,v.b,v.c];s=-1;for(n=0;3>n;n++){if(p[n]==p[(n+1)%3]){r.push(q);break}}}else{if(v instanceof THREE.Face4){v.a=t[v.a];v.b=t[v.b];v.c=t[v.c];v.d=t[v.d];p=[v.a,v.b,v.c,v.d];s=-1;for(n=0;4>n;n++){p[n]==p[(n+1)%4]&&(0<=s&&r.push(q),s=n)}if(0<=s){p.splice(s,1);var k=new THREE.Face3(p[0],p[1],p[2],v.normal,v.color,v.materialIndex);p=0;for(n=this.faceVertexUvs.length;p<n;p++){(m=this.faceVertexUvs[p][q])&&m.splice(s,1)}v.vertexNormals&&0<v.vertexNormals.length&&(k.vertexNormals=v.vertexNormals,k.vertexNormals.splice(s,1));v.vertexColors&&0<v.vertexColors.length&&(k.vertexColors=v.vertexColors,k.vertexColors.splice(s,1));this.faces[q]=k}}}}for(q=r.length-1;0<=q;q--){this.faces.splice(q,1);p=0;for(n=this.faceVertexUvs.length;p<n;p++){this.faceVertexUvs[p].splice(q,1)}}t=this.vertices.length-u.length;this.vertices=u;return t},clone:function(){for(var j=new THREE.Geometry,i=this.vertices,p=0,o=i.length;p<o;p++){j.vertices.push(i[p].clone())}i=this.faces;p=0;for(o=i.length;p<o;p++){j.faces.push(i[p].clone())}i=this.faceVertexUvs[0];p=0;for(o=i.length;p<o;p++){for(var n=i[p],m=[],k=0,l=n.length;k<l;k++){m.push(new THREE.Vector2(n[k].x,n[k].y))}j.faceVertexUvs[0].push(m)}return j},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.GeometryIdCount=0;THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++;this.attributes={};this.dynamic=!1;this.offsets=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.morphTargets=[]};THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent,applyMatrix:function(e){var d,f;this.attributes.position&&(d=this.attributes.position.array);this.attributes.normal&&(f=this.attributes.normal.array);void 0!==d&&(e.multiplyVector3Array(d),this.verticesNeedUpdate=!0);void 0!==f&&((new THREE.Matrix3).getNormalMatrix(e).multiplyVector3Array(f),this.normalizeNormals(),this.normalsNeedUpdate=!0)},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var i=this.attributes.position.array;if(i){var g=this.boundingBox,n,m,l;3<=i.length&&(g.min.x=g.max.x=i[0],g.min.y=g.max.y=i[1],g.min.z=g.max.z=i[2]);for(var k=3,j=i.length;k<j;k+=3){n=i[k],m=i[k+1],l=i[k+2],n<g.min.x?g.min.x=n:n>g.max.x&&(g.max.x=n),m<g.min.y?g.min.y=m:m>g.max.y&&(g.max.y=m),l<g.min.z?g.min.z=l:l>g.max.z&&(g.max.z=l)}}if(void 0===i||0===i.length){this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)}},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var i=this.attributes.position.array;if(i){for(var g,n=0,m,l,k=0,j=i.length;k<j;k+=3){g=i[k],m=i[k+1],l=i[k+2],g=g*g+m*m+l*l,g>n&&(n=g)}this.boundingSphere.radius=Math.sqrt(n)}},computeVertexNormals:function(){if(this.attributes.position){var N,M,L,K;N=this.attributes.position.array.length;if(void 0===this.attributes.normal){this.attributes.normal={itemSize:3,array:new Float32Array(N),numItems:N}}else{N=0;for(M=this.attributes.normal.array.length;N<M;N++){this.attributes.normal.array[N]=0}}var J=this.attributes.position.array,I=this.attributes.normal.array,G,H,F,E,D,B,C=new THREE.Vector3,z=new THREE.Vector3,u=new THREE.Vector3,x=new THREE.Vector3,A=new THREE.Vector3;if(this.attributes.index){var w=this.attributes.index.array,o=this.offsets;L=0;for(K=o.length;L<K;++L){M=o[L].start;G=o[L].count;var k=o[L].index;N=M;for(M+=G;N<M;N+=3){G=k+w[N],H=k+w[N+1],F=k+w[N+2],E=J[3*G],D=J[3*G+1],B=J[3*G+2],C.set(E,D,B),E=J[3*H],D=J[3*H+1],B=J[3*H+2],z.set(E,D,B),E=J[3*F],D=J[3*F+1],B=J[3*F+2],u.set(E,D,B),x.subVectors(u,z),A.subVectors(C,z),x.cross(A),I[3*G]+=x.x,I[3*G+1]+=x.y,I[3*G+2]+=x.z,I[3*H]+=x.x,I[3*H+1]+=x.y,I[3*H+2]+=x.z,I[3*F]+=x.x,I[3*F+1]+=x.y,I[3*F+2]+=x.z}}}else{N=0;for(M=J.length;N<M;N+=9){E=J[N],D=J[N+1],B=J[N+2],C.set(E,D,B),E=J[N+3],D=J[N+4],B=J[N+5],z.set(E,D,B),E=J[N+6],D=J[N+7],B=J[N+8],u.set(E,D,B),x.subVectors(u,z),A.subVectors(C,z),x.cross(A),I[N]=x.x,I[N+1]=x.y,I[N+2]=x.z,I[N+3]=x.x,I[N+4]=x.y,I[N+5]=x.z,I[N+6]=x.x,I[N+7]=x.y,I[N+8]=x.z}}this.normalizeNormals();this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var h=this.attributes.normal.array,g,l,k,j=0,i=h.length;j<i;j+=3){g=h[j],l=h[j+1],k=h[j+2],g=1/Math.sqrt(g*g+l*l+k*k),h[j]*=g,h[j+1]*=g,h[j+2]*=g}},computeTangents:function(){function az(b){an.x=aw[3*b];an.y=aw[3*b+1];an.z=aw[3*b+2];ar.copy(an);o=ap[b];Q.copy(o);Q.sub(an.multiplyScalar(an.dot(o))).normalize();ad.crossVectors(ar,o);u=ad.dot(ao[b]);x=0>u?-1:1;at[4*b]=Q.x;at[4*b+1]=Q.y;at[4*b+2]=Q.z;at[4*b+3]=x}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv){console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()")}else{var ay=this.attributes.index.array,ax=this.attributes.position.array,aw=this.attributes.normal.array,av=this.attributes.uv.array,au=ax.length/3;if(void 0===this.attributes.tangent){var aq=4*au;this.attributes.tangent={itemSize:4,array:new Float32Array(aq),numItems:aq}}for(var at=this.attributes.tangent.array,ap=[],ao=[],aq=0;aq<au;aq++){ap[aq]=new THREE.Vector3,ao[aq]=new THREE.Vector3}var am,ak,al,ai,af,ah,aj,ag,ae,ab,U,T,S,V,Y,au=new THREE.Vector3,aq=new THREE.Vector3,X,P,W,R,D,aa,E,ac=this.offsets;W=0;for(R=ac.length;W<R;++W){P=ac[W].start;D=ac[W].count;var k=ac[W].index;X=P;for(P+=D;X<P;X+=3){D=k+ay[X],aa=k+ay[X+1],E=k+ay[X+2],am=ax[3*D],ak=ax[3*D+1],al=ax[3*D+2],ai=ax[3*aa],af=ax[3*aa+1],ah=ax[3*aa+2],aj=ax[3*E],ag=ax[3*E+1],ae=ax[3*E+2],ab=av[2*D],U=av[2*D+1],T=av[2*aa],S=av[2*aa+1],V=av[2*E],Y=av[2*E+1],ai-=am,am=aj-am,af-=ak,ak=ag-ak,ah-=al,al=ae-al,T-=ab,ab=V-ab,S-=U,U=Y-U,Y=1/(T*U-ab*S),au.set((U*ai-S*am)*Y,(U*af-S*ak)*Y,(U*ah-S*al)*Y),aq.set((T*am-ab*ai)*Y,(T*ak-ab*af)*Y,(T*al-ab*ah)*Y),ap[D].add(au),ap[aa].add(au),ap[E].add(au),ao[D].add(aq),ao[aa].add(aq),ao[E].add(aq)}}var Q=new THREE.Vector3,ad=new THREE.Vector3,an=new THREE.Vector3,ar=new THREE.Vector3,x,o,u;W=0;for(R=ac.length;W<R;++W){P=ac[W].start;D=ac[W].count;k=ac[W].index;X=P;for(P+=D;X<P;X+=3){D=k+ay[X],aa=k+ay[X+1],E=k+ay[X+2],az(D),az(aa),az(E)}}this.tangentsNeedUpdate=this.hasTangents=!0}},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(){var b=new THREE.Matrix4;return function(a){b.lookAt(this.position,a,this.up);!0===this.useQuaternion?this.quaternion.setFromRotationMatrix(b):this.rotation.setEulerFromRotationMatrix(b,this.eulerOrder)}}();THREE.OrthographicCamera=function(h,g,l,k,j,i){THREE.Camera.call(this);this.left=h;this.right=g;this.top=l;this.bottom=k;this.near=void 0!==j?j:0.1;this.far=void 0!==i?i:2000;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.PerspectiveCamera=function(f,e,h,g){THREE.Camera.call(this);this.fov=void 0!==f?f:50;this.aspect=void 0!==e?e:1;this.near=void 0!==h?h:0.1;this.far=void 0!==g?g:2000;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(d,c){void 0===c&&(c=24);this.fov=2*THREE.Math.radToDeg(Math.atan(c/(2*d)));this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(h,g,l,k,j,i){this.fullWidth=h;this.fullHeight=g;this.x=l;this.y=k;this.width=j;this.height=i;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var f=this.fullWidth/this.fullHeight,e=Math.tan(THREE.Math.degToRad(0.5*this.fov))*this.near,h=-e,g=f*h,f=Math.abs(f*e-g),h=Math.abs(e-h);this.projectionMatrix.makeFrustum(g+this.x*f/this.fullWidth,g+(this.x+this.width)*f/this.fullWidth,e-(this.y+this.height)*h/this.fullHeight,e-this.y*h/this.fullHeight,this.near,this.far)}else{this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)}};THREE.Light=function(b){THREE.Object3D.call(this);this.color=new THREE.Color(b)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.Light.prototype.clone=function(b){void 0===b&&(b=new THREE.Light);THREE.Object3D.prototype.clone.call(this,b);b.color.copy(this.color);return b};THREE.AmbientLight=function(b){THREE.Light.call(this,b)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AmbientLight.prototype.clone=function(){var b=new THREE.AmbientLight;THREE.Light.prototype.clone.call(this,b);return b};THREE.AreaLight=function(d,c){THREE.Light.call(this,d);this.normal=new THREE.Vector3(0,-1,0);this.right=new THREE.Vector3(1,0,0);this.intensity=void 0!==c?c:1;this.height=this.width=1;this.constantAttenuation=1.5;this.linearAttenuation=0.5;this.quadraticAttenuation=0.1};THREE.AreaLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight=function(d,c){THREE.Light.call(this,d);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==c?c:1;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5000;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=!1;this.shadowCascadeOffset=new THREE.Vector3(0,0,-1000);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight.prototype.clone=function(){var b=new THREE.DirectionalLight;THREE.Light.prototype.clone.call(this,b);b.target=this.target.clone();b.intensity=this.intensity;b.castShadow=this.castShadow;b.onlyShadow=this.onlyShadow;return b};THREE.HemisphereLight=function(e,d,f){THREE.Light.call(this,e);this.position.set(0,100,0);this.groundColor=new THREE.Color(d);this.intensity=void 0!==f?f:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight.prototype.clone=function(){var b=new THREE.PointLight;THREE.Light.prototype.clone.call(this,b);b.groundColor.copy(this.groundColor);b.intensity=this.intensity;return b};THREE.PointLight=function(e,d,f){THREE.Light.call(this,e);this.intensity=void 0!==d?d:1;this.distance=void 0!==f?f:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight.prototype.clone=function(){var b=new THREE.PointLight;THREE.Light.prototype.clone.call(this,b);b.intensity=this.intensity;b.distance=this.distance;return b};THREE.SpotLight=function(g,f,j,i,h){THREE.Light.call(this,g);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==f?f:1;this.distance=void 0!==j?j:0;this.angle=void 0!==i?i:Math.PI/3;this.exponent=void 0!==h?h:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5000;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight.prototype.clone=function(){var b=new THREE.SpotLight;THREE.Light.prototype.clone.call(this,b);b.target=this.target.clone();b.intensity=this.intensity;b.distance=this.distance;b.angle=this.angle;b.exponent=this.exponent;b.castShadow=this.castShadow;b.onlyShadow=this.onlyShadow;return b};THREE.Loader=function(b){this.statusDomElement=(this.showStatus=b)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var b=document.createElement("div");b.style.position="absolute";b.style.right="0px";b.style.top="0px";b.style.fontSize="0.8em";b.style.textAlign="left";b.style.background="rgba(0,0,0,0.25)";b.style.color="#fff";b.style.width="120px";b.style.padding="0.5em 0.5em 0.5em 0.5em";b.style.zIndex=1000;b.innerHTML="Loading ...";return b},updateProgress:function(d){var c="Loaded ",c=d.total?c+((100*d.loaded/d.total).toFixed(0)+"%"):c+((d.loaded/1000).toFixed(2)+" KB");this.statusDomElement.innerHTML=c},extractUrlBase:function(b){b=b.split("/");b.pop();return(1>b.length?".":b.join("/"))+"/"},initMaterials:function(f,e){for(var h=[],g=0;g<f.length;++g){h[g]=THREE.Loader.prototype.createMaterial(f[g],e)}return h},needsTangents:function(e){for(var d=0,f=e.length;d<f;d++){if(e[d] instanceof THREE.ShaderMaterial){return !0}}return !1},createMaterial:function(t,s){function r(b){b=Math.log(b)/Math.LN2;return Math.floor(b)==b}function q(b){b=Math.log(b)/Math.LN2;return Math.pow(2,Math.round(b))}function p(z,w,u,h,d,c,b){var C=/\.dds$/i.test(u),A=s+"/"+u;if(C){var x=THREE.ImageUtils.loadCompressedTexture(A);z[w]=x}else{x=document.createElement("canvas"),z[w]=new THREE.Texture(x)}z[w].sourceFile=u;h&&(z[w].repeat.set(h[0],h[1]),1!==h[0]&&(z[w].wrapS=THREE.RepeatWrapping),1!==h[1]&&(z[w].wrapT=THREE.RepeatWrapping));d&&z[w].offset.set(d[0],d[1]);c&&(u={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==u[c[0]]&&(z[w].wrapS=u[c[0]]),void 0!==u[c[1]]&&(z[w].wrapT=u[c[1]]));b&&(z[w].anisotropy=b);if(!C){var B=z[w],z=new Image;z.onload=function(){if(!r(this.width)||!r(this.height)){var f=q(this.width),e=q(this.height);B.image.width=f;B.image.height=e;B.image.getContext("2d").drawImage(this,0,0,f,e)}else{B.image=this}B.needsUpdate=!0};z.crossOrigin=m.crossOrigin;z.src=A}}function o(b){return(255*b[0]<<16)+(255*b[1]<<8)+255*b[2]}var m=this,n="MeshLambertMaterial",l={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(t.shading){var k=t.shading.toLowerCase();"phong"===k?n="MeshPhongMaterial":"basic"===k&&(n="MeshBasicMaterial")}void 0!==t.blending&&void 0!==THREE[t.blending]&&(l.blending=THREE[t.blending]);if(void 0!==t.transparent||1>t.opacity){l.transparent=t.transparent}void 0!==t.depthTest&&(l.depthTest=t.depthTest);void 0!==t.depthWrite&&(l.depthWrite=t.depthWrite);void 0!==t.visible&&(l.visible=t.visible);void 0!==t.flipSided&&(l.side=THREE.BackSide);void 0!==t.doubleSided&&(l.side=THREE.DoubleSide);void 0!==t.wireframe&&(l.wireframe=t.wireframe);void 0!==t.vertexColors&&("face"===t.vertexColors?l.vertexColors=THREE.FaceColors:t.vertexColors&&(l.vertexColors=THREE.VertexColors));t.colorDiffuse?l.color=o(t.colorDiffuse):t.DbgColor&&(l.color=t.DbgColor);t.colorSpecular&&(l.specular=o(t.colorSpecular));t.colorAmbient&&(l.ambient=o(t.colorAmbient));t.transparency&&(l.opacity=t.transparency);t.specularCoef&&(l.shininess=t.specularCoef);t.mapDiffuse&&s&&p(l,"map",t.mapDiffuse,t.mapDiffuseRepeat,t.mapDiffuseOffset,t.mapDiffuseWrap,t.mapDiffuseAnisotropy);t.mapLight&&s&&p(l,"lightMap",t.mapLight,t.mapLightRepeat,t.mapLightOffset,t.mapLightWrap,t.mapLightAnisotropy);t.mapBump&&s&&p(l,"bumpMap",t.mapBump,t.mapBumpRepeat,t.mapBumpOffset,t.mapBumpWrap,t.mapBumpAnisotropy);t.mapNormal&&s&&p(l,"normalMap",t.mapNormal,t.mapNormalRepeat,t.mapNormalOffset,t.mapNormalWrap,t.mapNormalAnisotropy);t.mapSpecular&&s&&p(l,"specularMap",t.mapSpecular,t.mapSpecularRepeat,t.mapSpecularOffset,t.mapSpecularWrap,t.mapSpecularAnisotropy);t.mapBumpScale&&(l.bumpScale=t.mapBumpScale);t.mapNormal?(n=THREE.ShaderLib.normalmap,k=THREE.UniformsUtils.clone(n.uniforms),k.tNormal.value=l.normalMap,t.mapNormalFactor&&k.uNormalScale.value.set(t.mapNormalFactor,t.mapNormalFactor),l.map&&(k.tDiffuse.value=l.map,k.enableDiffuse.value=!0),l.specularMap&&(k.tSpecular.value=l.specularMap,k.enableSpecular.value=!0),l.lightMap&&(k.tAO.value=l.lightMap,k.enableAO.value=!0),k.uDiffuseColor.value.setHex(l.color),k.uSpecularColor.value.setHex(l.specular),k.uAmbientColor.value.setHex(l.ambient),k.uShininess.value=l.shininess,void 0!==l.opacity&&(k.uOpacity.value=l.opacity),n=new THREE.ShaderMaterial({fragmentShader:n.fragmentShader,vertexShader:n.vertexShader,uniforms:k,lights:!0,fog:!0}),l.transparent&&(n.transparent=!0)):n=new THREE[n](l);void 0!==t.DbgName&&(n.name=t.DbgName);return n}};THREE.ImageLoader=function(){this.crossOrigin=null};THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent,load:function(e,d){var f=this;void 0===d&&(d=new Image);d.addEventListener("load",function(){f.dispatchEvent({type:"load",content:d})},!1);d.addEventListener("error",function(){f.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1);f.crossOrigin&&(d.crossOrigin=f.crossOrigin);d.src=e}};THREE.JSONLoader=function(b){THREE.Loader.call(this,b);this.withCredentials=!1};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);THREE.JSONLoader.prototype.load=function(e,d,f){f=f&&"string"===typeof f?f:this.extractUrlBase(e);this.onLoadStart();this.loadAjaxJSON(this,e,d,f)};THREE.JSONLoader.prototype.loadAjaxJSON=function(i,g,n,m,l){var k=new XMLHttpRequest,j=0;k.onreadystatechange=function(){if(k.readyState===k.DONE){if(200===k.status||0===k.status){if(k.responseText){var a=JSON.parse(k.responseText),a=i.parse(a,m);n(a.geometry,a.materials)}else{console.warn("THREE.JSONLoader: ["+g+"] seems to be unreachable or file there is empty")}i.onLoadComplete()}else{console.error("THREE.JSONLoader: Couldn't load ["+g+"] ["+k.status+"]")}}else{k.readyState===k.LOADING?l&&(0===j&&(j=k.getResponseHeader("Content-Length")),l({total:j,loaded:k.responseText.length})):k.readyState===k.HEADERS_RECEIVED&&void 0!==l&&(j=k.getResponseHeader("Content-Length"))}};k.open("GET",g,!0);k.withCredentials=this.withCredentials;k.send(null)};THREE.JSONLoader.prototype.parse=function(T,S){var R=new THREE.Geometry,Q=void 0!==T.scale?1/T.scale:1,P,O,M,N,L,K,J,E,F,C,z,B,D,A,x,k=T.faces;C=T.vertices;var w=T.normals,u=T.colors,o=0;for(P=0;P<T.uvs.length;P++){T.uvs[P].length&&o++}for(P=0;P<o;P++){R.faceUvs[P]=[],R.faceVertexUvs[P]=[]}N=0;for(L=C.length;N<L;){K=new THREE.Vector3,K.x=C[N++]*Q,K.y=C[N++]*Q,K.z=C[N++]*Q,R.vertices.push(K)}N=0;for(L=k.length;N<L;){C=k[N++];K=C&1;M=C&2;P=C&4;O=C&8;E=C&16;J=C&32;z=C&64;C&=128;K?(B=new THREE.Face4,B.a=k[N++],B.b=k[N++],B.c=k[N++],B.d=k[N++],K=4):(B=new THREE.Face3,B.a=k[N++],B.b=k[N++],B.c=k[N++],K=3);M&&(M=k[N++],B.materialIndex=M);M=R.faces.length;if(P){for(P=0;P<o;P++){D=T.uvs[P],F=k[N++],x=D[2*F],F=D[2*F+1],R.faceUvs[P][M]=new THREE.Vector2(x,F)}}if(O){for(P=0;P<o;P++){D=T.uvs[P];A=[];for(O=0;O<K;O++){F=k[N++],x=D[2*F],F=D[2*F+1],A[O]=new THREE.Vector2(x,F)}R.faceVertexUvs[P][M]=A}}E&&(E=3*k[N++],O=new THREE.Vector3,O.x=w[E++],O.y=w[E++],O.z=w[E],B.normal=O);if(J){for(P=0;P<K;P++){E=3*k[N++],O=new THREE.Vector3,O.x=w[E++],O.y=w[E++],O.z=w[E],B.vertexNormals.push(O)}}z&&(J=k[N++],J=new THREE.Color(u[J]),B.color=J);if(C){for(P=0;P<K;P++){J=k[N++],J=new THREE.Color(u[J]),B.vertexColors.push(J)}}R.faces.push(B)}if(T.skinWeights){N=0;for(L=T.skinWeights.length;N<L;N+=2){k=T.skinWeights[N],w=T.skinWeights[N+1],R.skinWeights.push(new THREE.Vector4(k,w,0,0))}}if(T.skinIndices){N=0;for(L=T.skinIndices.length;N<L;N+=2){k=T.skinIndices[N],w=T.skinIndices[N+1],R.skinIndices.push(new THREE.Vector4(k,w,0,0))}}R.bones=T.bones;R.animation=T.animation;if(void 0!==T.morphTargets){N=0;for(L=T.morphTargets.length;N<L;N++){R.morphTargets[N]={};R.morphTargets[N].name=T.morphTargets[N].name;R.morphTargets[N].vertices=[];u=R.morphTargets[N].vertices;o=T.morphTargets[N].vertices;k=0;for(w=o.length;k<w;k+=3){C=new THREE.Vector3,C.x=o[k]*Q,C.y=o[k+1]*Q,C.z=o[k+2]*Q,u.push(C)}}}if(void 0!==T.morphColors){N=0;for(L=T.morphColors.length;N<L;N++){R.morphColors[N]={};R.morphColors[N].name=T.morphColors[N].name;R.morphColors[N].colors=[];w=R.morphColors[N].colors;u=T.morphColors[N].colors;Q=0;for(k=u.length;Q<k;Q+=3){o=new THREE.Color(16755200),o.setRGB(u[Q],u[Q+1],u[Q+2]),w.push(o)}}}R.computeCentroids();R.computeFaceNormals();if(void 0===T.materials){return{geometry:R}}Q=this.initMaterials(T.materials,S);this.needsTangents(Q)&&R.computeTangents();return{geometry:R,materials:Q}};THREE.LoadingMonitor=function(){var f=this,e=0,h=0,g=function(){e++;f.dispatchEvent({type:"progress",loaded:e,total:h});e===h&&f.dispatchEvent({type:"load"})};this.add=function(b){h++;b.addEventListener("load",g,!1)}};THREE.LoadingMonitor.prototype={constructor:THREE.LoadingMonitor,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent};THREE.GeometryLoader=function(){};THREE.GeometryLoader.prototype={constructor:THREE.GeometryLoader,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent,load:function(e){var d=this,f=new XMLHttpRequest;f.addEventListener("load",function(b){b=d.parse(JSON.parse(b.target.responseText));d.dispatchEvent({type:"load",content:b})},!1);f.addEventListener("progress",function(b){d.dispatchEvent({type:"progress",loaded:b.loaded,total:b.total})},!1);f.addEventListener("error",function(){d.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1);f.open("GET",e,!0);f.send(null)},parse:function(){}};THREE.MaterialLoader=function(){};THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent,load:function(e){var d=this,f=new XMLHttpRequest;f.addEventListener("load",function(b){b=d.parse(JSON.parse(b.target.responseText));d.dispatchEvent({type:"load",content:b})},!1);f.addEventListener("progress",function(b){d.dispatchEvent({type:"progress",loaded:b.loaded,total:b.total})},!1);f.addEventListener("error",function(){d.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1);f.open("GET",e,!0);f.send(null)},parse:function(d){var c;switch(d.type){case"MeshBasicMaterial":c=new THREE.MeshBasicMaterial({color:d.color,opacity:d.opacity,transparent:d.transparent,wireframe:d.wireframe});break;case"MeshLambertMaterial":c=new THREE.MeshLambertMaterial({color:d.color,ambient:d.ambient,emissive:d.emissive,opacity:d.opacity,transparent:d.transparent,wireframe:d.wireframe});break;case"MeshPhongMaterial":c=new THREE.MeshPhongMaterial({color:d.color,ambient:d.ambient,emissive:d.emissive,specular:d.specular,shininess:d.shininess,opacity:d.opacity,transparent:d.transparent,wireframe:d.wireframe});break;case"MeshNormalMaterial":c=new THREE.MeshNormalMaterial({opacity:d.opacity,transparent:d.transparent,wireframe:d.wireframe});break;case"MeshDepthMaterial":c=new THREE.MeshDepthMaterial({opacity:d.opacity,transparent:d.transparent,wireframe:d.wireframe})}return c}};THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlerMap={};this.hierarchyHandlerMap={};this.addGeometryHandler("ascii",THREE.JSONLoader)};THREE.SceneLoader.prototype.constructor=THREE.SceneLoader;THREE.SceneLoader.prototype.load=function(f,e){var h=this,g=new XMLHttpRequest;g.onreadystatechange=function(){if(4===g.readyState){if(200===g.status||0===g.status){var a=JSON.parse(g.responseText);h.parse(a,e,f)}else{console.error("THREE.SceneLoader: Couldn't load ["+f+"] ["+g.status+"]")}}};g.open("GET",f,!0);g.send(null)};THREE.SceneLoader.prototype.addGeometryHandler=function(d,c){this.geometryHandlerMap[d]={loaderClass:c}};THREE.SceneLoader.prototype.addHierarchyHandler=function(d,c){this.hierarchyHandlerMap[d]={loaderClass:c}};THREE.SceneLoader.prototype.parse=function(ar,aq,ap){function ao(d,c){return"relativeToHTML"==c?d:ag+"/"+d}function an(){am(ab.scene,Y.objects)}function am(C,B){var y,v,t,r,q,n,g;for(g in B){var d=ab.objects[g],F=B[g];if(void 0===d){if(F.type&&F.type in af.hierarchyHandlerMap){if(void 0===F.loading){v={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,userData:1,skin:1,morph:1,mirroredLoop:1,duration:1};t={};for(var w in F){w in v||(t[w]=F[w])}W=ab.materials[F.material];F.loading=!0;v=af.hierarchyHandlerMap[F.type].loaderObject;v.options?v.load(ao(F.url,Y.urlBaseType),al(g,C,W,F)):v.load(ao(F.url,Y.urlBaseType),al(g,C,W,F),t)}}else{if(void 0!==F.geometry){if(ac=ab.geometries[F.geometry]){d=!1;W=ab.materials[F.material];d=W instanceof THREE.ShaderMaterial;t=F.position;r=F.rotation;q=F.scale;y=F.matrix;n=F.quaternion;F.material||(W=new THREE.MeshFaceMaterial(ab.face_materials[F.geometry]));W instanceof THREE.MeshFaceMaterial&&0===W.materials.length&&(W=new THREE.MeshFaceMaterial(ab.face_materials[F.geometry]));if(W instanceof THREE.MeshFaceMaterial){for(v=0;v<W.materials.length;v++){d=d||W.materials[v] instanceof THREE.ShaderMaterial}}d&&ac.computeTangents();F.skin?d=new THREE.SkinnedMesh(ac,W):F.morph?(d=new THREE.MorphAnimMesh(ac,W),void 0!==F.duration&&(d.duration=F.duration),void 0!==F.time&&(d.time=F.time),void 0!==F.mirroredLoop&&(d.mirroredLoop=F.mirroredLoop),W.morphNormals&&ac.computeMorphNormals()):d=new THREE.Mesh(ac,W);d.name=g;y?(d.matrixAutoUpdate=!1,d.matrix.set(y[0],y[1],y[2],y[3],y[4],y[5],y[6],y[7],y[8],y[9],y[10],y[11],y[12],y[13],y[14],y[15])):(d.position.fromArray(t),n?(d.quaternion.fromArray(n),d.useQuaternion=!0):d.rotation.fromArray(r),d.scale.fromArray(q));d.visible=F.visible;d.castShadow=F.castShadow;d.receiveShadow=F.receiveShadow;C.add(d);ab.objects[g]=d}}else{"DirectionalLight"===F.type||"PointLight"===F.type||"AmbientLight"===F.type?(P=void 0!==F.color?F.color:16777215,T=void 0!==F.intensity?F.intensity:1,"DirectionalLight"===F.type?(t=F.direction,U=new THREE.DirectionalLight(P,T),U.position.fromArray(t),F.target&&(x.push({object:U,targetName:F.target}),U.target=null)):"PointLight"===F.type?(t=F.position,v=F.distance,U=new THREE.PointLight(P,T,v),U.position.fromArray(t)):"AmbientLight"===F.type&&(U=new THREE.AmbientLight(P)),C.add(U),U.name=g,ab.lights[g]=U,ab.objects[g]=U):"PerspectiveCamera"===F.type||"OrthographicCamera"===F.type?(t=F.position,r=F.rotation,n=F.quaternion,"PerspectiveCamera"===F.type?aa=new THREE.PerspectiveCamera(F.fov,F.aspect,F.near,F.far):"OrthographicCamera"===F.type&&(aa=new THREE.OrthographicCamera(F.left,F.right,F.top,F.bottom,F.near,F.far)),aa.name=g,aa.position.fromArray(t),void 0!==n?(aa.quaternion.fromArray(n),aa.useQuaternion=!0):void 0!==r&&aa.rotation.fromArray(r),C.add(aa),ab.cameras[g]=aa,ab.objects[g]=aa):(t=F.position,r=F.rotation,q=F.scale,n=F.quaternion,d=new THREE.Object3D,d.name=g,d.position.fromArray(t),n?(d.quaternion.fromArray(n),d.useQuaternion=!0):d.rotation.fromArray(r),d.scale.fromArray(q),d.visible=void 0!==F.visible?F.visible:!1,C.add(d),ab.objects[g]=d,ab.empties[g]=d)}}if(d){if(void 0!==F.userData){for(var f in F.userData){d.userData[f]=F.userData[f]}}if(void 0!==F.groups){for(v=0;v<F.groups.length;v++){t=F.groups[v],void 0===ab.groups[t]&&(ab.groups[t]=[]),ab.groups[t].push(g)}}}}void 0!==d&&void 0!==F.children&&am(d,F.children)}}function ak(b){return function(a,d){a.name=b;ab.geometries[b]=a;ab.face_materials[b]=d;an();S-=1;af.onLoadComplete();ai()}}function al(f,e,h,g){return function(j){var j=j.content?j.content:j.dae?j.scene:j,c=g.rotation,d=g.quaternion,b=g.scale;j.position.fromArray(g.position);d?(j.quaternion.fromArray(d),j.useQuaternion=!0):j.rotation.fromArray(c);j.scale.fromArray(b);h&&j.traverse(function(i){i.material=h});var a=void 0!==g.visible?g.visible:!0;j.traverse(function(i){i.visible=a});e.add(j);j.name=f;ab.objects[f]=j;an();S-=1;af.onLoadComplete();ai()}}function aj(b){return function(a,d){a.name=b;ab.geometries[b]=a;ab.face_materials[b]=d}}function ai(){af.callbackProgress({totalModels:V,totalTextures:ad,loadedModels:V-S,loadedTextures:ad-Q},ab);af.onLoadProgress();if(0===S&&0===Q){for(var b=0;b<x.length;b++){var f=x[b],e=ab.objects[f.targetName];e?f.object.target=e:(f.object.target=new THREE.Object3D,ab.scene.add(f.object.target));f.object.target.userData.targetInverse=f.object}aq(ab)}}function ah(e,d){d(e);if(void 0!==e.children){for(var f in e.children){ah(e.children[f],d)}}}var af=this,ag=THREE.Loader.prototype.extractUrlBase(ap),ac,W,aa,ae,X,U,P,T,S,Q,V,ad,ab,x=[],Y=ar,O;for(O in this.geometryHandlerMap){ar=this.geometryHandlerMap[O].loaderClass,this.geometryHandlerMap[O].loaderObject=new ar}for(O in this.hierarchyHandlerMap){ar=this.hierarchyHandlerMap[O].loaderClass,this.hierarchyHandlerMap[O].loaderObject=new ar}Q=S=0;ab={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}};if(Y.transform&&(O=Y.transform.position,ar=Y.transform.rotation,ap=Y.transform.scale,O&&ab.scene.position.fromArray(O),ar&&ab.scene.rotation.fromArray(ar),ap&&ab.scene.scale.fromArray(ap),O||ar||ap)){ab.scene.updateMatrix(),ab.scene.updateMatrixWorld()}O=function(b){return function(){Q-=b;ai();af.onLoadComplete()}};for(var o in Y.fogs){ar=Y.fogs[o],"linear"===ar.type?ae=new THREE.Fog(0,ar.near,ar.far):"exp2"===ar.type&&(ae=new THREE.FogExp2(0,ar.density)),ar=ar.color,ae.color.setRGB(ar[0],ar[1],ar[2]),ab.fogs[o]=ae}for(var E in Y.geometries){ae=Y.geometries[E],ae.type in this.geometryHandlerMap&&(S+=1,af.onLoadStart())}for(var u in Y.objects){ah(Y.objects[u],function(b){b.type&&b.type in af.hierarchyHandlerMap&&(S+=1,af.onLoadStart())})}V=S;for(E in Y.geometries){if(ae=Y.geometries[E],"cube"===ae.type){ac=new THREE.CubeGeometry(ae.width,ae.height,ae.depth,ae.widthSegments,ae.heightSegments,ae.depthSegments),ac.name=E,ab.geometries[E]=ac}else{if("plane"===ae.type){ac=new THREE.PlaneGeometry(ae.width,ae.height,ae.widthSegments,ae.heightSegments),ac.name=E,ab.geometries[E]=ac}else{if("sphere"===ae.type){ac=new THREE.SphereGeometry(ae.radius,ae.widthSegments,ae.heightSegments),ac.name=E,ab.geometries[E]=ac}else{if("cylinder"===ae.type){ac=new THREE.CylinderGeometry(ae.topRad,ae.botRad,ae.height,ae.radSegs,ae.heightSegs),ac.name=E,ab.geometries[E]=ac}else{if("torus"===ae.type){ac=new THREE.TorusGeometry(ae.radius,ae.tube,ae.segmentsR,ae.segmentsT),ac.name=E,ab.geometries[E]=ac}else{if("icosahedron"===ae.type){ac=new THREE.IcosahedronGeometry(ae.radius,ae.subdivisions),ac.name=E,ab.geometries[E]=ac}else{if(ae.type in this.geometryHandlerMap){u={};for(X in ae){"type"!==X&&"url"!==X&&(u[X]=ae[X])}this.geometryHandlerMap[ae.type].loaderObject.load(ao(ae.url,Y.urlBaseType),ak(E),u)}else{"embedded"===ae.type&&(u=Y.embeds[ae.id],u.metadata=Y.metadata,u&&(u=this.geometryHandlerMap.ascii.loaderObject.parse(u,""),aj(E)(u.geometry,u.materials)))}}}}}}}}for(var R in Y.textures){if(E=Y.textures[R],E.url instanceof Array){Q+=E.url.length;for(X=0;X<E.url.length;X++){af.onLoadStart()}}else{Q+=1,af.onLoadStart()}}ad=Q;for(R in Y.textures){E=Y.textures[R];void 0!==E.mapping&&void 0!==THREE[E.mapping]&&(E.mapping=new THREE[E.mapping]);if(E.url instanceof Array){u=E.url.length;ae=[];for(X=0;X<u;X++){ae[X]=ao(E.url[X],Y.urlBaseType)}X=(X=/\.dds$/i.test(ae[0]))?THREE.ImageUtils.loadCompressedTextureCube(ae,E.mapping,O(u)):THREE.ImageUtils.loadTextureCube(ae,E.mapping,O(u))}else{X=/\.dds$/i.test(E.url),u=ao(E.url,Y.urlBaseType),ae=O(1),X=X?THREE.ImageUtils.loadCompressedTexture(u,E.mapping,ae):THREE.ImageUtils.loadTexture(u,E.mapping,ae),void 0!==THREE[E.minFilter]&&(X.minFilter=THREE[E.minFilter]),void 0!==THREE[E.magFilter]&&(X.magFilter=THREE[E.magFilter]),E.anisotropy&&(X.anisotropy=E.anisotropy),E.repeat&&(X.repeat.set(E.repeat[0],E.repeat[1]),1!==E.repeat[0]&&(X.wrapS=THREE.RepeatWrapping),1!==E.repeat[1]&&(X.wrapT=THREE.RepeatWrapping)),E.offset&&X.offset.set(E.offset[0],E.offset[1]),E.wrap&&(u={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==u[E.wrap[0]]&&(X.wrapS=u[E.wrap[0]]),void 0!==u[E.wrap[1]]&&(X.wrapT=u[E.wrap[1]]))}ab.textures[R]=X}var k,D;for(k in Y.materials){R=Y.materials[k];for(D in R.parameters){"envMap"===D||"map"===D||"lightMap"===D||"bumpMap"===D?R.parameters[D]=ab.textures[R.parameters[D]]:"shading"===D?R.parameters[D]="flat"===R.parameters[D]?THREE.FlatShading:THREE.SmoothShading:"side"===D?R.parameters[D]="double"==R.parameters[D]?THREE.DoubleSide:"back"==R.parameters[D]?THREE.BackSide:THREE.FrontSide:"blending"===D?R.parameters[D]=R.parameters[D] in THREE?THREE[R.parameters[D]]:THREE.NormalBlending:"combine"===D?R.parameters[D]=R.parameters[D] in THREE?THREE[R.parameters[D]]:THREE.MultiplyOperation:"vertexColors"===D?"face"==R.parameters[D]?R.parameters[D]=THREE.FaceColors:R.parameters[D]&&(R.parameters[D]=THREE.VertexColors):"wrapRGB"===D&&(O=R.parameters[D],R.parameters[D]=new THREE.Vector3(O[0],O[1],O[2]))}void 0!==R.parameters.opacity&&1>R.parameters.opacity&&(R.parameters.transparent=!0);R.parameters.normalMap?(O=THREE.ShaderLib.normalmap,E=THREE.UniformsUtils.clone(O.uniforms),X=R.parameters.color,u=R.parameters.specular,ae=R.parameters.ambient,o=R.parameters.shininess,E.tNormal.value=ab.textures[R.parameters.normalMap],R.parameters.normalScale&&E.uNormalScale.value.set(R.parameters.normalScale[0],R.parameters.normalScale[1]),R.parameters.map&&(E.tDiffuse.value=R.parameters.map,E.enableDiffuse.value=!0),R.parameters.envMap&&(E.tCube.value=R.parameters.envMap,E.enableReflection.value=!0,E.uReflectivity.value=R.parameters.reflectivity),R.parameters.lightMap&&(E.tAO.value=R.parameters.lightMap,E.enableAO.value=!0),R.parameters.specularMap&&(E.tSpecular.value=ab.textures[R.parameters.specularMap],E.enableSpecular.value=!0),R.parameters.displacementMap&&(E.tDisplacement.value=ab.textures[R.parameters.displacementMap],E.enableDisplacement.value=!0,E.uDisplacementBias.value=R.parameters.displacementBias,E.uDisplacementScale.value=R.parameters.displacementScale),E.uDiffuseColor.value.setHex(X),E.uSpecularColor.value.setHex(u),E.uAmbientColor.value.setHex(ae),E.uShininess.value=o,R.parameters.opacity&&(E.uOpacity.value=R.parameters.opacity),W=new THREE.ShaderMaterial({fragmentShader:O.fragmentShader,vertexShader:O.vertexShader,uniforms:E,lights:!0,fog:!0})):W=new THREE[R.type](R.parameters);W.name=k;ab.materials[k]=W}for(k in Y.materials){if(R=Y.materials[k],R.parameters.materials){D=[];for(X=0;X<R.parameters.materials.length;X++){D.push(ab.materials[R.parameters.materials[X]])}ab.materials[k].materials=D}}an();ab.cameras&&Y.defaults.camera&&(ab.currentCamera=ab.cameras[Y.defaults.camera]);ab.fogs&&Y.defaults.fog&&(ab.scene.fog=ab.fogs[Y.defaults.fog]);af.callbackSync(ab);ai()};THREE.TextureLoader=function(){this.crossOrigin=null};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent,load:function(e){var d=this,f=new Image;f.addEventListener("load",function(){var b=new THREE.Texture(f);b.needsUpdate=!0;d.dispatchEvent({type:"load",content:b})},!1);f.addEventListener("error",function(){d.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1);d.crossOrigin&&(f.crossOrigin=d.crossOrigin);f.src=e}};THREE.Material=function(){this.id=THREE.MaterialIdCount++;this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.overdraw=this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.needsUpdate=this.visible=!0};THREE.Material.prototype={constructor:THREE.Material,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent,setValues:function(f){if(void 0!==f){for(var e in f){var h=f[e];if(void 0===h){console.warn("THREE.Material: '"+e+"' parameter is undefined.")}else{if(e in this){var g=this[e];g instanceof THREE.Color?g.set(h):g instanceof THREE.Vector3&&h instanceof THREE.Vector3?g.copy(h):this[e]="overdraw"==e?Number(h):h}}}}},clone:function(b){void 0===b&&(b=new THREE.Material);b.name=this.name;b.side=this.side;b.opacity=this.opacity;b.transparent=this.transparent;b.blending=this.blending;b.blendSrc=this.blendSrc;b.blendDst=this.blendDst;b.blendEquation=this.blendEquation;b.depthTest=this.depthTest;b.depthWrite=this.depthWrite;b.polygonOffset=this.polygonOffset;b.polygonOffsetFactor=this.polygonOffsetFactor;b.polygonOffsetUnits=this.polygonOffsetUnits;b.alphaTest=this.alphaTest;b.overdraw=this.overdraw;b.visible=this.visible;return b},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.MaterialIdCount=0;THREE.LineBasicMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=!1;this.fog=!0;this.setValues(b)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineBasicMaterial.prototype.clone=function(){var b=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.linewidth=this.linewidth;b.linecap=this.linecap;b.linejoin=this.linejoin;b.vertexColors=this.vertexColors;b.fog=this.fog;return b};THREE.LineDashedMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(b)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.clone=function(){var b=new THREE.LineDashedMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.linewidth=this.linewidth;b.scale=this.scale;b.dashSize=this.dashSize;b.gapSize=this.gapSize;b.vertexColors=this.vertexColors;b.fog=this.fog;return b};THREE.MeshBasicMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(b)};THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshBasicMaterial.prototype.clone=function(){var b=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.map=this.map;b.lightMap=this.lightMap;b.specularMap=this.specularMap;b.envMap=this.envMap;b.combine=this.combine;b.reflectivity=this.reflectivity;b.refractionRatio=this.refractionRatio;b.fog=this.fog;b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;b.wireframeLinecap=this.wireframeLinecap;b.wireframeLinejoin=this.wireframeLinejoin;b.vertexColors=this.vertexColors;b.skinning=this.skinning;b.morphTargets=this.morphTargets;return b};THREE.MeshLambertMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(b)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshLambertMaterial.prototype.clone=function(){var b=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.ambient.copy(this.ambient);b.emissive.copy(this.emissive);b.wrapAround=this.wrapAround;b.wrapRGB.copy(this.wrapRGB);b.map=this.map;b.lightMap=this.lightMap;b.specularMap=this.specularMap;b.envMap=this.envMap;b.combine=this.combine;b.reflectivity=this.reflectivity;b.refractionRatio=this.refractionRatio;b.fog=this.fog;b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;b.wireframeLinecap=this.wireframeLinecap;b.wireframeLinejoin=this.wireframeLinejoin;b.vertexColors=this.vertexColors;b.skinning=this.skinning;b.morphTargets=this.morphTargets;b.morphNormals=this.morphNormals;return b};THREE.MeshPhongMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.metal=!1;this.perPixel=!0;this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(b)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshPhongMaterial.prototype.clone=function(){var b=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.ambient.copy(this.ambient);b.emissive.copy(this.emissive);b.specular.copy(this.specular);b.shininess=this.shininess;b.metal=this.metal;b.perPixel=this.perPixel;b.wrapAround=this.wrapAround;b.wrapRGB.copy(this.wrapRGB);b.map=this.map;b.lightMap=this.lightMap;b.bumpMap=this.bumpMap;b.bumpScale=this.bumpScale;b.normalMap=this.normalMap;b.normalScale.copy(this.normalScale);b.specularMap=this.specularMap;b.envMap=this.envMap;b.combine=this.combine;b.reflectivity=this.reflectivity;b.refractionRatio=this.refractionRatio;b.fog=this.fog;b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;b.wireframeLinecap=this.wireframeLinecap;b.wireframeLinejoin=this.wireframeLinejoin;b.vertexColors=this.vertexColors;b.skinning=this.skinning;b.morphTargets=this.morphTargets;b.morphNormals=this.morphNormals;return b};THREE.MeshDepthMaterial=function(b){THREE.Material.call(this);this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(b)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var b=new THREE.MeshDepthMaterial;THREE.Material.prototype.clone.call(this,b);b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;return b};THREE.MeshNormalMaterial=function(b){THREE.Material.call(this,b);this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.morphTargets=!1;this.setValues(b)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var b=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,b);b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;return b};THREE.MeshFaceMaterial=function(b){this.materials=b instanceof Array?b:[]};THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial(this.materials.slice(0))};THREE.ParticleBasicMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=!1;this.fog=!0;this.setValues(b)};THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ParticleBasicMaterial.prototype.clone=function(){var b=new THREE.ParticleBasicMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.map=this.map;b.size=this.size;b.sizeAttenuation=this.sizeAttenuation;b.vertexColors=this.vertexColors;b.fog=this.fog;return b};THREE.ParticleCanvasMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(){};this.setValues(b)};THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ParticleCanvasMaterial.prototype.clone=function(){var b=new THREE.ParticleCanvasMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.program=this.program;return b};THREE.ShaderMaterial=function(b){THREE.Material.call(this);this.vertexShader=this.fragmentShader="void main() {}";this.uniforms={};this.defines={};this.attributes=null;this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(b)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ShaderMaterial.prototype.clone=function(){var b=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,b);b.fragmentShader=this.fragmentShader;b.vertexShader=this.vertexShader;b.uniforms=THREE.UniformsUtils.clone(this.uniforms);b.attributes=this.attributes;b.defines=this.defines;b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;b.fog=this.fog;b.lights=this.lights;b.vertexColors=this.vertexColors;b.skinning=this.skinning;b.morphTargets=this.morphTargets;b.morphNormals=this.morphNormals;return b};THREE.SpriteMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=new THREE.Texture;this.useScreenCoordinates=!0;this.depthTest=!this.useScreenCoordinates;this.sizeAttenuation=!this.useScreenCoordinates;this.scaleByViewport=!this.sizeAttenuation;this.alignment=THREE.SpriteAlignment.center.clone();this.fog=!1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1);this.setValues(b);b=b||{};void 0===b.depthTest&&(this.depthTest=!this.useScreenCoordinates);void 0===b.sizeAttenuation&&(this.sizeAttenuation=!this.useScreenCoordinates);void 0===b.scaleByViewport&&(this.scaleByViewport=!this.sizeAttenuation)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.clone=function(){var b=new THREE.SpriteMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.map=this.map;b.useScreenCoordinates=this.useScreenCoordinates;b.sizeAttenuation=this.sizeAttenuation;b.scaleByViewport=this.scaleByViewport;b.alignment.copy(this.alignment);b.uvOffset.copy(this.uvOffset);b.uvScale.copy(this.uvScale);b.fog=this.fog;return b};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);THREE.Texture=function(r,q,p,o,n,m,k,l,j){this.id=THREE.TextureIdCount++;this.name="";this.image=r;this.mipmaps=[];this.mapping=void 0!==q?q:new THREE.UVMapping;this.wrapS=void 0!==p?p:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==o?o:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==n?n:THREE.LinearFilter;this.minFilter=void 0!==m?m:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==j?j:1;this.format=void 0!==k?k:THREE.RGBAFormat;this.type=void 0!==l?l:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this.needsUpdate=!1;this.onUpdate=null};THREE.Texture.prototype={constructor:THREE.Texture,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent,clone:function(b){void 0===b&&(b=new THREE.Texture);b.image=this.image;b.mipmaps=this.mipmaps.slice(0);b.mapping=this.mapping;b.wrapS=this.wrapS;b.wrapT=this.wrapT;b.magFilter=this.magFilter;b.minFilter=this.minFilter;b.anisotropy=this.anisotropy;b.format=this.format;b.type=this.type;b.offset.copy(this.offset);b.repeat.copy(this.repeat);b.generateMipmaps=this.generateMipmaps;b.premultiplyAlpha=this.premultiplyAlpha;b.flipY=this.flipY;b.unpackAlignment=this.unpackAlignment;return b},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.TextureIdCount=0;THREE.CompressedTexture=function(v,u,t,s,r,q,o,p,n,m,k){THREE.Texture.call(this,null,q,o,p,n,m,s,r,k);this.image={width:u,height:t};this.mipmaps=v;this.generateMipmaps=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.clone=function(){var b=new THREE.CompressedTexture;THREE.Texture.prototype.clone.call(this,b);return b};THREE.DataTexture=function(v,u,t,s,r,q,o,p,n,m,k){THREE.Texture.call(this,null,q,o,p,n,m,s,r,k);this.image={data:v,width:u,height:t}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var b=new THREE.DataTexture;THREE.Texture.prototype.clone.call(this,b);return b};THREE.Particle=function(b){THREE.Object3D.call(this);this.material=b};THREE.Particle.prototype=Object.create(THREE.Object3D.prototype);THREE.Particle.prototype.clone=function(b){void 0===b&&(b=new THREE.Particle(this.material));THREE.Object3D.prototype.clone.call(this,b);return b};THREE.ParticleSystem=function(d,c){THREE.Object3D.call(this);this.geometry=d;this.material=void 0!==c?c:new THREE.ParticleBasicMaterial({color:16777215*Math.random()});this.sortParticles=!1;this.geometry&&null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere();this.frustumCulled=!1};THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);THREE.ParticleSystem.prototype.clone=function(b){void 0===b&&(b=new THREE.ParticleSystem(this.geometry,this.material));b.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,b);return b};THREE.Line=function(e,d,f){THREE.Object3D.call(this);this.geometry=e;this.material=void 0!==d?d:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==f?f:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);THREE.Line.prototype.clone=function(b){void 0===b&&(b=new THREE.Line(this.geometry,this.material,this.type));THREE.Object3D.prototype.clone.call(this,b);return b};THREE.Mesh=function(d,c){THREE.Object3D.call(this);this.material=this.geometry=null;this.setGeometry(d);this.setMaterial(c)};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.setGeometry=function(b){void 0!==b&&(this.geometry=b,null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.updateMorphTargets())};THREE.Mesh.prototype.setMaterial=function(b){this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0})};THREE.Mesh.prototype.updateMorphTargets=function(){if(0<this.geometry.morphTargets.length){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var d=0,c=this.geometry.morphTargets.length;d<c;d++){this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[d].name]=d}}};THREE.Mesh.prototype.getMorphTargetIndexByName=function(b){if(void 0!==this.morphTargetDictionary[b]){return this.morphTargetDictionary[b]}console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+b+" does not exist. Returning 0.");return 0};THREE.Mesh.prototype.clone=function(b){void 0===b&&(b=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,b);return b};THREE.Bone=function(b){THREE.Object3D.call(this);this.skin=b;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.update=function(f,e){this.matrixAutoUpdate&&(e|=this.updateMatrix());if(e||this.matrixWorldNeedsUpdate){f?this.skinMatrix.multiplyMatrices(f,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0}var h,g=this.children.length;for(h=0;h<g;h++){this.children[h].update(this.skinMatrix,e)}};THREE.SkinnedMesh=function(h,g,l){THREE.Mesh.call(this,h,g);this.useVertexTexture=void 0!==l?l:!0;this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var k,j,i;if(this.geometry&&void 0!==this.geometry.bones){for(h=0;h<this.geometry.bones.length;h++){l=this.geometry.bones[h],k=l.pos,j=l.rotq,i=l.scl,g=this.addBone(),g.name=l.name,g.position.set(k[0],k[1],k[2]),g.quaternion.set(j[0],j[1],j[2],j[3]),g.useQuaternion=!0,void 0!==i?g.scale.set(i[0],i[1],i[2]):g.scale.set(1,1,1)}for(h=0;h<this.bones.length;h++){l=this.geometry.bones[h],g=this.bones[h],-1===l.parent?this.add(g):this.bones[l.parent].add(g)}h=this.bones.length;this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=h=256<h?64:64<h?32:16<h?16:8,this.boneMatrices=new Float32Array(4*this.boneTextureWidth*this.boneTextureHeight),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*h);this.pose()}};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.addBone=function(b){void 0===b&&(b=new THREE.Bone(this));this.bones.push(b);return b};THREE.SkinnedMesh.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||e){this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1}for(var e=0,d=this.children.length;e<d;e++){var f=this.children[e];f instanceof THREE.Bone?f.update(this.identityMatrix,!1):f.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];e=0;for(d=this.bones.length;e<d;e++){f=new THREE.Matrix4,f.getInverse(this.bones[e].skinMatrix),this.boneInverses.push(f)}}e=0;for(d=this.bones.length;e<d;e++){THREE.SkinnedMesh.offsetMatrix.multiplyMatrices(this.bones[e].skinMatrix,this.boneInverses[e]),THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,16*e)}this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)};THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var e=0;e<this.geometry.skinIndices.length;e++){var d=this.geometry.skinWeights[e],f=1/d.lengthManhattan();Infinity!==f?d.multiplyScalar(f):d.set(1)}};THREE.SkinnedMesh.prototype.clone=function(b){void 0===b&&(b=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,b);return b};THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4;THREE.MorphAnimMesh=function(d,c){THREE.Mesh.call(this,d,c);this.duration=1000;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(d,c){this.startKeyframe=d;this.endKeyframe=c;this.length=this.endKeyframe-this.startKeyframe+1};THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};THREE.MorphAnimMesh.prototype.parseAnimations=function(){var j=this.geometry;j.animations||(j.animations={});for(var i,p=j.animations,o=/([a-z]+)(\d+)/,n=0,m=j.morphTargets.length;n<m;n++){var k=j.morphTargets[n].name.match(o);if(k&&1<k.length){k=k[1];p[k]||(p[k]={start:Infinity,end:-Infinity});var l=p[k];n<l.start&&(l.start=n);n>l.end&&(l.end=n);i||(i=k)}}j.firstAnimation=i};THREE.MorphAnimMesh.prototype.setAnimationLabel=function(e,d,f){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[e]={start:d,end:f}};THREE.MorphAnimMesh.prototype.playAnimation=function(e,d){var f=this.geometry.animations[e];f?(this.setFrameRange(f.start,f.end),this.duration=1000*((f.end-f.start)/d),this.time=0):console.warn("animation["+e+"] undefined")};THREE.MorphAnimMesh.prototype.updateAnimation=function(d){var c=this.duration/this.length;this.time+=this.direction*d;if(this.mirroredLoop){if(this.time>this.duration||0>this.time){this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}}else{this.time%=this.duration,0>this.time&&(this.time+=this.duration)}d=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/c),0,this.length-1);d!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[d]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=d);c=this.time%c/c;this.directionBackwards&&(c=1-c);this.morphTargetInfluences[this.currentKeyframe]=c;this.morphTargetInfluences[this.lastKeyframe]=1-c};THREE.MorphAnimMesh.prototype.clone=function(b){void 0===b&&(b=new THREE.MorphAnimMesh(this.geometry,this.material));b.duration=this.duration;b.mirroredLoop=this.mirroredLoop;b.time=this.time;b.lastKeyframe=this.lastKeyframe;b.currentKeyframe=this.currentKeyframe;b.direction=this.direction;b.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,b);return b};THREE.Ribbon=function(d,c){THREE.Object3D.call(this);this.geometry=d;this.material=c};THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype);THREE.Ribbon.prototype.clone=function(b){void 0===b&&(b=new THREE.Ribbon(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,b);return b};THREE.LOD=function(){THREE.Object3D.call(this);this.objects=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(e,d){void 0===d&&(d=0);for(var d=Math.abs(d),f=0;f<this.objects.length&&!(d<this.objects[f].distance);f++){}this.objects.splice(f,0,{distance:d,object:e});this.add(e)};THREE.LOD.prototype.getObjectForDistance=function(e){for(var d=1,f=this.objects.length;d<f&&!(e<this.objects[d].distance);d++){}return this.objects[d-1].object};THREE.LOD.prototype.update=function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(f){if(1<this.objects.length){d.getPositionFromMatrix(f.matrixWorld);c.getPositionFromMatrix(this.matrixWorld);f=d.distanceTo(c);this.objects[0].object.visible=!0;for(var b=1,a=this.objects.length;b<a;b++){if(f>=this.objects[b].distance){this.objects[b-1].object.visible=!1,this.objects[b].object.visible=!0}else{break}}for(;b<a;b++){this.objects[b].object.visible=!1}}}}();THREE.LOD.prototype.clone=function(){};THREE.Sprite=function(b){THREE.Object3D.call(this);this.material=void 0!==b?b:new THREE.SpriteMaterial;this.rotation3d=this.rotation;this.rotation=0};THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.updateMatrix=function(){this.rotation3d.set(0,0,this.rotation);this.quaternion.setFromEuler(this.rotation3d,this.eulerOrder);this.matrix.makeFromPositionQuaternionScale(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0};THREE.Sprite.prototype.clone=function(b){void 0===b&&(b=new THREE.Sprite(this.material));THREE.Object3D.prototype.clone.call(this,b);return b};THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.autoUpdate=!0;this.matrixAutoUpdate=!1;this.__objects=[];this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);THREE.Scene.prototype.__addObject=function(d){if(d instanceof THREE.Light){-1===this.__lights.indexOf(d)&&this.__lights.push(d),d.target&&void 0===d.target.parent&&this.add(d.target)}else{if(!(d instanceof THREE.Camera||d instanceof THREE.Bone)&&-1===this.__objects.indexOf(d)){this.__objects.push(d);this.__objectsAdded.push(d);var c=this.__objectsRemoved.indexOf(d);-1!==c&&this.__objectsRemoved.splice(c,1)}}for(c=0;c<d.children.length;c++){this.__addObject(d.children[c])}};THREE.Scene.prototype.__removeObject=function(d){if(d instanceof THREE.Light){var c=this.__lights.indexOf(d);-1!==c&&this.__lights.splice(c,1)}else{d instanceof THREE.Camera||(c=this.__objects.indexOf(d),-1!==c&&(this.__objects.splice(c,1),this.__objectsRemoved.push(d),c=this.__objectsAdded.indexOf(d),-1!==c&&this.__objectsAdded.splice(c,1)))}for(c=0;c<d.children.length;c++){this.__removeObject(d.children[c])}};THREE.Fog=function(e,d,f){this.name="";this.color=new THREE.Color(e);this.near=void 0!==d?d:1;this.far=void 0!==f?f:1000};THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(d,c){this.name="";this.color=new THREE.Color(d);this.density=void 0!==c?c:0.00025};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.CanvasRenderer=function(aO){function aN(j,i,q){for(var p=0,n=a9.length;p<n;p++){var m=a9[p];ae.copy(m.color);if(m instanceof THREE.DirectionalLight){var k=af.getPositionFromMatrix(m.matrixWorld).normalize(),l=i.dot(k);0>=l||(l*=m.intensity,q.add(ae.multiplyScalar(l)))}else{m instanceof THREE.PointLight&&(k=af.getPositionFromMatrix(m.matrixWorld),l=i.dot(af.subVectors(k,j).normalize()),0>=l||(l*=0==m.distance?1:1-Math.min(j.distanceTo(k)/m.distance,1),0!=l&&(l*=m.intensity,q.add(ae.multiplyScalar(l)))))}}}function aM(d,k,j,b,h,g,f,i){a8.info.render.vertices+=3;a8.info.render.faces++;ax(i.opacity);ay(i.blending);bq=d.positionScreen.x;bn=d.positionScreen.y;bt=k.positionScreen.x;ag=k.positionScreen.y;aW=j.positionScreen.x;bj=j.positionScreen.y;aJ(bq,bn,bt,ag,aW,bj);(i instanceof THREE.MeshLambertMaterial||i instanceof THREE.MeshPhongMaterial)&&null===i.map?(am.copy(i.color),Q.copy(i.emissive),i.vertexColors===THREE.FaceColors&&am.multiply(f.color),!1===i.wireframe&&i.shading==THREE.SmoothShading&&3==f.vertexNormalsLength?(by.copy(aB),S.copy(aB),aQ.copy(aB),aN(f.v1.positionWorld,f.vertexNormalsModel[0],by),aN(f.v2.positionWorld,f.vertexNormalsModel[1],S),aN(f.v3.positionWorld,f.vertexNormalsModel[2],aQ),by.multiply(am).add(Q),S.multiply(am).add(Q),aQ.multiply(am).add(Q),ad.addColors(S,aQ).multiplyScalar(0.5),bu=aC(by,S,aQ,ad),aD(bq,bn,bt,ag,aW,bj,0,0,1,0,0,1,bu)):(a4.copy(aB),aN(f.centroidModel,f.normalModel,a4),a4.multiply(am).add(Q),!0===i.wireframe?aH(a4,i.wireframeLinewidth,i.wireframeLinecap,i.wireframeLinejoin):aF(a4))):i instanceof THREE.MeshBasicMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.MeshPhongMaterial?null!==i.map?i.map.mapping instanceof THREE.UVMapping&&(bx=f.uvs[0],aG(bq,bn,bt,ag,aW,bj,bx[b].x,bx[b].y,bx[h].x,bx[h].y,bx[g].x,bx[g].y,i.map)):null!==i.envMap?i.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(af.copy(f.vertexNormalsModelView[b]),a5=0.5*af.x+0.5,bo=0.5*af.y+0.5,af.copy(f.vertexNormalsModelView[h]),bc=0.5*af.x+0.5,aA=0.5*af.y+0.5,af.copy(f.vertexNormalsModelView[g]),ab=0.5*af.x+0.5,P=0.5*af.y+0.5,aG(bq,bn,bt,ag,aW,bj,a5,bo,bc,aA,ab,P,i.envMap)):(a4.copy(i.color),i.vertexColors===THREE.FaceColors&&a4.multiply(f.color),!0===i.wireframe?aH(a4,i.wireframeLinewidth,i.wireframeLinecap,i.wireframeLinejoin):aF(a4)):i instanceof THREE.MeshDepthMaterial?(E=bd.near,o=bd.far,by.r=by.g=by.b=1-ao(d.positionScreen.z*d.positionScreen.w,E,o),S.r=S.g=S.b=1-ao(k.positionScreen.z*k.positionScreen.w,E,o),aQ.r=aQ.g=aQ.b=1-ao(j.positionScreen.z*j.positionScreen.w,E,o),ad.addColors(S,aQ).multiplyScalar(0.5),bu=aC(by,S,aQ,ad),aD(bq,bn,bt,ag,aW,bj,0,0,1,0,0,1,bu)):i instanceof THREE.MeshNormalMaterial&&(i.shading==THREE.FlatShading?(d=f.normalModelView,a4.setRGB(d.x,d.y,d.z).multiplyScalar(0.5).addScalar(0.5),!0===i.wireframe?aH(a4,i.wireframeLinewidth,i.wireframeLinecap,i.wireframeLinejoin):aF(a4)):i.shading==THREE.SmoothShading&&(d=f.vertexNormalsModelView[b],by.setRGB(d.x,d.y,d.z).multiplyScalar(0.5).addScalar(0.5),d=f.vertexNormalsModelView[h],S.setRGB(d.x,d.y,d.z).multiplyScalar(0.5).addScalar(0.5),d=f.vertexNormalsModelView[g],aQ.setRGB(d.x,d.y,d.z).multiplyScalar(0.5).addScalar(0.5),ad.addColors(S,aQ).multiplyScalar(0.5),bu=aC(by,S,aQ,ad),aD(bq,bn,bt,ag,aW,bj,0,0,1,0,0,1,bu)))}function aJ(h,g,l,k,j,i){an.beginPath();an.moveTo(h,g);an.lineTo(l,k);an.lineTo(j,i);an.closePath()}function aI(j,i,q,p,n,m,k,l){an.beginPath();an.moveTo(j,i);an.lineTo(q,p);an.lineTo(n,m);an.lineTo(k,l);an.closePath()}function aH(f,e,h,g){av(e);ar(h);au(g);aw(f.getStyle());an.stroke();al.expandByScalar(2*e)}function aF(b){at(b.getStyle());an.fill()}function aG(K,J,I,H,G,F,D,A,C,B,w,z,y){if(!(y instanceof THREE.DataTexture||void 0===y.image||0==y.image.width)){if(!0===y.needsUpdate){var v=y.wrapS==THREE.RepeatWrapping,s=y.wrapT==THREE.RepeatWrapping;aK[y.id]=an.createPattern(y.image,!0===v&&!0===s?"repeat":!0===v&&!1===s?"repeat-x":!1===v&&!0===s?"repeat-y":"no-repeat");y.needsUpdate=!1}void 0===aK[y.id]?at("rgba(0,0,0,1)"):at(aK[y.id]);var v=y.offset.x/y.repeat.x,s=y.offset.y/y.repeat.y,h=y.image.width*y.repeat.x,L=y.image.height*y.repeat.y,D=(D+v)*h,A=(1-A+s)*L,I=I-K,H=H-J,G=G-K,F=F-J,C=(C+v)*h-D,B=(1-B+s)*L-A,w=(w+v)*h-D,z=(1-z+s)*L-A,v=C*z-w*B;0===v?(void 0===bs[y.id]&&(J=document.createElement("canvas"),J.width=y.image.width,J.height=y.image.height,J=J.getContext("2d"),J.drawImage(y.image,0,0),bs[y.id]=J.getImageData(0,0,y.image.width,y.image.height).data),J=bs[y.id],D=4*(Math.floor(D)+Math.floor(A)*y.image.width),a4.setRGB(J[D]/255,J[D+1]/255,J[D+2]/255),aF(a4)):(v=1/v,y=(z*I-B*G)*v,B=(z*H-B*F)*v,I=(C*G-w*I)*v,H=(C*F-w*H)*v,K=K-y*D-I*A,D=J-B*D-H*A,an.save(),an.transform(y,B,I,H,K,D),an.fill(),an.restore())}}function aD(H,G,F,D,C,B,z,A,v,y,w,r,s){var t,q;t=s.width-1;q=s.height-1;z*=t;A*=q;F-=H;D-=G;C-=H;B-=G;v=v*t-z;y=y*q-A;w=w*t-z;r=r*q-A;q=1/(v*r-w*y);t=(r*F-y*C)*q;y=(r*D-y*B)*q;F=(v*C-w*F)*q;D=(v*B-w*D)*q;H=H-t*z-F*A;G=G-y*z-D*A;an.save();an.transform(t,y,F,D,H,G);an.clip();an.drawImage(s,0,0);an.restore()}function aC(f,e,h,g){ak[0]=255*f.r|0;ak[1]=255*f.g|0;ak[2]=255*f.b|0;ak[4]=255*e.r|0;ak[5]=255*e.g|0;ak[6]=255*e.b|0;ak[8]=255*h.r|0;ak[9]=255*h.g|0;ak[10]=255*h.b|0;ak[12]=255*g.r|0;ak[13]=255*g.g|0;ak[14]=255*g.b|0;bk.putImageData(ai,0,0);W.drawImage(bv,0,0);return u}function az(h,g,l){var k=g.x-h.x,j=g.y-h.y,i=k*k+j*j;0!==i&&(l/=Math.sqrt(i),k*=l,j*=l,g.x+=k,g.y+=j,h.x-=k,h.y-=j)}function ax(b){aS!==b&&(aS=an.globalAlpha=b)}function ay(b){a2!==b&&(b===THREE.NormalBlending?an.globalCompositeOperation="source-over":b===THREE.AdditiveBlending?an.globalCompositeOperation="lighter":b===THREE.SubtractiveBlending&&(an.globalCompositeOperation="darker"),a2=b)}function av(b){aT!==b&&(aT=an.lineWidth=b)}function ar(b){aY!==b&&(aY=an.lineCap=b)}function au(b){X!==b&&(X=an.lineJoin=b)}function aw(b){aL!==b&&(aL=an.strokeStyle=b)}function at(b){aR!==b&&(aR=an.fillStyle=b)}function aq(d,c){if(U!==d||ac!==c){an.setLineDash([d,c]),U=d,ac=c}}console.log("THREE.CanvasRenderer",THREE.REVISION);var ao=THREE.Math.smoothstep,aO=aO||{},a8=this,a7,a6,a9,bg=new THREE.Projector,bf=void 0!==aO.canvas?aO.canvas:document.createElement("canvas"),a1,be,a3,aZ,an=bf.getContext("2d"),a0=new THREE.Color(0),ap=0,aS=1,a2=0,aL=null,aR=null,aT=null,aY=null,X=null,U=null,ac=0,bd,aV,R,aj,bi,ah=new THREE.RenderableVertex,aP=new THREE.RenderableVertex,bq,bn,bt,ag,aW,bj,bw,aU,bm,x,aX,aE,a4=new THREE.Color,by=new THREE.Color,S=new THREE.Color,aQ=new THREE.Color,ad=new THREE.Color,am=new THREE.Color,Q=new THREE.Color,ae=new THREE.Color,aK={},bs={},E,o,bu,bx,a5,bo,bc,aA,ab,P,br=new THREE.Box2,ba=new THREE.Box2,al=new THREE.Box2,aB=new THREE.Color,bp=new THREE.Color,bh=new THREE.Color,af=new THREE.Vector3,bv,bk,ai,ak,u,W,bl=16;bv=document.createElement("canvas");bv.width=bv.height=2;bk=bv.getContext("2d");bk.fillStyle="rgba(0,0,0,1)";bk.fillRect(0,0,2,2);ai=bk.getImageData(0,0,2,2);ak=ai.data;u=document.createElement("canvas");u.width=u.height=bl;W=u.getContext("2d");W.translate(-bl/2,-bl/2);W.scale(bl,bl);bl--;void 0===an.setLineDash&&(an.setLineDash=void 0!==an.mozDash?function(b){an.mozDash=null!==b[0]?b:null}:function(){});this.domElement=bf;this.devicePixelRatio=void 0!==aO.devicePixelRatio?aO.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.supportsVertexTextures=function(){};this.setFaceCulling=function(){};this.setSize=function(e,d,f){a1=e*this.devicePixelRatio;be=d*this.devicePixelRatio;a3=Math.floor(a1/2);aZ=Math.floor(be/2);bf.width=a1;bf.height=be;1!==this.devicePixelRatio&&!1!==f&&(bf.style.width=e+"px",bf.style.height=d+"px");br.set(new THREE.Vector2(-a3,-aZ),new THREE.Vector2(a3,aZ));ba.set(new THREE.Vector2(-a3,-aZ),new THREE.Vector2(a3,aZ));aS=1;a2=0;X=aY=aT=aR=aL=null};this.setClearColor=function(d,c){a0.set(d);ap=void 0!==c?c:1;ba.set(new THREE.Vector2(-a3,-aZ),new THREE.Vector2(a3,aZ))};this.setClearColorHex=function(d,c){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(d,c)};this.getMaxAnisotropy=function(){return 0};this.clear=function(){an.setTransform(1,0,0,-1,a3,aZ);!1===ba.empty()&&(ba.intersect(br),ba.expandByScalar(2),1>ap&&an.clearRect(ba.min.x|0,ba.min.y|0,ba.max.x-ba.min.x|0,ba.max.y-ba.min.y|0),0<ap&&(ay(THREE.NormalBlending),ax(1),at("rgba("+Math.floor(255*a0.r)+","+Math.floor(255*a0.g)+","+Math.floor(255*a0.b)+","+ap+")"),an.fillRect(ba.min.x|0,ba.min.y|0,ba.max.x-ba.min.x|0,ba.max.y-ba.min.y|0)),ba.makeEmpty())};this.render=function(q,m){if(!1===m instanceof THREE.Camera){console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.")}else{!0===this.autoClear&&this.clear();an.setTransform(1,0,0,-1,a3,aZ);a8.info.render.vertices=0;a8.info.render.faces=0;a7=bg.projectScene(q,m,this.sortObjects,this.sortElements);a6=a7.elements;a9=a7.lights;bd=m;aB.setRGB(0,0,0);bp.setRGB(0,0,0);bh.setRGB(0,0,0);for(var i=0,c=a9.length;i<c;i++){var s=a9[i],b=s.color;s instanceof THREE.AmbientLight?aB.add(b):s instanceof THREE.DirectionalLight?bp.add(b):s instanceof THREE.PointLight&&bh.add(b)}i=0;for(c=a6.length;i<c;i++){var h=a6[i],s=h.material;if(!(void 0===s||!1===s.visible)){al.makeEmpty();if(h instanceof THREE.RenderableParticle){aV=h;aV.x*=a3;aV.y*=aZ;b=aV;ax(s.opacity);ay(s.blending);var r=void 0,l=void 0,p=void 0,f=void 0,j=void 0,t=void 0,n=void 0;s instanceof THREE.ParticleBasicMaterial?null===s.map?(p=h.object.scale.x,f=h.object.scale.y,p*=h.scale.x*a3,f*=h.scale.y*aZ,al.min.set(b.x-p,b.y-f),al.max.set(b.x+p,b.y+f),!1===br.isIntersectionBox(al)?al.makeEmpty():(at(s.color.getStyle()),an.save(),an.translate(b.x,b.y),an.rotate(-h.rotation),an.scale(p,f),an.fillRect(-1,-1,2,2),an.restore())):(j=s.map.image,t=j.width>>1,n=j.height>>1,p=h.scale.x*a3,f=h.scale.y*aZ,r=p*t,l=f*n,al.min.set(b.x-r,b.y-l),al.max.set(b.x+r,b.y+l),!1===br.isIntersectionBox(al)?al.makeEmpty():(an.save(),an.translate(b.x,b.y),an.rotate(-h.rotation),an.scale(p,-f),an.translate(-t,-n),an.drawImage(j,0,0),an.restore())):s instanceof THREE.ParticleCanvasMaterial&&(r=h.scale.x*a3,l=h.scale.y*aZ,al.min.set(b.x-r,b.y-l),al.max.set(b.x+r,b.y+l),!1===br.isIntersectionBox(al)?al.makeEmpty():(aw(s.color.getStyle()),at(s.color.getStyle()),an.save(),an.translate(b.x,b.y),an.rotate(-h.rotation),an.scale(r,l),s.program(an),an.restore()))}else{if(h instanceof THREE.RenderableLine){if(aV=h.v1,R=h.v2,aV.positionScreen.x*=a3,aV.positionScreen.y*=aZ,R.positionScreen.x*=a3,R.positionScreen.y*=aZ,al.setFromPoints([aV.positionScreen,R.positionScreen]),!0===br.isIntersectionBox(al)){if(b=aV,r=R,ax(s.opacity),ay(s.blending),an.beginPath(),an.moveTo(b.positionScreen.x,b.positionScreen.y),an.lineTo(r.positionScreen.x,r.positionScreen.y),s instanceof THREE.LineBasicMaterial){av(s.linewidth);ar(s.linecap);au(s.linejoin);if(s.vertexColors!==THREE.VertexColors){aw(s.color.getStyle())}else{if(l=h.vertexColors[0].getStyle(),h=h.vertexColors[1].getStyle(),l===h){aw(l)}else{try{var e=an.createLinearGradient(b.positionScreen.x,b.positionScreen.y,r.positionScreen.x,r.positionScreen.y);e.addColorStop(0,l);e.addColorStop(1,h)}catch(d){e=l}aw(e)}}an.stroke();al.expandByScalar(2*s.linewidth)}else{s instanceof THREE.LineDashedMaterial&&(av(s.linewidth),ar(s.linecap),au(s.linejoin),aw(s.color.getStyle()),aq(s.dashSize,s.gapSize),an.stroke(),al.expandByScalar(2*s.linewidth),aq(null,null))}}}else{if(h instanceof THREE.RenderableFace3){aV=h.v1;R=h.v2;aj=h.v3;if(-1>aV.positionScreen.z||1<aV.positionScreen.z){continue}if(-1>R.positionScreen.z||1<R.positionScreen.z){continue}if(-1>aj.positionScreen.z||1<aj.positionScreen.z){continue}aV.positionScreen.x*=a3;aV.positionScreen.y*=aZ;R.positionScreen.x*=a3;R.positionScreen.y*=aZ;aj.positionScreen.x*=a3;aj.positionScreen.y*=aZ;0<s.overdraw&&(az(aV.positionScreen,R.positionScreen,s.overdraw),az(R.positionScreen,aj.positionScreen,s.overdraw),az(aj.positionScreen,aV.positionScreen,s.overdraw));al.setFromPoints([aV.positionScreen,R.positionScreen,aj.positionScreen]);!0===br.isIntersectionBox(al)&&aM(aV,R,aj,0,1,2,h,s)}else{if(h instanceof THREE.RenderableFace4){aV=h.v1;R=h.v2;aj=h.v3;bi=h.v4;if(-1>aV.positionScreen.z||1<aV.positionScreen.z){continue}if(-1>R.positionScreen.z||1<R.positionScreen.z){continue}if(-1>aj.positionScreen.z||1<aj.positionScreen.z){continue}if(-1>bi.positionScreen.z||1<bi.positionScreen.z){continue}aV.positionScreen.x*=a3;aV.positionScreen.y*=aZ;R.positionScreen.x*=a3;R.positionScreen.y*=aZ;aj.positionScreen.x*=a3;aj.positionScreen.y*=aZ;bi.positionScreen.x*=a3;bi.positionScreen.y*=aZ;ah.positionScreen.copy(R.positionScreen);aP.positionScreen.copy(bi.positionScreen);0<s.overdraw&&(az(aV.positionScreen,R.positionScreen,s.overdraw),az(R.positionScreen,bi.positionScreen,s.overdraw),az(bi.positionScreen,aV.positionScreen,s.overdraw),az(aj.positionScreen,ah.positionScreen,s.overdraw),az(aj.positionScreen,aP.positionScreen,s.overdraw));al.setFromPoints([aV.positionScreen,R.positionScreen,aj.positionScreen,bi.positionScreen]);!0===br.isIntersectionBox(al)&&(b=aV,r=R,l=aj,p=bi,f=ah,j=aP,a8.info.render.vertices+=4,a8.info.render.faces++,ax(s.opacity),ay(s.blending),void 0!==s.map&&null!==s.map||void 0!==s.envMap&&null!==s.envMap?(aM(b,r,p,0,1,3,h,s),aM(f,l,j,1,2,3,h,s)):(bq=b.positionScreen.x,bn=b.positionScreen.y,bt=r.positionScreen.x,ag=r.positionScreen.y,aW=l.positionScreen.x,bj=l.positionScreen.y,bw=p.positionScreen.x,aU=p.positionScreen.y,bm=f.positionScreen.x,x=f.positionScreen.y,aX=j.positionScreen.x,aE=j.positionScreen.y,s instanceof THREE.MeshLambertMaterial||s instanceof THREE.MeshPhongMaterial?(am.copy(s.color),Q.copy(s.emissive),s.vertexColors===THREE.FaceColors&&am.multiply(h.color),!1===s.wireframe&&s.shading==THREE.SmoothShading&&4==h.vertexNormalsLength?(by.copy(aB),S.copy(aB),aQ.copy(aB),ad.copy(aB),aN(h.v1.positionWorld,h.vertexNormalsModel[0],by),aN(h.v2.positionWorld,h.vertexNormalsModel[1],S),aN(h.v4.positionWorld,h.vertexNormalsModel[3],aQ),aN(h.v3.positionWorld,h.vertexNormalsModel[2],ad),by.multiply(am).add(Q),S.multiply(am).add(Q),aQ.multiply(am).add(Q),ad.multiply(am).add(Q),bu=aC(by,S,aQ,ad),aJ(bq,bn,bt,ag,bw,aU),aD(bq,bn,bt,ag,bw,aU,0,0,1,0,0,1,bu),aJ(bm,x,aW,bj,aX,aE),aD(bm,x,aW,bj,aX,aE,1,0,1,1,0,1,bu)):(a4.copy(aB),aN(h.centroidModel,h.normalModel,a4),a4.multiply(am).add(Q),aI(bq,bn,bt,ag,aW,bj,bw,aU),!0===s.wireframe?aH(a4,s.wireframeLinewidth,s.wireframeLinecap,s.wireframeLinejoin):aF(a4))):s instanceof THREE.MeshBasicMaterial?(a4.copy(s.color),s.vertexColors===THREE.FaceColors&&a4.multiply(h.color),aI(bq,bn,bt,ag,aW,bj,bw,aU),!0===s.wireframe?aH(a4,s.wireframeLinewidth,s.wireframeLinecap,s.wireframeLinejoin):aF(a4)):s instanceof THREE.MeshNormalMaterial?(b=void 0,s.shading==THREE.FlatShading?(b=h.normalModelView,a4.setRGB(b.x,b.y,b.z).multiplyScalar(0.5).addScalar(0.5),aI(bq,bn,bt,ag,aW,bj,bw,aU),!0===s.wireframe?aH(a4,s.wireframeLinewidth,s.wireframeLinecap,s.wireframeLinejoin):aF(a4)):s.shading==THREE.SmoothShading&&(b=h.vertexNormalsModelView[0],by.setRGB(b.x,b.y,b.z).multiplyScalar(0.5).addScalar(0.5),b=h.vertexNormalsModelView[1],S.setRGB(b.x,b.y,b.z).multiplyScalar(0.5).addScalar(0.5),b=h.vertexNormalsModelView[3],aQ.setRGB(b.x,b.y,b.z).multiplyScalar(0.5).addScalar(0.5),b=h.vertexNormalsModelView[2],ad.setRGB(b.x,b.y,b.z).multiplyScalar(0.5).addScalar(0.5),bu=aC(by,S,aQ,ad),aJ(bq,bn,bt,ag,bw,aU),aD(bq,bn,bt,ag,bw,aU,0,0,1,0,0,1,bu),aJ(bm,x,aW,bj,aX,aE),aD(bm,x,aW,bj,aX,aE,1,0,1,1,0,1,bu))):s instanceof THREE.MeshDepthMaterial&&(E=bd.near,o=bd.far,by.r=by.g=by.b=1-ao(b.positionScreen.z*b.positionScreen.w,E,o),S.r=S.g=S.b=1-ao(r.positionScreen.z*r.positionScreen.w,E,o),aQ.r=aQ.g=aQ.b=1-ao(p.positionScreen.z*p.positionScreen.w,E,o),ad.r=ad.g=ad.b=1-ao(l.positionScreen.z*l.positionScreen.w,E,o),bu=aC(by,S,aQ,ad),aJ(bq,bn,bt,ag,bw,aU),aD(bq,bn,bt,ag,bw,aU,0,0,1,0,0,1,bu),aJ(bm,x,aW,bj,aX,aE),aD(bm,x,aW,bj,aX,aE,1,0,1,1,0,1,bu))))}}}}ba.union(al)}}an.setTransform(1,0,0,1,0,0)}}};THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else if ( combine == 2 ) {\ngl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 worldPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nworldNormal = normalize( worldNormal );\nvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, worldNormal );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\nvec4 texelColor = texture2D( map, vUv );\n#ifdef GAMMA_INPUT\ntexelColor.xyz *= texelColor.xyz;\n#endif\ngl_FragColor = gl_FragColor * texelColor;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = worldPosition.xyz;\n#endif",lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, N_BONE_PIXEL_X );\nfloat y = floor( j / N_BONE_PIXEL_X );\nconst float dx = 1.0 / N_BONE_PIXEL_X;\nconst float dy = 1.0 / N_BONE_PIXEL_Y;\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix \t+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#if defined( SHADOWMAP_TYPE_PCF )\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\nfloat shadow = 0.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.0 * xPixelOffset;\nfloat dy0 = -1.0 * yPixelOffset;\nfloat dx1 = 1.0 * xPixelOffset;\nfloat dy1 = 1.0 * yPixelOffset;\nmat3 shadowKernel;\nmat3 depthKernel;\ndepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\ndepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\ndepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\ndepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\ndepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\ndepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\ndepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\ndepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\ndepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nvec3 shadowZ = vec3( shadowCoord.z );\nshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\nshadowKernel[0] *= vec3(0.25);\nshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\nshadowKernel[1] *= vec3(0.25);\nshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\nshadowKernel[2] *= vec3(0.25);\nvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\nshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\nshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\nvec4 shadowValues;\nshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\nshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\nshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\nshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\nshadow = dot( shadowValues, vec4( 1.0 ) );\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};THREE.UniformsUtils={merge:function(g){var f,j,i,h={};for(f=0;f<g.length;f++){for(j in i=this.clone(g[f]),i){h[j]=i[j]}}return h},clone:function(g){var f,j,i,h={};for(f in g){for(j in h[f]={},g[f]){i=g[f][j],h[f][j]=i instanceof THREE.Color||i instanceof THREE.Vector2||i instanceof THREE.Vector3||i instanceof THREE.Vector4||i instanceof THREE.Matrix4||i instanceof THREE.Texture?i.clone():i instanceof Array?i.slice():i}}return h}};THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:0.00025},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2000},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:0.00025},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2000},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\nif ( mod( vLineDistance, totalSize ) > dashSize ) {\ndiscard;\n}\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2000},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:0.98},uReflectivity:{type:"f",value:0.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float uRefractionRatio;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += uDiffuseColor * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, uRefractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalize( normalMatrix * skinnedNormal.xyz );\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n#else\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\n#endif\nvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = worldPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif\n}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vWorldPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvWorldPosition = worldPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\nvoid main() {\ngl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n}"},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};THREE.WebGLRenderer=function(aS){function aQ(d){if(d.__webglCustomAttributesList){for(var c in d.__webglCustomAttributesList){aD.deleteBuffer(d.__webglCustomAttributesList[c].buffer)}}}function aP(i,g){var n=i.vertices.length,m=g.material;if(m.attributes){void 0===i.__webglCustomAttributesList&&(i.__webglCustomAttributesList=[]);for(var l in m.attributes){var k=m.attributes[l];if(!k.__webglInitialized||k.createUniqueBuffers){k.__webglInitialized=!0;var j=1;"v2"===k.type?j=2:"v3"===k.type?j=3:"v4"===k.type?j=4:"c"===k.type&&(j=3);k.size=j;k.array=new Float32Array(n*j);k.buffer=aD.createBuffer();k.buffer.belongsToAttribute=l;k.needsUpdate=!0}i.__webglCustomAttributesList.push(k)}}}function aM(A,z){var y=z.geometry,w=A.faces3,v=A.faces4,t=3*w.length+4*v.length,s=1*w.length+2*v.length,v=3*w.length+4*v.length,w=aL(z,A),h=aI(w),k=aK(w),r=w.vertexColors?w.vertexColors:!1;A.__vertexArray=new Float32Array(3*t);k&&(A.__normalArray=new Float32Array(3*t));y.hasTangents&&(A.__tangentArray=new Float32Array(4*t));r&&(A.__colorArray=new Float32Array(3*t));if(h){if(0<y.faceUvs.length||0<y.faceVertexUvs.length){A.__uvArray=new Float32Array(2*t)}if(1<y.faceUvs.length||1<y.faceVertexUvs.length){A.__uv2Array=new Float32Array(2*t)}}z.geometry.skinWeights.length&&z.geometry.skinIndices.length&&(A.__skinIndexArray=new Float32Array(4*t),A.__skinWeightArray=new Float32Array(4*t));A.__faceArray=new Uint16Array(3*s);A.__lineArray=new Uint16Array(2*v);if(A.numMorphTargets){A.__morphTargetsArrays=[];y=0;for(h=A.numMorphTargets;y<h;y++){A.__morphTargetsArrays.push(new Float32Array(3*t))}}if(A.numMorphNormals){A.__morphNormalsArrays=[];y=0;for(h=A.numMorphNormals;y<h;y++){A.__morphNormalsArrays.push(new Float32Array(3*t))}}A.__webglFaceCount=3*s;A.__webglLineCount=2*v;if(w.attributes){void 0===A.__webglCustomAttributesList&&(A.__webglCustomAttributesList=[]);for(var f in w.attributes){var s=w.attributes[f],y={},e;for(e in s){y[e]=s[e]}if(!y.__webglInitialized||y.createUniqueBuffers){y.__webglInitialized=!0,v=1,"v2"===y.type?v=2:"v3"===y.type?v=3:"v4"===y.type?v=4:"c"===y.type&&(v=3),y.size=v,y.array=new Float32Array(t*v),y.buffer=aD.createBuffer(),y.buffer.belongsToAttribute=f,s.needsUpdate=!0,y.__original=s}A.__webglCustomAttributesList.push(y)}}A.__inittedArrays=!0}function aL(d,c){return d.material instanceof THREE.MeshFaceMaterial?d.material.materials[c.materialIndex]:d.material}function aK(b){return b instanceof THREE.MeshBasicMaterial&&!b.envMap||b instanceof THREE.MeshDepthMaterial?!1:b&&void 0!==b.shading&&b.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function aI(b){return b.map||b.lightMap||b.bumpMap||b.normalMap||b.specularMap||b instanceof THREE.ShaderMaterial?!0:!1}function aJ(b){bx[b]||(aD.enableVertexAttribArray(b),bx[b]=!0)}function aG(){for(var b in bx){bx[b]&&(aD.disableVertexAttribArray(b),bx[b]=!1)}}function aF(d,c){return d.z!==c.z?c.z-d.z:d.id-c.id}function aC(d,c){return c[0]-d[0]}function aA(g,f,j){if(g.length){for(var i=0,h=g.length;i<h;i++){bv=al=null,aj=aT=a0=ah=a1=x=bn=-1,bt=!0,g[i].render(f,j,af,aN),bv=al=null,aj=aT=a0=ah=a1=x=bn=-1,bt=!0}}}function aB(C,B,A,z,y,w,t,v){var q,s,r,l;B?(s=C.length-1,l=B=-1):(s=0,B=C.length,l=1);for(var p=s;p!==B;p+=l){if(q=C[p],q.render){s=q.object;r=q.buffer;if(v){q=v}else{q=q[A];if(!q){continue}t&&bh.setBlending(q.blending,q.blendEquation,q.blendSrc,q.blendDst);bh.setDepthTest(q.depthTest);bh.setDepthWrite(q.depthWrite);a5(q.polygonOffset,q.polygonOffsetFactor,q.polygonOffsetUnits)}bh.setMaterialFaces(q);r instanceof THREE.BufferGeometry?bh.renderBufferDirect(z,y,w,q,r,s):bh.renderBuffer(z,y,w,q,r,s)}}}function ay(y,w,v,t,s,r,p){for(var q,l,n=0,m=y.length;n<m;n++){if(q=y[n],l=q.object,l.visible){if(p){q=p}else{q=q[w];if(!q){continue}r&&bh.setBlending(q.blending,q.blendEquation,q.blendSrc,q.blendDst);bh.setDepthTest(q.depthTest);bh.setDepthWrite(q.depthWrite);a5(q.polygonOffset,q.polygonOffsetFactor,q.polygonOffsetUnits)}bh.renderImmediateObject(v,t,s,q,l)}}}function av(G,F){var D,C,A,B;if(void 0===G.__webglInit&&(G.__webglInit=!0,G._modelViewMatrix=new THREE.Matrix4,G._normalMatrix=new THREE.Matrix3,void 0!==G.geometry&&void 0===G.geometry.__webglInit&&(G.geometry.__webglInit=!0,G.geometry.addEventListener("dispose",S)),C=G.geometry,void 0!==C)){if(C instanceof THREE.BufferGeometry){var z,y;for(z in C.attributes){y="index"===z?aD.ELEMENT_ARRAY_BUFFER:aD.ARRAY_BUFFER,B=C.attributes[z],B.buffer=aD.createBuffer(),aD.bindBuffer(y,B.buffer),aD.bufferData(y,B.array,aD.STATIC_DRAW)}}else{if(G instanceof THREE.Mesh){A=G.material;if(void 0===C.geometryGroups){z=C;var k,r,w,d,c;y={};var J=z.morphTargets.length,I=z.morphNormals.length,H=A instanceof THREE.MeshFaceMaterial;z.geometryGroups={};A=0;for(k=z.faces.length;A<k;A++){r=z.faces[A],w=H?r.materialIndex:0,void 0===y[w]&&(y[w]={hash:w,counter:0}),c=y[w].hash+"_"+y[w].counter,void 0===z.geometryGroups[c]&&(z.geometryGroups[c]={faces3:[],faces4:[],materialIndex:w,vertices:0,numMorphTargets:J,numMorphNormals:I}),d=r instanceof THREE.Face3?3:4,65535<z.geometryGroups[c].vertices+d&&(y[w].counter+=1,c=y[w].hash+"_"+y[w].counter,void 0===z.geometryGroups[c]&&(z.geometryGroups[c]={faces3:[],faces4:[],materialIndex:w,vertices:0,numMorphTargets:J,numMorphNormals:I})),r instanceof THREE.Face3?z.geometryGroups[c].faces3.push(A):z.geometryGroups[c].faces4.push(A),z.geometryGroups[c].vertices+=d}z.geometryGroupsList=[];for(B in z.geometryGroups){z.geometryGroups[B].id=bs++,z.geometryGroupsList.push(z.geometryGroups[B])}}for(D in C.geometryGroups){if(B=C.geometryGroups[D],!B.__webglVertexBuffer){z=B;z.__webglVertexBuffer=aD.createBuffer();z.__webglNormalBuffer=aD.createBuffer();z.__webglTangentBuffer=aD.createBuffer();z.__webglColorBuffer=aD.createBuffer();z.__webglUVBuffer=aD.createBuffer();z.__webglUV2Buffer=aD.createBuffer();z.__webglSkinIndicesBuffer=aD.createBuffer();z.__webglSkinWeightsBuffer=aD.createBuffer();z.__webglFaceBuffer=aD.createBuffer();z.__webglLineBuffer=aD.createBuffer();J=y=void 0;if(z.numMorphTargets){z.__webglMorphTargetsBuffers=[];y=0;for(J=z.numMorphTargets;y<J;y++){z.__webglMorphTargetsBuffers.push(aD.createBuffer())}}if(z.numMorphNormals){z.__webglMorphNormalsBuffers=[];y=0;for(J=z.numMorphNormals;y<J;y++){z.__webglMorphNormalsBuffers.push(aD.createBuffer())}}bh.info.memory.geometries++;aM(B,G);C.verticesNeedUpdate=!0;C.morphTargetsNeedUpdate=!0;C.elementsNeedUpdate=!0;C.uvsNeedUpdate=!0;C.normalsNeedUpdate=!0;C.tangentsNeedUpdate=!0;C.colorsNeedUpdate=!0}}}else{G instanceof THREE.Ribbon?C.__webglVertexBuffer||(B=C,B.__webglVertexBuffer=aD.createBuffer(),B.__webglColorBuffer=aD.createBuffer(),B.__webglNormalBuffer=aD.createBuffer(),bh.info.memory.geometries++,B=C,z=B.vertices.length,B.__vertexArray=new Float32Array(3*z),B.__colorArray=new Float32Array(3*z),B.__normalArray=new Float32Array(3*z),B.__webglVertexCount=z,aP(B,G),C.verticesNeedUpdate=!0,C.colorsNeedUpdate=!0,C.normalsNeedUpdate=!0):G instanceof THREE.Line?C.__webglVertexBuffer||(B=C,B.__webglVertexBuffer=aD.createBuffer(),B.__webglColorBuffer=aD.createBuffer(),B.__webglLineDistanceBuffer=aD.createBuffer(),bh.info.memory.geometries++,B=C,z=B.vertices.length,B.__vertexArray=new Float32Array(3*z),B.__colorArray=new Float32Array(3*z),B.__lineDistanceArray=new Float32Array(1*z),B.__webglLineCount=z,aP(B,G),C.verticesNeedUpdate=!0,C.colorsNeedUpdate=!0,C.lineDistancesNeedUpdate=!0):G instanceof THREE.ParticleSystem&&!C.__webglVertexBuffer&&(B=C,B.__webglVertexBuffer=aD.createBuffer(),B.__webglColorBuffer=aD.createBuffer(),bh.info.memory.geometries++,B=C,z=B.vertices.length,B.__vertexArray=new Float32Array(3*z),B.__colorArray=new Float32Array(3*z),B.__sortArray=[],B.__webglParticleCount=z,aP(B,G),C.verticesNeedUpdate=!0,C.colorsNeedUpdate=!0)}}}if(void 0===G.__webglActive){if(G instanceof THREE.Mesh){if(C=G.geometry,C instanceof THREE.BufferGeometry){ax(F.__webglObjects,C,G)}else{if(C instanceof THREE.Geometry){for(D in C.geometryGroups){B=C.geometryGroups[D],ax(F.__webglObjects,B,G)}}}}else{G instanceof THREE.Ribbon||G instanceof THREE.Line||G instanceof THREE.ParticleSystem?(C=G.geometry,ax(F.__webglObjects,C,G)):G instanceof THREE.ImmediateRenderObject||G.immediateRenderCallback?F.__webglObjectsImmediate.push({id:null,object:G,opaque:null,transparent:null,z:0}):G instanceof THREE.Sprite?F.__webglSprites.push(G):G instanceof THREE.LensFlare&&F.__webglFlares.push(G)}G.__webglActive=!0}}function ax(e,d,f){e.push({id:null,buffer:d,object:f,opaque:null,transparent:null,z:0})}function az(d){for(var c in d.attributes){if(d.attributes[c].needsUpdate){return !0}}return !1}function aw(d){for(var c in d.attributes){d.attributes[c].needsUpdate=!1}}function au(d,c){d instanceof THREE.Mesh||d instanceof THREE.ParticleSystem||d instanceof THREE.Ribbon||d instanceof THREE.Line?ar(c.__webglObjects,d):d instanceof THREE.Sprite?bd(c.__webglSprites,d):d instanceof THREE.LensFlare?bd(c.__webglFlares,d):(d instanceof THREE.ImmediateRenderObject||d.immediateRenderCallback)&&ar(c.__webglObjectsImmediate,d);delete d.__webglActive}function ar(e,d){for(var f=e.length-1;0<=f;f--){e[f].object===d&&e.splice(f,1)}}function bd(e,d){for(var f=e.length-1;0<=f;f--){e[f]===d&&e.splice(f,1)}}function bc(b9,b8,b7,b6,b5){by=0;b6.needsUpdate&&(b6.program&&an(b6),bh.initMaterial(b6,b8,b7,b5),b6.needsUpdate=!1);b6.morphTargets&&!b5.__webglMorphTargetInfluences&&(b5.__webglMorphTargetInfluences=new Float32Array(bh.maxMorphTargets));var b4=!1,b3=b6.program,b2=b3.uniforms,b1=b6.uniforms;b3!==al&&(aD.useProgram(b3),al=b3,b4=!0);b6.id!==aj&&(aj=b6.id,b4=!0);if(b4||b9!==bv){aD.uniformMatrix4fv(b2.projectionMatrix,!1,b9.projectionMatrix.elements),b9!==bv&&(bv=b9)}if(b6.skinning){if(bo&&b5.useVertexTexture){if(null!==b2.boneTexture){var b0=ba();aD.uniform1i(b2.boneTexture,b0);bh.setTexture(b5.boneTexture,b0)}}else{null!==b2.boneGlobalMatrices&&aD.uniformMatrix4fv(b2.boneGlobalMatrices,!1,b5.boneMatrices)}}if(b4){b7&&b6.fog&&(b1.fogColor.value=b7.color,b7 instanceof THREE.Fog?(b1.fogNear.value=b7.near,b1.fogFar.value=b7.far):b7 instanceof THREE.FogExp2&&(b1.fogDensity.value=b7.density));if(b6 instanceof THREE.MeshPhongMaterial||b6 instanceof THREE.MeshLambertMaterial||b6.lights){if(bt){for(var bX,bZ=b0=0,bY=0,bW,bV,bU,bT=bg,bS=bT.directional.colors,bR=bT.directional.positions,bQ=bT.point.colors,bP=bT.point.positions,bM=bT.point.distances,bL=bT.spot.colors,bJ=bT.spot.positions,bI=bT.spot.distances,bK=bT.spot.directions,bH=bT.spot.anglesCos,bF=bT.spot.exponents,bG=bT.hemi.skyColors,A=bT.hemi.groundColors,bb=bT.hemi.positions,Z=0,k=0,D=0,bN=0,bO=0,I=0,F=0,N=0,ca=bX=0,b7=bU=ca=0,b4=b8.length;b7<b4;b7++){bX=b8[b7],bX.onlyShadow||(bW=bX.color,bV=bX.intensity,bU=bX.distance,bX instanceof THREE.AmbientLight?bX.visible&&(bh.gammaInput?(b0+=bW.r*bW.r,bZ+=bW.g*bW.g,bY+=bW.b*bW.b):(b0+=bW.r,bZ+=bW.g,bY+=bW.b)):bX instanceof THREE.DirectionalLight?(bO+=1,bX.visible&&(a9.getPositionFromMatrix(bX.matrixWorld),bD.getPositionFromMatrix(bX.target.matrixWorld),a9.sub(bD),a9.normalize(),0===a9.x&&0===a9.y&&0===a9.z||(bX=3*Z,bR[bX]=a9.x,bR[bX+1]=a9.y,bR[bX+2]=a9.z,bh.gammaInput?be(bS,bX,bW,bV*bV):bk(bS,bX,bW,bV),Z+=1))):bX instanceof THREE.PointLight?(I+=1,bX.visible&&(ca=3*k,bh.gammaInput?be(bQ,ca,bW,bV*bV):bk(bQ,ca,bW,bV),bD.getPositionFromMatrix(bX.matrixWorld),bP[ca]=bD.x,bP[ca+1]=bD.y,bP[ca+2]=bD.z,bM[k]=bU,k+=1)):bX instanceof THREE.SpotLight?(F+=1,bX.visible&&(ca=3*D,bh.gammaInput?be(bL,ca,bW,bV*bV):bk(bL,ca,bW,bV),bD.getPositionFromMatrix(bX.matrixWorld),bJ[ca]=bD.x,bJ[ca+1]=bD.y,bJ[ca+2]=bD.z,bI[D]=bU,a9.copy(bD),bD.getPositionFromMatrix(bX.target.matrixWorld),a9.sub(bD),a9.normalize(),bK[ca]=a9.x,bK[ca+1]=a9.y,bK[ca+2]=a9.z,bH[D]=Math.cos(bX.angle),bF[D]=bX.exponent,D+=1)):bX instanceof THREE.HemisphereLight&&(N+=1,bX.visible&&(a9.getPositionFromMatrix(bX.matrixWorld),a9.normalize(),0===a9.x&&0===a9.y&&0===a9.z||(bU=3*bN,bb[bU]=a9.x,bb[bU+1]=a9.y,bb[bU+2]=a9.z,bW=bX.color,bX=bX.groundColor,bh.gammaInput?(bV*=bV,be(bG,bU,bW,bV),be(A,bU,bX,bV)):(bk(bG,bU,bW,bV),bk(A,bU,bX,bV)),bN+=1))))}b7=3*Z;for(b4=Math.max(bS.length,3*bO);b7<b4;b7++){bS[b7]=0}b7=3*k;for(b4=Math.max(bQ.length,3*I);b7<b4;b7++){bQ[b7]=0}b7=3*D;for(b4=Math.max(bL.length,3*F);b7<b4;b7++){bL[b7]=0}b7=3*bN;for(b4=Math.max(bG.length,3*N);b7<b4;b7++){bG[b7]=0}b7=3*bN;for(b4=Math.max(A.length,3*N);b7<b4;b7++){A[b7]=0}bT.directional.length=Z;bT.point.length=k;bT.spot.length=D;bT.hemi.length=bN;bT.ambient[0]=b0;bT.ambient[1]=bZ;bT.ambient[2]=bY;bt=!1}b7=bg;b1.ambientLightColor.value=b7.ambient;b1.directionalLightColor.value=b7.directional.colors;b1.directionalLightDirection.value=b7.directional.positions;b1.pointLightColor.value=b7.point.colors;b1.pointLightPosition.value=b7.point.positions;b1.pointLightDistance.value=b7.point.distances;b1.spotLightColor.value=b7.spot.colors;b1.spotLightPosition.value=b7.spot.positions;b1.spotLightDistance.value=b7.spot.distances;b1.spotLightDirection.value=b7.spot.directions;b1.spotLightAngleCos.value=b7.spot.anglesCos;b1.spotLightExponent.value=b7.spot.exponents;b1.hemisphereLightSkyColor.value=b7.hemi.skyColors;b1.hemisphereLightGroundColor.value=b7.hemi.groundColors;b1.hemisphereLightDirection.value=b7.hemi.positions}if(b6 instanceof THREE.MeshBasicMaterial||b6 instanceof THREE.MeshLambertMaterial||b6 instanceof THREE.MeshPhongMaterial){b1.opacity.value=b6.opacity;bh.gammaInput?b1.diffuse.value.copyGammaToLinear(b6.color):b1.diffuse.value=b6.color;b1.map.value=b6.map;b1.lightMap.value=b6.lightMap;b1.specularMap.value=b6.specularMap;b6.bumpMap&&(b1.bumpMap.value=b6.bumpMap,b1.bumpScale.value=b6.bumpScale);b6.normalMap&&(b1.normalMap.value=b6.normalMap,b1.normalScale.value.copy(b6.normalScale));var w;b6.map?w=b6.map:b6.specularMap?w=b6.specularMap:b6.normalMap?w=b6.normalMap:b6.bumpMap&&(w=b6.bumpMap);void 0!==w&&(b7=w.offset,w=w.repeat,b1.offsetRepeat.value.set(b7.x,b7.y,w.x,w.y));b1.envMap.value=b6.envMap;b1.flipEnvMap.value=b6.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;b1.reflectivity.value=b6.reflectivity;b1.refractionRatio.value=b6.refractionRatio;b1.combine.value=b6.combine;b1.useRefract.value=b6.envMap&&b6.envMap.mapping instanceof THREE.CubeRefractionMapping}b6 instanceof THREE.LineBasicMaterial?(b1.diffuse.value=b6.color,b1.opacity.value=b6.opacity):b6 instanceof THREE.LineDashedMaterial?(b1.diffuse.value=b6.color,b1.opacity.value=b6.opacity,b1.dashSize.value=b6.dashSize,b1.totalSize.value=b6.dashSize+b6.gapSize,b1.scale.value=b6.scale):b6 instanceof THREE.ParticleBasicMaterial?(b1.psColor.value=b6.color,b1.opacity.value=b6.opacity,b1.size.value=b6.size,b1.scale.value=aW.height/2,b1.map.value=b6.map):b6 instanceof THREE.MeshPhongMaterial?(b1.shininess.value=b6.shininess,bh.gammaInput?(b1.ambient.value.copyGammaToLinear(b6.ambient),b1.emissive.value.copyGammaToLinear(b6.emissive),b1.specular.value.copyGammaToLinear(b6.specular)):(b1.ambient.value=b6.ambient,b1.emissive.value=b6.emissive,b1.specular.value=b6.specular),b6.wrapAround&&b1.wrapRGB.value.copy(b6.wrapRGB)):b6 instanceof THREE.MeshLambertMaterial?(bh.gammaInput?(b1.ambient.value.copyGammaToLinear(b6.ambient),b1.emissive.value.copyGammaToLinear(b6.emissive)):(b1.ambient.value=b6.ambient,b1.emissive.value=b6.emissive),b6.wrapAround&&b1.wrapRGB.value.copy(b6.wrapRGB)):b6 instanceof THREE.MeshDepthMaterial?(b1.mNear.value=b9.near,b1.mFar.value=b9.far,b1.opacity.value=b6.opacity):b6 instanceof THREE.MeshNormalMaterial&&(b1.opacity.value=b6.opacity);if(b5.receiveShadow&&!b6._shadowPass&&b1.shadowMatrix){b7=w=0;for(b4=b8.length;b7<b4;b7++){if(b0=b8[b7],b0.castShadow&&(b0 instanceof THREE.SpotLight||b0 instanceof THREE.DirectionalLight&&!b0.shadowCascade)){b1.shadowMap.value[w]=b0.shadowMap,b1.shadowMapSize.value[w]=b0.shadowMapSize,b1.shadowMatrix.value[w]=b0.shadowMatrix,b1.shadowDarkness.value[w]=b0.shadowDarkness,b1.shadowBias.value[w]=b0.shadowBias,w++}}}b8=b6.uniformsList;b1=0;for(w=b8.length;b1<w;b1++){if(b4=b3.uniforms[b8[b1][1]]){if(b7=b8[b1][0],bZ=b7.type,b0=b7.value,"i"===bZ){aD.uniform1i(b4,b0)}else{if("f"===bZ){aD.uniform1f(b4,b0)}else{if("v2"===bZ){aD.uniform2f(b4,b0.x,b0.y)}else{if("v3"===bZ){aD.uniform3f(b4,b0.x,b0.y,b0.z)}else{if("v4"===bZ){aD.uniform4f(b4,b0.x,b0.y,b0.z,b0.w)}else{if("c"===bZ){aD.uniform3f(b4,b0.r,b0.g,b0.b)}else{if("iv1"===bZ){aD.uniform1iv(b4,b0)}else{if("iv"===bZ){aD.uniform3iv(b4,b0)}else{if("fv1"===bZ){aD.uniform1fv(b4,b0)}else{if("fv"===bZ){aD.uniform3fv(b4,b0)}else{if("v2v"===bZ){void 0===b7._array&&(b7._array=new Float32Array(2*b0.length));bZ=0;for(bY=b0.length;bZ<bY;bZ++){bT=2*bZ,b7._array[bT]=b0[bZ].x,b7._array[bT+1]=b0[bZ].y}aD.uniform2fv(b4,b7._array)}else{if("v3v"===bZ){void 0===b7._array&&(b7._array=new Float32Array(3*b0.length));bZ=0;for(bY=b0.length;bZ<bY;bZ++){bT=3*bZ,b7._array[bT]=b0[bZ].x,b7._array[bT+1]=b0[bZ].y,b7._array[bT+2]=b0[bZ].z}aD.uniform3fv(b4,b7._array)}else{if("v4v"===bZ){void 0===b7._array&&(b7._array=new Float32Array(4*b0.length));bZ=0;for(bY=b0.length;bZ<bY;bZ++){bT=4*bZ,b7._array[bT]=b0[bZ].x,b7._array[bT+1]=b0[bZ].y,b7._array[bT+2]=b0[bZ].z,b7._array[bT+3]=b0[bZ].w}aD.uniform4fv(b4,b7._array)}else{if("m4"===bZ){void 0===b7._array&&(b7._array=new Float32Array(16)),b0.flattenToArray(b7._array),aD.uniformMatrix4fv(b4,!1,b7._array)}else{if("m4v"===bZ){void 0===b7._array&&(b7._array=new Float32Array(16*b0.length));bZ=0;for(bY=b0.length;bZ<bY;bZ++){b0[bZ].flattenToArrayOffset(b7._array,16*bZ)}aD.uniformMatrix4fv(b4,!1,b7._array)}else{if("t"===bZ){if(bT=b0,b0=ba(),aD.uniform1i(b4,b0),bT){if(bT.image instanceof Array&&6===bT.image.length){if(b7=bT,b4=b0,6===b7.image.length){if(b7.needsUpdate){b7.image.__webglTextureCube||(b7.image.__webglTextureCube=aD.createTexture(),bh.info.memory.textures++);aD.activeTexture(aD.TEXTURE0+b4);aD.bindTexture(aD.TEXTURE_CUBE_MAP,b7.image.__webglTextureCube);aD.pixelStorei(aD.UNPACK_FLIP_Y_WEBGL,b7.flipY);b4=b7 instanceof THREE.CompressedTexture;b0=[];for(bZ=0;6>bZ;bZ++){bh.autoScaleCubemaps&&!b4?(bY=b0,bT=bZ,bS=b7.image[bZ],bQ=bl,bS.width<=bQ&&bS.height<=bQ||(bP=Math.max(bS.width,bS.height),bR=Math.floor(bS.width*bQ/bP),bQ=Math.floor(bS.height*bQ/bP),bP=document.createElement("canvas"),bP.width=bR,bP.height=bQ,bP.getContext("2d").drawImage(bS,0,0,bS.width,bS.height,0,0,bR,bQ),bS=bP),bY[bT]=bS):b0[bZ]=b7.image[bZ]}bZ=b0[0];bY=0===(bZ.width&bZ.width-1)&&0===(bZ.height&bZ.height-1);bT=at(b7.format);bS=at(b7.type);a3(aD.TEXTURE_CUBE_MAP,b7,bY);for(bZ=0;6>bZ;bZ++){if(b4){bQ=b0[bZ].mipmaps;bP=0;for(bM=bQ.length;bP<bM;bP++){bR=bQ[bP],aD.compressedTexImage2D(aD.TEXTURE_CUBE_MAP_POSITIVE_X+bZ,bP,bT,bR.width,bR.height,0,bR.data)}}else{aD.texImage2D(aD.TEXTURE_CUBE_MAP_POSITIVE_X+bZ,0,bT,bT,bS,b0[bZ])}}b7.generateMipmaps&&bY&&aD.generateMipmap(aD.TEXTURE_CUBE_MAP);b7.needsUpdate=!1;if(b7.onUpdate){b7.onUpdate()}}else{aD.activeTexture(aD.TEXTURE0+b4),aD.bindTexture(aD.TEXTURE_CUBE_MAP,b7.image.__webglTextureCube)}}}else{bT instanceof THREE.WebGLRenderTargetCube?(b7=bT,aD.activeTexture(aD.TEXTURE0+b0),aD.bindTexture(aD.TEXTURE_CUBE_MAP,b7.__webglTexture)):bh.setTexture(bT,b0)}}}else{if("tv"===bZ){void 0===b7._array&&(b7._array=[]);bZ=0;for(bY=b7.value.length;bZ<bY;bZ++){b7._array[bZ]=ba()}aD.uniform1iv(b4,b7._array);bZ=0;for(bY=b7.value.length;bZ<bY;bZ++){bT=b7.value[bZ],b0=b7._array[bZ],bT&&bh.setTexture(bT,b0)}}}}}}}}}}}}}}}}}}}}if((b6 instanceof THREE.ShaderMaterial||b6 instanceof THREE.MeshPhongMaterial||b6.envMap)&&null!==b2.cameraPosition){bD.getPositionFromMatrix(b9.matrixWorld),aD.uniform3f(b2.cameraPosition,bD.x,bD.y,bD.z)}(b6 instanceof THREE.MeshPhongMaterial||b6 instanceof THREE.MeshLambertMaterial||b6 instanceof THREE.ShaderMaterial||b6.skinning)&&null!==b2.viewMatrix&&aD.uniformMatrix4fv(b2.viewMatrix,!1,b9.matrixWorldInverse.elements)}aD.uniformMatrix4fv(b2.modelViewMatrix,!1,b5._modelViewMatrix.elements);b2.normalMatrix&&aD.uniformMatrix3fv(b2.normalMatrix,!1,b5._normalMatrix.elements);null!==b2.modelMatrix&&aD.uniformMatrix4fv(b2.modelMatrix,!1,b5.matrixWorld.elements);return b3}function ba(){var b=by;b>=aE&&console.warn("WebGLRenderer: trying to use "+b+" texture units while this GPU supports only "+aE);by+=1;return b}function be(f,e,h,g){f[e]=h.r*h.r*g;f[e+1]=h.g*h.g*g;f[e+2]=h.b*h.b*g}function bk(f,e,h,g){f[e]=h.r*g;f[e+1]=h.g*g;f[e+2]=h.b*g}function bj(b){b!==U&&(aD.lineWidth(b),U=b)}function a5(e,d,f){aH!==e&&(e?aD.enable(aD.POLYGON_OFFSET_FILL):aD.disable(aD.POLYGON_OFFSET_FILL),aH=e);if(e&&(a8!==d||bE!==f)){aD.polygonOffset(d,f),a8=d,bE=f}}function bi(e){for(var e=e.split("\n"),d=0,f=e.length;d<f;d++){e[d]=d+1+": "+e[d]}return e.join("\n")}function a7(e,d){var f;"fragment"===e?f=aD.createShader(aD.FRAGMENT_SHADER):"vertex"===e&&(f=aD.createShader(aD.VERTEX_SHADER));aD.shaderSource(f,d);aD.compileShader(f);return !aD.getShaderParameter(f,aD.COMPILE_STATUS)?(console.error(aD.getShaderInfoLog(f)),console.error(bi(d)),null):f}function a3(e,d,f){f?(aD.texParameteri(e,aD.TEXTURE_WRAP_S,at(d.wrapS)),aD.texParameteri(e,aD.TEXTURE_WRAP_T,at(d.wrapT)),aD.texParameteri(e,aD.TEXTURE_MAG_FILTER,at(d.magFilter)),aD.texParameteri(e,aD.TEXTURE_MIN_FILTER,at(d.minFilter))):(aD.texParameteri(e,aD.TEXTURE_WRAP_S,aD.CLAMP_TO_EDGE),aD.texParameteri(e,aD.TEXTURE_WRAP_T,aD.CLAMP_TO_EDGE),aD.texParameteri(e,aD.TEXTURE_MAG_FILTER,a4(d.magFilter)),aD.texParameteri(e,aD.TEXTURE_MIN_FILTER,a4(d.minFilter)));if(bw&&d.type!==THREE.FloatType&&(1<d.anisotropy||d.__oldAnisotropy)){aD.texParameterf(e,bw.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(d.anisotropy,ag)),d.__oldAnisotropy=d.anisotropy}}function aq(d,c){aD.bindRenderbuffer(aD.RENDERBUFFER,d);c.depthBuffer&&!c.stencilBuffer?(aD.renderbufferStorage(aD.RENDERBUFFER,aD.DEPTH_COMPONENT16,c.width,c.height),aD.framebufferRenderbuffer(aD.FRAMEBUFFER,aD.DEPTH_ATTACHMENT,aD.RENDERBUFFER,d)):c.depthBuffer&&c.stencilBuffer?(aD.renderbufferStorage(aD.RENDERBUFFER,aD.DEPTH_STENCIL,c.width,c.height),aD.framebufferRenderbuffer(aD.FRAMEBUFFER,aD.DEPTH_STENCIL_ATTACHMENT,aD.RENDERBUFFER,d)):aD.renderbufferStorage(aD.RENDERBUFFER,aD.RGBA4,c.width,c.height)}function a4(b){return b===THREE.NearestFilter||b===THREE.NearestMipMapNearestFilter||b===THREE.NearestMipMapLinearFilter?aD.NEAREST:aD.LINEAR}function at(b){if(b===THREE.RepeatWrapping){return aD.REPEAT}if(b===THREE.ClampToEdgeWrapping){return aD.CLAMP_TO_EDGE}if(b===THREE.MirroredRepeatWrapping){return aD.MIRRORED_REPEAT}if(b===THREE.NearestFilter){return aD.NEAREST}if(b===THREE.NearestMipMapNearestFilter){return aD.NEAREST_MIPMAP_NEAREST}if(b===THREE.NearestMipMapLinearFilter){return aD.NEAREST_MIPMAP_LINEAR}if(b===THREE.LinearFilter){return aD.LINEAR}if(b===THREE.LinearMipMapNearestFilter){return aD.LINEAR_MIPMAP_NEAREST}if(b===THREE.LinearMipMapLinearFilter){return aD.LINEAR_MIPMAP_LINEAR}if(b===THREE.UnsignedByteType){return aD.UNSIGNED_BYTE}if(b===THREE.UnsignedShort4444Type){return aD.UNSIGNED_SHORT_4_4_4_4}if(b===THREE.UnsignedShort5551Type){return aD.UNSIGNED_SHORT_5_5_5_1}if(b===THREE.UnsignedShort565Type){return aD.UNSIGNED_SHORT_5_6_5}if(b===THREE.ByteType){return aD.BYTE}if(b===THREE.ShortType){return aD.SHORT}if(b===THREE.UnsignedShortType){return aD.UNSIGNED_SHORT}if(b===THREE.IntType){return aD.INT}if(b===THREE.UnsignedIntType){return aD.UNSIGNED_INT}if(b===THREE.FloatType){return aD.FLOAT}if(b===THREE.AlphaFormat){return aD.ALPHA}if(b===THREE.RGBFormat){return aD.RGB}if(b===THREE.RGBAFormat){return aD.RGBA}if(b===THREE.LuminanceFormat){return aD.LUMINANCE}if(b===THREE.LuminanceAlphaFormat){return aD.LUMINANCE_ALPHA}if(b===THREE.AddEquation){return aD.FUNC_ADD}if(b===THREE.SubtractEquation){return aD.FUNC_SUBTRACT}if(b===THREE.ReverseSubtractEquation){return aD.FUNC_REVERSE_SUBTRACT}if(b===THREE.ZeroFactor){return aD.ZERO}if(b===THREE.OneFactor){return aD.ONE}if(b===THREE.SrcColorFactor){return aD.SRC_COLOR}if(b===THREE.OneMinusSrcColorFactor){return aD.ONE_MINUS_SRC_COLOR}if(b===THREE.SrcAlphaFactor){return aD.SRC_ALPHA}if(b===THREE.OneMinusSrcAlphaFactor){return aD.ONE_MINUS_SRC_ALPHA}if(b===THREE.DstAlphaFactor){return aD.DST_ALPHA}if(b===THREE.OneMinusDstAlphaFactor){return aD.ONE_MINUS_DST_ALPHA}if(b===THREE.DstColorFactor){return aD.DST_COLOR}if(b===THREE.OneMinusDstColorFactor){return aD.ONE_MINUS_DST_COLOR}if(b===THREE.SrcAlphaSaturateFactor){return aD.SRC_ALPHA_SATURATE}if(void 0!==bf){if(b===THREE.RGB_S3TC_DXT1_Format){return bf.COMPRESSED_RGB_S3TC_DXT1_EXT}if(b===THREE.RGBA_S3TC_DXT1_Format){return bf.COMPRESSED_RGBA_S3TC_DXT1_EXT}if(b===THREE.RGBA_S3TC_DXT3_Format){return bf.COMPRESSED_RGBA_S3TC_DXT3_EXT}if(b===THREE.RGBA_S3TC_DXT5_Format){return bf.COMPRESSED_RGBA_S3TC_DXT5_EXT}}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);var aS=aS||{},aW=void 0!==aS.canvas?aS.canvas:document.createElement("canvas"),a6=void 0!==aS.precision?aS.precision:"highp",aO=void 0!==aS.alpha?aS.alpha:!0,aV=void 0!==aS.premultipliedAlpha?aS.premultipliedAlpha:!0,aX=void 0!==aS.antialias?aS.antialias:!1,a2=void 0!==aS.stencil?aS.stencil:!0,ab=void 0!==aS.preserveDrawingBuffer?aS.preserveDrawingBuffer:!1,W=new THREE.Color(0),ad=0;void 0!==aS.clearColor&&(console.warn("DEPRECATED: clearColor in WebGLRenderer constructor parameters is being removed. Use .setClearColor() instead."),W.setHex(aS.clearColor));void 0!==aS.clearAlpha&&(console.warn("DEPRECATED: clearAlpha in WebGLRenderer constructor parameters is being removed. Use .setClearColor() instead."),ad=aS.clearAlpha);this.domElement=aW;this.context=null;this.devicePixelRatio=void 0!==aS.devicePixelRatio?aS.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1;this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapAutoUpdate=!0;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var bh=this,aZ=[],R=0,al=null,bm=null,aj=-1,aT=null,bv=null,bs=0,by=0,ah=-1,a0=-1,bn=-1,bC=-1,aY=-1,br=-1,x=-1,a1=-1,aH=null,a8=null,bE=null,U=null,aU=0,ae=0,ap=0,Q=0,af=0,aN=0,bx={},E=new THREE.Frustum,o=new THREE.Matrix4,bA=new THREE.Matrix4,bD=new THREE.Vector3,a9=new THREE.Vector3,bt=!0,bg={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},aD,ac,P,bw,bf;try{if(!(aD=aW.getContext("experimental-webgl",{alpha:aO,premultipliedAlpha:aV,antialias:aX,stencil:a2,preserveDrawingBuffer:ab}))){throw"Error creating WebGL context."}}catch(ao){console.error(ao)}ac=aD.getExtension("OES_texture_float");P=aD.getExtension("OES_standard_derivatives");bw=aD.getExtension("EXT_texture_filter_anisotropic")||aD.getExtension("MOZ_EXT_texture_filter_anisotropic")||aD.getExtension("WEBKIT_EXT_texture_filter_anisotropic");bf=aD.getExtension("WEBGL_compressed_texture_s3tc")||aD.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||aD.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");ac||console.log("THREE.WebGLRenderer: Float textures not supported.");P||console.log("THREE.WebGLRenderer: Standard derivatives not supported.");bw||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");bf||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");void 0===aD.getShaderPrecisionFormat&&(aD.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});aD.clearColor(0,0,0,1);aD.clearDepth(1);aD.clearStencil(0);aD.enable(aD.DEPTH_TEST);aD.depthFunc(aD.LEQUAL);aD.frontFace(aD.CCW);aD.cullFace(aD.BACK);aD.enable(aD.CULL_FACE);aD.enable(aD.BLEND);aD.blendEquation(aD.FUNC_ADD);aD.blendFunc(aD.SRC_ALPHA,aD.ONE_MINUS_SRC_ALPHA);aD.clearColor(W.r,W.g,W.b,ad);this.context=aD;var aE=aD.getParameter(aD.MAX_TEXTURE_IMAGE_UNITS),bu=aD.getParameter(aD.MAX_VERTEX_TEXTURE_IMAGE_UNITS);aD.getParameter(aD.MAX_TEXTURE_SIZE);var bl=aD.getParameter(aD.MAX_CUBE_MAP_TEXTURE_SIZE),ag=bw?aD.getParameter(bw.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,bB=0<bu,bo=bB&&ac;bf&&aD.getParameter(aD.COMPRESSED_TEXTURE_FORMATS);var ak=aD.getShaderPrecisionFormat(aD.VERTEX_SHADER,aD.HIGH_FLOAT),am=aD.getShaderPrecisionFormat(aD.VERTEX_SHADER,aD.MEDIUM_FLOAT);aD.getShaderPrecisionFormat(aD.VERTEX_SHADER,aD.LOW_FLOAT);var u=aD.getShaderPrecisionFormat(aD.FRAGMENT_SHADER,aD.HIGH_FLOAT),X=aD.getShaderPrecisionFormat(aD.FRAGMENT_SHADER,aD.MEDIUM_FLOAT);aD.getShaderPrecisionFormat(aD.FRAGMENT_SHADER,aD.LOW_FLOAT);aD.getShaderPrecisionFormat(aD.VERTEX_SHADER,aD.HIGH_INT);aD.getShaderPrecisionFormat(aD.VERTEX_SHADER,aD.MEDIUM_INT);aD.getShaderPrecisionFormat(aD.VERTEX_SHADER,aD.LOW_INT);aD.getShaderPrecisionFormat(aD.FRAGMENT_SHADER,aD.HIGH_INT);aD.getShaderPrecisionFormat(aD.FRAGMENT_SHADER,aD.MEDIUM_INT);aD.getShaderPrecisionFormat(aD.FRAGMENT_SHADER,aD.LOW_INT);var bq=0<ak.precision&&0<u.precision,ai=0<am.precision&&0<X.precision;"highp"===a6&&!bq&&(ai?(a6="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(a6="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp")));"mediump"===a6&&!ai&&(a6="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp"));this.getContext=function(){return aD};this.supportsVertexTextures=function(){return bB};this.supportsFloatTextures=function(){return ac};this.supportsStandardDerivatives=function(){return P};this.supportsCompressedTextureS3TC=function(){return bf};this.getMaxAnisotropy=function(){return ag};this.getPrecision=function(){return a6};this.setSize=function(e,d,f){aW.width=e*this.devicePixelRatio;aW.height=d*this.devicePixelRatio;1!==this.devicePixelRatio&&!1!==f&&(aW.style.width=e+"px",aW.style.height=d+"px");this.setViewport(0,0,aW.width,aW.height)};this.setViewport=function(f,e,h,g){aU=void 0!==f?f:0;ae=void 0!==e?e:0;ap=void 0!==h?h:aW.width;Q=void 0!==g?g:aW.height;aD.viewport(aU,ae,ap,Q)};this.setScissor=function(f,e,h,g){aD.scissor(f,e,h,g)};this.enableScissorTest=function(b){b?aD.enable(aD.SCISSOR_TEST):aD.disable(aD.SCISSOR_TEST)};this.setClearColor=function(d,c){W.set(d);ad=void 0!==c?c:1;aD.clearColor(W.r,W.g,W.b,ad)};this.setClearColorHex=function(d,c){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(d,c)};this.getClearColor=function(){return W};this.getClearAlpha=function(){return ad};this.clear=function(f,e,h){var g=0;if(void 0===f||f){g|=aD.COLOR_BUFFER_BIT}if(void 0===e||e){g|=aD.DEPTH_BUFFER_BIT}if(void 0===h||h){g|=aD.STENCIL_BUFFER_BIT}aD.clear(g)};this.clearTarget=function(f,e,h,g){this.setRenderTarget(f);this.clear(e,h,g)};this.addPostPlugin=function(b){b.init(this);this.renderPluginsPost.push(b)};this.addPrePlugin=function(b){b.init(this);this.renderPluginsPre.push(b)};this.updateShadowMap=function(d,c){al=null;aj=aT=a1=x=bn=-1;bt=!0;a0=ah=-1;this.shadowMapPlugin.update(d,c)};var S=function(b){b=b.target;b.removeEventListener("dispose",S);b.__webglInit=void 0;void 0!==b.__webglVertexBuffer&&aD.deleteBuffer(b.__webglVertexBuffer);void 0!==b.__webglNormalBuffer&&aD.deleteBuffer(b.__webglNormalBuffer);void 0!==b.__webglTangentBuffer&&aD.deleteBuffer(b.__webglTangentBuffer);void 0!==b.__webglColorBuffer&&aD.deleteBuffer(b.__webglColorBuffer);void 0!==b.__webglUVBuffer&&aD.deleteBuffer(b.__webglUVBuffer);void 0!==b.__webglUV2Buffer&&aD.deleteBuffer(b.__webglUV2Buffer);void 0!==b.__webglSkinIndicesBuffer&&aD.deleteBuffer(b.__webglSkinIndicesBuffer);void 0!==b.__webglSkinWeightsBuffer&&aD.deleteBuffer(b.__webglSkinWeightsBuffer);void 0!==b.__webglFaceBuffer&&aD.deleteBuffer(b.__webglFaceBuffer);void 0!==b.__webglLineBuffer&&aD.deleteBuffer(b.__webglLineBuffer);void 0!==b.__webglLineDistanceBuffer&&aD.deleteBuffer(b.__webglLineDistanceBuffer);if(void 0!==b.geometryGroups){for(var j in b.geometryGroups){var i=b.geometryGroups[j];if(void 0!==i.numMorphTargets){for(var h=0,g=i.numMorphTargets;h<g;h++){aD.deleteBuffer(i.__webglMorphTargetsBuffers[h])}}if(void 0!==i.numMorphNormals){h=0;for(g=i.numMorphNormals;h<g;h++){aD.deleteBuffer(i.__webglMorphNormalsBuffers[h])}}aQ(i)}}aQ(b);bh.info.memory.geometries--},bz=function(b){b=b.target;b.removeEventListener("dispose",bz);b.image&&b.image.__webglTextureCube?aD.deleteTexture(b.image.__webglTextureCube):b.__webglInit&&(b.__webglInit=!1,aD.deleteTexture(b.__webglTexture));bh.info.memory.textures--},bp=function(d){d=d.target;d.removeEventListener("dispose",bp);if(d&&d.__webglTexture){if(aD.deleteTexture(d.__webglTexture),d instanceof THREE.WebGLRenderTargetCube){for(var c=0;6>c;c++){aD.deleteFramebuffer(d.__webglFramebuffer[c]),aD.deleteRenderbuffer(d.__webglRenderbuffer[c])}}else{aD.deleteFramebuffer(d.__webglFramebuffer),aD.deleteRenderbuffer(d.__webglRenderbuffer)}}bh.info.memory.textures--},aR=function(b){b=b.target;b.removeEventListener("dispose",aR);an(b)},an=function(g){var f=g.program;if(void 0!==f){g.program=void 0;var j,i,h=!1,g=0;for(j=aZ.length;g<j;g++){if(i=aZ[g],i.program===f){i.usedTimes--;0===i.usedTimes&&(h=!0);break}}if(!0===h){h=[];g=0;for(j=aZ.length;g<j;g++){i=aZ[g],i.program!==f&&h.push(i)}aZ=h;aD.deleteProgram(f);bh.info.memory.programs--}}};this.renderBufferImmediate=function(H,G,F){H.hasPositions&&!H.__webglVertexBuffer&&(H.__webglVertexBuffer=aD.createBuffer());H.hasNormals&&!H.__webglNormalBuffer&&(H.__webglNormalBuffer=aD.createBuffer());H.hasUvs&&!H.__webglUvBuffer&&(H.__webglUvBuffer=aD.createBuffer());H.hasColors&&!H.__webglColorBuffer&&(H.__webglColorBuffer=aD.createBuffer());H.hasPositions&&(aD.bindBuffer(aD.ARRAY_BUFFER,H.__webglVertexBuffer),aD.bufferData(aD.ARRAY_BUFFER,H.positionArray,aD.DYNAMIC_DRAW),aD.enableVertexAttribArray(G.attributes.position),aD.vertexAttribPointer(G.attributes.position,3,aD.FLOAT,!1,0,0));if(H.hasNormals){aD.bindBuffer(aD.ARRAY_BUFFER,H.__webglNormalBuffer);if(F.shading===THREE.FlatShading){var D,C,B,z,A,y,w,v,s,t,r,k=3*H.count;for(r=0;r<k;r+=9){t=H.normalArray,D=t[r],C=t[r+1],B=t[r+2],z=t[r+3],y=t[r+4],v=t[r+5],A=t[r+6],w=t[r+7],s=t[r+8],D=(D+z+A)/3,C=(C+y+w)/3,B=(B+v+s)/3,t[r]=D,t[r+1]=C,t[r+2]=B,t[r+3]=D,t[r+4]=C,t[r+5]=B,t[r+6]=D,t[r+7]=C,t[r+8]=B}}aD.bufferData(aD.ARRAY_BUFFER,H.normalArray,aD.DYNAMIC_DRAW);aD.enableVertexAttribArray(G.attributes.normal);aD.vertexAttribPointer(G.attributes.normal,3,aD.FLOAT,!1,0,0)}H.hasUvs&&F.map&&(aD.bindBuffer(aD.ARRAY_BUFFER,H.__webglUvBuffer),aD.bufferData(aD.ARRAY_BUFFER,H.uvArray,aD.DYNAMIC_DRAW),aD.enableVertexAttribArray(G.attributes.uv),aD.vertexAttribPointer(G.attributes.uv,2,aD.FLOAT,!1,0,0));H.hasColors&&F.vertexColors!==THREE.NoColors&&(aD.bindBuffer(aD.ARRAY_BUFFER,H.__webglColorBuffer),aD.bufferData(aD.ARRAY_BUFFER,H.colorArray,aD.DYNAMIC_DRAW),aD.enableVertexAttribArray(G.attributes.color),aD.vertexAttribPointer(G.attributes.color,3,aD.FLOAT,!1,0,0));aD.drawArrays(aD.TRIANGLES,0,H.count);H.count=0};this.renderBufferDirect=function(A,z,y,w,v,t){if(!1!==w.visible){var s,r,q;s=bc(A,z,y,w,t);A=s.attributes;z=v.attributes;y=!1;s=16777215*v.id+2*s.id+(w.wireframe?1:0);s!==aT&&(aT=s,y=!0);y&&aG();if(t instanceof THREE.Mesh){if(w=z.index){v=v.offsets;1<v.length&&(y=!0);for(var i=0,k=v.length;i<k;i++){var g=v[i].index;if(y){for(r in z){"index"!==r&&(s=A[r],t=z[r],q=t.itemSize,0<=s&&(aD.bindBuffer(aD.ARRAY_BUFFER,t.buffer),aJ(s),aD.vertexAttribPointer(s,q,aD.FLOAT,!1,0,4*g*q)))}aD.bindBuffer(aD.ELEMENT_ARRAY_BUFFER,w.buffer)}aD.drawElements(aD.TRIANGLES,v[i].count,aD.UNSIGNED_SHORT,2*v[i].start);bh.info.render.calls++;bh.info.render.vertices+=v[i].count;bh.info.render.faces+=v[i].count/3}}else{if(y){for(r in z){"index"!==r&&(s=A[r],t=z[r],q=t.itemSize,0<=s&&(aD.bindBuffer(aD.ARRAY_BUFFER,t.buffer),aJ(s),aD.vertexAttribPointer(s,q,aD.FLOAT,!1,0,0)))}}r=v.attributes.position;aD.drawArrays(aD.TRIANGLES,0,r.numItems/3);bh.info.render.calls++;bh.info.render.vertices+=r.numItems/3;bh.info.render.faces+=r.numItems/3/3}}else{if(t instanceof THREE.ParticleSystem){if(y){for(r in z){s=A[r],t=z[r],q=t.itemSize,0<=s&&(aD.bindBuffer(aD.ARRAY_BUFFER,t.buffer),aJ(s),aD.vertexAttribPointer(s,q,aD.FLOAT,!1,0,0))}r=z.position;aD.drawArrays(aD.POINTS,0,r.numItems/3);bh.info.render.calls++;bh.info.render.points+=r.numItems/3}}else{if(t instanceof THREE.Line&&y){for(r in z){s=A[r],t=z[r],q=t.itemSize,0<=s&&(aD.bindBuffer(aD.ARRAY_BUFFER,t.buffer),aJ(s),aD.vertexAttribPointer(s,q,aD.FLOAT,!1,0,0))}bj(w.linewidth);r=z.position;aD.drawArrays(aD.LINE_STRIP,0,r.numItems/3);bh.info.render.calls++;bh.info.render.points+=r.numItems}}}}};this.renderBuffer=function(y,w,v,t,s,r){if(!1!==t.visible){var q,l,v=bc(y,w,v,t,r),y=v.attributes,w=!1,v=16777215*s.id+2*v.id+(t.wireframe?1:0);v!==aT&&(aT=v,w=!0);w&&aG();if(!t.morphTargets&&0<=y.position){w&&(aD.bindBuffer(aD.ARRAY_BUFFER,s.__webglVertexBuffer),aJ(y.position),aD.vertexAttribPointer(y.position,3,aD.FLOAT,!1,0,0))}else{if(r.morphTargetBase){v=t.program.attributes;-1!==r.morphTargetBase&&0<=v.position?(aD.bindBuffer(aD.ARRAY_BUFFER,s.__webglMorphTargetsBuffers[r.morphTargetBase]),aJ(v.position),aD.vertexAttribPointer(v.position,3,aD.FLOAT,!1,0,0)):0<=v.position&&(aD.bindBuffer(aD.ARRAY_BUFFER,s.__webglVertexBuffer),aJ(v.position),aD.vertexAttribPointer(v.position,3,aD.FLOAT,!1,0,0));if(r.morphTargetForcedOrder.length){var i=0;l=r.morphTargetForcedOrder;for(q=r.morphTargetInfluences;i<t.numSupportedMorphTargets&&i<l.length;){0<=v["morphTarget"+i]&&(aD.bindBuffer(aD.ARRAY_BUFFER,s.__webglMorphTargetsBuffers[l[i]]),aJ(v["morphTarget"+i]),aD.vertexAttribPointer(v["morphTarget"+i],3,aD.FLOAT,!1,0,0)),0<=v["morphNormal"+i]&&t.morphNormals&&(aD.bindBuffer(aD.ARRAY_BUFFER,s.__webglMorphNormalsBuffers[l[i]]),aJ(v["morphNormal"+i]),aD.vertexAttribPointer(v["morphNormal"+i],3,aD.FLOAT,!1,0,0)),r.__webglMorphTargetInfluences[i]=q[l[i]],i++}}else{l=[];q=r.morphTargetInfluences;var k,g=q.length;for(k=0;k<g;k++){i=q[k],0<i&&l.push([i,k])}l.length>t.numSupportedMorphTargets?(l.sort(aC),l.length=t.numSupportedMorphTargets):l.length>t.numSupportedMorphNormals?l.sort(aC):0===l.length&&l.push([0,0]);for(i=0;i<t.numSupportedMorphTargets;){l[i]?(k=l[i][1],0<=v["morphTarget"+i]&&(aD.bindBuffer(aD.ARRAY_BUFFER,s.__webglMorphTargetsBuffers[k]),aJ(v["morphTarget"+i]),aD.vertexAttribPointer(v["morphTarget"+i],3,aD.FLOAT,!1,0,0)),0<=v["morphNormal"+i]&&t.morphNormals&&(aD.bindBuffer(aD.ARRAY_BUFFER,s.__webglMorphNormalsBuffers[k]),aJ(v["morphNormal"+i]),aD.vertexAttribPointer(v["morphNormal"+i],3,aD.FLOAT,!1,0,0)),r.__webglMorphTargetInfluences[i]=q[k]):r.__webglMorphTargetInfluences[i]=0,i++}}null!==t.program.uniforms.morphTargetInfluences&&aD.uniform1fv(t.program.uniforms.morphTargetInfluences,r.__webglMorphTargetInfluences)}}if(w){if(s.__webglCustomAttributesList){q=0;for(l=s.__webglCustomAttributesList.length;q<l;q++){v=s.__webglCustomAttributesList[q],0<=y[v.buffer.belongsToAttribute]&&(aD.bindBuffer(aD.ARRAY_BUFFER,v.buffer),aJ(y[v.buffer.belongsToAttribute]),aD.vertexAttribPointer(y[v.buffer.belongsToAttribute],v.size,aD.FLOAT,!1,0,0))}}0<=y.color&&(aD.bindBuffer(aD.ARRAY_BUFFER,s.__webglColorBuffer),aJ(y.color),aD.vertexAttribPointer(y.color,3,aD.FLOAT,!1,0,0));0<=y.normal&&(aD.bindBuffer(aD.ARRAY_BUFFER,s.__webglNormalBuffer),aJ(y.normal),aD.vertexAttribPointer(y.normal,3,aD.FLOAT,!1,0,0));0<=y.tangent&&(aD.bindBuffer(aD.ARRAY_BUFFER,s.__webglTangentBuffer),aJ(y.tangent),aD.vertexAttribPointer(y.tangent,4,aD.FLOAT,!1,0,0));0<=y.uv&&(aD.bindBuffer(aD.ARRAY_BUFFER,s.__webglUVBuffer),aJ(y.uv),aD.vertexAttribPointer(y.uv,2,aD.FLOAT,!1,0,0));0<=y.uv2&&(aD.bindBuffer(aD.ARRAY_BUFFER,s.__webglUV2Buffer),aJ(y.uv2),aD.vertexAttribPointer(y.uv2,2,aD.FLOAT,!1,0,0));t.skinning&&(0<=y.skinIndex&&0<=y.skinWeight)&&(aD.bindBuffer(aD.ARRAY_BUFFER,s.__webglSkinIndicesBuffer),aJ(y.skinIndex),aD.vertexAttribPointer(y.skinIndex,4,aD.FLOAT,!1,0,0),aD.bindBuffer(aD.ARRAY_BUFFER,s.__webglSkinWeightsBuffer),aJ(y.skinWeight),aD.vertexAttribPointer(y.skinWeight,4,aD.FLOAT,!1,0,0));0<=y.lineDistance&&(aD.bindBuffer(aD.ARRAY_BUFFER,s.__webglLineDistanceBuffer),aJ(y.lineDistance),aD.vertexAttribPointer(y.lineDistance,1,aD.FLOAT,!1,0,0))}r instanceof THREE.Mesh?(t.wireframe?(bj(t.wireframeLinewidth),w&&aD.bindBuffer(aD.ELEMENT_ARRAY_BUFFER,s.__webglLineBuffer),aD.drawElements(aD.LINES,s.__webglLineCount,aD.UNSIGNED_SHORT,0)):(w&&aD.bindBuffer(aD.ELEMENT_ARRAY_BUFFER,s.__webglFaceBuffer),aD.drawElements(aD.TRIANGLES,s.__webglFaceCount,aD.UNSIGNED_SHORT,0)),bh.info.render.calls++,bh.info.render.vertices+=s.__webglFaceCount,bh.info.render.faces+=s.__webglFaceCount/3):r instanceof THREE.Line?(r=r.type===THREE.LineStrip?aD.LINE_STRIP:aD.LINES,bj(t.linewidth),aD.drawArrays(r,0,s.__webglLineCount),bh.info.render.calls++):r instanceof THREE.ParticleSystem?(aD.drawArrays(aD.POINTS,0,s.__webglParticleCount),bh.info.render.calls++,bh.info.render.points+=s.__webglParticleCount):r instanceof THREE.Ribbon&&(aD.drawArrays(aD.TRIANGLE_STRIP,0,s.__webglVertexCount),bh.info.render.calls++)}};this.render=function(C,B,A,z){if(!1===B instanceof THREE.Camera){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")}else{var y,w,q,v,n=C.__lights,m=C.fog;aj=-1;bt=!0;!0===C.autoUpdate&&C.updateMatrixWorld();void 0===B.parent&&B.updateMatrixWorld();B.matrixWorldInverse.getInverse(B.matrixWorld);o.multiplyMatrices(B.projectionMatrix,B.matrixWorldInverse);E.setFromMatrix(o);this.autoUpdateObjects&&this.initWebGLObjects(C);aA(this.renderPluginsPre,C,B);bh.info.render.calls=0;bh.info.render.vertices=0;bh.info.render.faces=0;bh.info.render.points=0;this.setRenderTarget(A);(this.autoClear||z)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);v=C.__webglObjects;z=0;for(y=v.length;z<y;z++){if(w=v[z],q=w.object,w.id=z,w.render=!1,q.visible&&(!(q instanceof THREE.Mesh||q instanceof THREE.ParticleSystem)||!q.frustumCulled||E.intersectsObject(q))){var k=q;k._modelViewMatrix.multiplyMatrices(B.matrixWorldInverse,k.matrixWorld);k._normalMatrix.getNormalMatrix(k._modelViewMatrix);var k=w,F=k.buffer,j=void 0,D=j=void 0,D=k.object.material;if(D instanceof THREE.MeshFaceMaterial){j=F.materialIndex,j=D.materials[j],j.transparent?(k.transparent=j,k.opaque=null):(k.opaque=j,k.transparent=null)}else{if(j=D){j.transparent?(k.transparent=j,k.opaque=null):(k.opaque=j,k.transparent=null)}}w.render=!0;!0===this.sortObjects&&(null!==q.renderDepth?w.z=q.renderDepth:(bD.getPositionFromMatrix(q.matrixWorld),bD.applyProjection(o),w.z=bD.z))}}this.sortObjects&&v.sort(aF);v=C.__webglObjectsImmediate;z=0;for(y=v.length;z<y;z++){w=v[z],q=w.object,q.visible&&(q._modelViewMatrix.multiplyMatrices(B.matrixWorldInverse,q.matrixWorld),q._normalMatrix.getNormalMatrix(q._modelViewMatrix),q=w.object.material,q.transparent?(w.transparent=q,w.opaque=null):(w.opaque=q,w.transparent=null))}C.overrideMaterial?(z=C.overrideMaterial,this.setBlending(z.blending,z.blendEquation,z.blendSrc,z.blendDst),this.setDepthTest(z.depthTest),this.setDepthWrite(z.depthWrite),a5(z.polygonOffset,z.polygonOffsetFactor,z.polygonOffsetUnits),aB(C.__webglObjects,!1,"",B,n,m,!0,z),ay(C.__webglObjectsImmediate,"",B,n,m,!1,z)):(z=null,this.setBlending(THREE.NoBlending),aB(C.__webglObjects,!0,"opaque",B,n,m,!1,z),ay(C.__webglObjectsImmediate,"opaque",B,n,m,!1,z),aB(C.__webglObjects,!1,"transparent",B,n,m,!0,z),ay(C.__webglObjectsImmediate,"transparent",B,n,m,!0,z));aA(this.renderPluginsPost,C,B);A&&(A.generateMipmaps&&A.minFilter!==THREE.NearestFilter&&A.minFilter!==THREE.LinearFilter)&&(A instanceof THREE.WebGLRenderTargetCube?(aD.bindTexture(aD.TEXTURE_CUBE_MAP,A.__webglTexture),aD.generateMipmap(aD.TEXTURE_CUBE_MAP),aD.bindTexture(aD.TEXTURE_CUBE_MAP,null)):(aD.bindTexture(aD.TEXTURE_2D,A.__webglTexture),aD.generateMipmap(aD.TEXTURE_2D),aD.bindTexture(aD.TEXTURE_2D,null)));this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(h,g,l,k,j){var i=bc(h,g,l,k,j);aT=-1;bh.setMaterialFaces(k);j.immediateRenderCallback?j.immediateRenderCallback(i,aD,E):j.render(function(b){bh.renderBufferImmediate(b,i,k)})};this.initWebGLObjects=function(dE){dE.__webglObjects||(dE.__webglObjects=[],dE.__webglObjectsImmediate=[],dE.__webglSprites=[],dE.__webglFlares=[]);for(;dE.__objectsAdded.length;){av(dE.__objectsAdded[0],dE),dE.__objectsAdded.splice(0,1)}for(;dE.__objectsRemoved.length;){au(dE.__objectsRemoved[0],dE),dE.__objectsRemoved.splice(0,1)}for(var dD=0,dC=dE.__webglObjects.length;dD<dC;dD++){var dz=dE.__webglObjects[dD].object;void 0===dz.__webglInit&&(void 0!==dz.__webglActive&&au(dz,dE),av(dz,dE));var dx=dz,dv=dx.geometry,dt=void 0,du=void 0,dr=void 0;if(dv instanceof THREE.BufferGeometry){var dq=aD.DYNAMIC_DRAW,dj=!dv.dynamic,dl=dv.attributes,dh=void 0,ei=void 0;for(dh in dl){ei=dl[dh],ei.needsUpdate&&("index"===dh?(aD.bindBuffer(aD.ELEMENT_ARRAY_BUFFER,ei.buffer),aD.bufferData(aD.ELEMENT_ARRAY_BUFFER,ei.array,dq)):(aD.bindBuffer(aD.ARRAY_BUFFER,ei.buffer),aD.bufferData(aD.ARRAY_BUFFER,ei.array,dq)),ei.needsUpdate=!1),dj&&!ei.dynamic&&delete ei.array}}else{if(dx instanceof THREE.Mesh){for(var eh=0,d8=dv.geometryGroupsList.length;eh<d8;eh++){if(dt=dv.geometryGroupsList[eh],dr=aL(dx,dt),dv.buffersNeedUpdate&&aM(dt,dx),du=dr.attributes&&az(dr),dv.verticesNeedUpdate||dv.morphTargetsNeedUpdate||dv.elementsNeedUpdate||dv.uvsNeedUpdate||dv.normalsNeedUpdate||dv.colorsNeedUpdate||dv.tangentsNeedUpdate||du){var ek=dt,d6=dx,ee=aD.DYNAMIC_DRAW,d5=!dv.dynamic,d3=dr;if(ek.__inittedArrays){var d1=aK(d3),dO=d3.vertexColors?d3.vertexColors:!1,d0=aI(d3),dZ=d1===THREE.SmoothShading,ef=void 0,eg=void 0,dY=void 0,dV=void 0,dX=void 0,cV=void 0,dQ=void 0,dL=void 0,di=void 0,cI=void 0,eA=void 0,dT=void 0,dS=void 0,dW=void 0,d9=void 0,dK=void 0,c8=void 0,eM=void 0,eG=void 0,eE=void 0,ci=void 0,eu=void 0,c1=void 0,d=void 0,b2=void 0,bG=void 0,b8=void 0,er=void 0,dJ=void 0,cO=void 0,cg=void 0,bW=void 0,bL=void 0,l=void 0,dg=void 0,ew=void 0,b7=void 0,t=void 0,b5=void 0,bJ=void 0,dA=void 0,d7=void 0,en=void 0,ez=void 0,dU=void 0,bU=void 0,eJ=0,cC=0,c4=0,cR=0,de=0,bQ=0,b0=0,dI=0,ds=0,dM=0,cu=0,dk=0,cG=void 0,c7=ek.__vertexArray,cH=ek.__uvArray,b1=ek.__uv2Array,h=ek.__normalArray,cZ=ek.__tangentArray,cU=ek.__colorArray,cM=ek.__skinIndexArray,cy=ek.__skinWeightArray,eL=ek.__morphTargetsArrays,cE=ek.__morphNormalsArrays,cq=ek.__webglCustomAttributesList,dm=void 0,cK=ek.__faceArray,bK=ek.__lineArray,c0=d6.geometry,eO=c0.elementsNeedUpdate,eD=c0.uvsNeedUpdate,bI=c0.normalsNeedUpdate,f=c0.tangentsNeedUpdate,c3=c0.colorsNeedUpdate,cQ=c0.morphTargetsNeedUpdate,dy=c0.vertices,cA=ek.faces3,co=ek.faces4,bF=c0.faces,dF=c0.faceVertexUvs[0],cX=c0.faceVertexUvs[1],c6=c0.skinIndices,el=c0.skinWeights,ey=c0.morphTargets,eo=c0.morphNormals;if(c0.verticesNeedUpdate){ef=0;for(eg=cA.length;ef<eg;ef++){dV=bF[cA[ef]],dT=dy[dV.a],dS=dy[dV.b],dW=dy[dV.c],c7[cC]=dT.x,c7[cC+1]=dT.y,c7[cC+2]=dT.z,c7[cC+3]=dS.x,c7[cC+4]=dS.y,c7[cC+5]=dS.z,c7[cC+6]=dW.x,c7[cC+7]=dW.y,c7[cC+8]=dW.z,cC+=9}ef=0;for(eg=co.length;ef<eg;ef++){dV=bF[co[ef]],dT=dy[dV.a],dS=dy[dV.b],dW=dy[dV.c],d9=dy[dV.d],c7[cC]=dT.x,c7[cC+1]=dT.y,c7[cC+2]=dT.z,c7[cC+3]=dS.x,c7[cC+4]=dS.y,c7[cC+5]=dS.z,c7[cC+6]=dW.x,c7[cC+7]=dW.y,c7[cC+8]=dW.z,c7[cC+9]=d9.x,c7[cC+10]=d9.y,c7[cC+11]=d9.z,cC+=12}aD.bindBuffer(aD.ARRAY_BUFFER,ek.__webglVertexBuffer);aD.bufferData(aD.ARRAY_BUFFER,c7,ee)}if(cQ){dA=0;for(d7=ey.length;dA<d7;dA++){ef=cu=0;for(eg=cA.length;ef<eg;ef++){dU=cA[ef],dV=bF[dU],dT=ey[dA].vertices[dV.a],dS=ey[dA].vertices[dV.b],dW=ey[dA].vertices[dV.c],en=eL[dA],en[cu]=dT.x,en[cu+1]=dT.y,en[cu+2]=dT.z,en[cu+3]=dS.x,en[cu+4]=dS.y,en[cu+5]=dS.z,en[cu+6]=dW.x,en[cu+7]=dW.y,en[cu+8]=dW.z,d3.morphNormals&&(dZ?(bU=eo[dA].vertexNormals[dU],eE=bU.a,ci=bU.b,eu=bU.c):eu=ci=eE=eo[dA].faceNormals[dU],ez=cE[dA],ez[cu]=eE.x,ez[cu+1]=eE.y,ez[cu+2]=eE.z,ez[cu+3]=ci.x,ez[cu+4]=ci.y,ez[cu+5]=ci.z,ez[cu+6]=eu.x,ez[cu+7]=eu.y,ez[cu+8]=eu.z),cu+=9}ef=0;for(eg=co.length;ef<eg;ef++){dU=co[ef],dV=bF[dU],dT=ey[dA].vertices[dV.a],dS=ey[dA].vertices[dV.b],dW=ey[dA].vertices[dV.c],d9=ey[dA].vertices[dV.d],en=eL[dA],en[cu]=dT.x,en[cu+1]=dT.y,en[cu+2]=dT.z,en[cu+3]=dS.x,en[cu+4]=dS.y,en[cu+5]=dS.z,en[cu+6]=dW.x,en[cu+7]=dW.y,en[cu+8]=dW.z,en[cu+9]=d9.x,en[cu+10]=d9.y,en[cu+11]=d9.z,d3.morphNormals&&(dZ?(bU=eo[dA].vertexNormals[dU],eE=bU.a,ci=bU.b,eu=bU.c,c1=bU.d):c1=eu=ci=eE=eo[dA].faceNormals[dU],ez=cE[dA],ez[cu]=eE.x,ez[cu+1]=eE.y,ez[cu+2]=eE.z,ez[cu+3]=ci.x,ez[cu+4]=ci.y,ez[cu+5]=ci.z,ez[cu+6]=eu.x,ez[cu+7]=eu.y,ez[cu+8]=eu.z,ez[cu+9]=c1.x,ez[cu+10]=c1.y,ez[cu+11]=c1.z),cu+=12}aD.bindBuffer(aD.ARRAY_BUFFER,ek.__webglMorphTargetsBuffers[dA]);aD.bufferData(aD.ARRAY_BUFFER,eL[dA],ee);d3.morphNormals&&(aD.bindBuffer(aD.ARRAY_BUFFER,ek.__webglMorphNormalsBuffers[dA]),aD.bufferData(aD.ARRAY_BUFFER,cE[dA],ee))}}if(el.length){ef=0;for(eg=cA.length;ef<eg;ef++){dV=bF[cA[ef]],er=el[dV.a],dJ=el[dV.b],cO=el[dV.c],cy[dM]=er.x,cy[dM+1]=er.y,cy[dM+2]=er.z,cy[dM+3]=er.w,cy[dM+4]=dJ.x,cy[dM+5]=dJ.y,cy[dM+6]=dJ.z,cy[dM+7]=dJ.w,cy[dM+8]=cO.x,cy[dM+9]=cO.y,cy[dM+10]=cO.z,cy[dM+11]=cO.w,bW=c6[dV.a],bL=c6[dV.b],l=c6[dV.c],cM[dM]=bW.x,cM[dM+1]=bW.y,cM[dM+2]=bW.z,cM[dM+3]=bW.w,cM[dM+4]=bL.x,cM[dM+5]=bL.y,cM[dM+6]=bL.z,cM[dM+7]=bL.w,cM[dM+8]=l.x,cM[dM+9]=l.y,cM[dM+10]=l.z,cM[dM+11]=l.w,dM+=12}ef=0;for(eg=co.length;ef<eg;ef++){dV=bF[co[ef]],er=el[dV.a],dJ=el[dV.b],cO=el[dV.c],cg=el[dV.d],cy[dM]=er.x,cy[dM+1]=er.y,cy[dM+2]=er.z,cy[dM+3]=er.w,cy[dM+4]=dJ.x,cy[dM+5]=dJ.y,cy[dM+6]=dJ.z,cy[dM+7]=dJ.w,cy[dM+8]=cO.x,cy[dM+9]=cO.y,cy[dM+10]=cO.z,cy[dM+11]=cO.w,cy[dM+12]=cg.x,cy[dM+13]=cg.y,cy[dM+14]=cg.z,cy[dM+15]=cg.w,bW=c6[dV.a],bL=c6[dV.b],l=c6[dV.c],dg=c6[dV.d],cM[dM]=bW.x,cM[dM+1]=bW.y,cM[dM+2]=bW.z,cM[dM+3]=bW.w,cM[dM+4]=bL.x,cM[dM+5]=bL.y,cM[dM+6]=bL.z,cM[dM+7]=bL.w,cM[dM+8]=l.x,cM[dM+9]=l.y,cM[dM+10]=l.z,cM[dM+11]=l.w,cM[dM+12]=dg.x,cM[dM+13]=dg.y,cM[dM+14]=dg.z,cM[dM+15]=dg.w,dM+=16}0<dM&&(aD.bindBuffer(aD.ARRAY_BUFFER,ek.__webglSkinIndicesBuffer),aD.bufferData(aD.ARRAY_BUFFER,cM,ee),aD.bindBuffer(aD.ARRAY_BUFFER,ek.__webglSkinWeightsBuffer),aD.bufferData(aD.ARRAY_BUFFER,cy,ee))}if(c3&&dO){ef=0;for(eg=cA.length;ef<eg;ef++){dV=bF[cA[ef]],dQ=dV.vertexColors,dL=dV.color,3===dQ.length&&dO===THREE.VertexColors?(d=dQ[0],b2=dQ[1],bG=dQ[2]):bG=b2=d=dL,cU[ds]=d.r,cU[ds+1]=d.g,cU[ds+2]=d.b,cU[ds+3]=b2.r,cU[ds+4]=b2.g,cU[ds+5]=b2.b,cU[ds+6]=bG.r,cU[ds+7]=bG.g,cU[ds+8]=bG.b,ds+=9}ef=0;for(eg=co.length;ef<eg;ef++){dV=bF[co[ef]],dQ=dV.vertexColors,dL=dV.color,4===dQ.length&&dO===THREE.VertexColors?(d=dQ[0],b2=dQ[1],bG=dQ[2],b8=dQ[3]):b8=bG=b2=d=dL,cU[ds]=d.r,cU[ds+1]=d.g,cU[ds+2]=d.b,cU[ds+3]=b2.r,cU[ds+4]=b2.g,cU[ds+5]=b2.b,cU[ds+6]=bG.r,cU[ds+7]=bG.g,cU[ds+8]=bG.b,cU[ds+9]=b8.r,cU[ds+10]=b8.g,cU[ds+11]=b8.b,ds+=12}0<ds&&(aD.bindBuffer(aD.ARRAY_BUFFER,ek.__webglColorBuffer),aD.bufferData(aD.ARRAY_BUFFER,cU,ee))}if(f&&c0.hasTangents){ef=0;for(eg=cA.length;ef<eg;ef++){dV=bF[cA[ef]],di=dV.vertexTangents,dK=di[0],c8=di[1],eM=di[2],cZ[b0]=dK.x,cZ[b0+1]=dK.y,cZ[b0+2]=dK.z,cZ[b0+3]=dK.w,cZ[b0+4]=c8.x,cZ[b0+5]=c8.y,cZ[b0+6]=c8.z,cZ[b0+7]=c8.w,cZ[b0+8]=eM.x,cZ[b0+9]=eM.y,cZ[b0+10]=eM.z,cZ[b0+11]=eM.w,b0+=12}ef=0;for(eg=co.length;ef<eg;ef++){dV=bF[co[ef]],di=dV.vertexTangents,dK=di[0],c8=di[1],eM=di[2],eG=di[3],cZ[b0]=dK.x,cZ[b0+1]=dK.y,cZ[b0+2]=dK.z,cZ[b0+3]=dK.w,cZ[b0+4]=c8.x,cZ[b0+5]=c8.y,cZ[b0+6]=c8.z,cZ[b0+7]=c8.w,cZ[b0+8]=eM.x,cZ[b0+9]=eM.y,cZ[b0+10]=eM.z,cZ[b0+11]=eM.w,cZ[b0+12]=eG.x,cZ[b0+13]=eG.y,cZ[b0+14]=eG.z,cZ[b0+15]=eG.w,b0+=16}aD.bindBuffer(aD.ARRAY_BUFFER,ek.__webglTangentBuffer);aD.bufferData(aD.ARRAY_BUFFER,cZ,ee)}if(bI&&d1){ef=0;for(eg=cA.length;ef<eg;ef++){if(dV=bF[cA[ef]],dX=dV.vertexNormals,cV=dV.normal,3===dX.length&&dZ){for(ew=0;3>ew;ew++){t=dX[ew],h[bQ]=t.x,h[bQ+1]=t.y,h[bQ+2]=t.z,bQ+=3}}else{for(ew=0;3>ew;ew++){h[bQ]=cV.x,h[bQ+1]=cV.y,h[bQ+2]=cV.z,bQ+=3}}}ef=0;for(eg=co.length;ef<eg;ef++){if(dV=bF[co[ef]],dX=dV.vertexNormals,cV=dV.normal,4===dX.length&&dZ){for(ew=0;4>ew;ew++){t=dX[ew],h[bQ]=t.x,h[bQ+1]=t.y,h[bQ+2]=t.z,bQ+=3}}else{for(ew=0;4>ew;ew++){h[bQ]=cV.x,h[bQ+1]=cV.y,h[bQ+2]=cV.z,bQ+=3}}}aD.bindBuffer(aD.ARRAY_BUFFER,ek.__webglNormalBuffer);aD.bufferData(aD.ARRAY_BUFFER,h,ee)}if(eD&&dF&&d0){ef=0;for(eg=cA.length;ef<eg;ef++){if(dY=cA[ef],cI=dF[dY],void 0!==cI){for(ew=0;3>ew;ew++){b5=cI[ew],cH[c4]=b5.x,cH[c4+1]=b5.y,c4+=2}}}ef=0;for(eg=co.length;ef<eg;ef++){if(dY=co[ef],cI=dF[dY],void 0!==cI){for(ew=0;4>ew;ew++){b5=cI[ew],cH[c4]=b5.x,cH[c4+1]=b5.y,c4+=2}}}0<c4&&(aD.bindBuffer(aD.ARRAY_BUFFER,ek.__webglUVBuffer),aD.bufferData(aD.ARRAY_BUFFER,cH,ee))}if(eD&&cX&&d0){ef=0;for(eg=cA.length;ef<eg;ef++){if(dY=cA[ef],eA=cX[dY],void 0!==eA){for(ew=0;3>ew;ew++){bJ=eA[ew],b1[cR]=bJ.x,b1[cR+1]=bJ.y,cR+=2}}}ef=0;for(eg=co.length;ef<eg;ef++){if(dY=co[ef],eA=cX[dY],void 0!==eA){for(ew=0;4>ew;ew++){bJ=eA[ew],b1[cR]=bJ.x,b1[cR+1]=bJ.y,cR+=2}}}0<cR&&(aD.bindBuffer(aD.ARRAY_BUFFER,ek.__webglUV2Buffer),aD.bufferData(aD.ARRAY_BUFFER,b1,ee))}if(eO){ef=0;for(eg=cA.length;ef<eg;ef++){cK[de]=eJ,cK[de+1]=eJ+1,cK[de+2]=eJ+2,de+=3,bK[dI]=eJ,bK[dI+1]=eJ+1,bK[dI+2]=eJ,bK[dI+3]=eJ+2,bK[dI+4]=eJ+1,bK[dI+5]=eJ+2,dI+=6,eJ+=3}ef=0;for(eg=co.length;ef<eg;ef++){cK[de]=eJ,cK[de+1]=eJ+1,cK[de+2]=eJ+3,cK[de+3]=eJ+1,cK[de+4]=eJ+2,cK[de+5]=eJ+3,de+=6,bK[dI]=eJ,bK[dI+1]=eJ+1,bK[dI+2]=eJ,bK[dI+3]=eJ+3,bK[dI+4]=eJ+1,bK[dI+5]=eJ+2,bK[dI+6]=eJ+2,bK[dI+7]=eJ+3,dI+=8,eJ+=4}aD.bindBuffer(aD.ELEMENT_ARRAY_BUFFER,ek.__webglFaceBuffer);aD.bufferData(aD.ELEMENT_ARRAY_BUFFER,cK,ee);aD.bindBuffer(aD.ELEMENT_ARRAY_BUFFER,ek.__webglLineBuffer);aD.bufferData(aD.ELEMENT_ARRAY_BUFFER,bK,ee)}if(cq){ew=0;for(b7=cq.length;ew<b7;ew++){if(dm=cq[ew],dm.__original.needsUpdate){dk=0;if(1===dm.size){if(void 0===dm.boundTo||"vertices"===dm.boundTo){ef=0;for(eg=cA.length;ef<eg;ef++){dV=bF[cA[ef]],dm.array[dk]=dm.value[dV.a],dm.array[dk+1]=dm.value[dV.b],dm.array[dk+2]=dm.value[dV.c],dk+=3}ef=0;for(eg=co.length;ef<eg;ef++){dV=bF[co[ef]],dm.array[dk]=dm.value[dV.a],dm.array[dk+1]=dm.value[dV.b],dm.array[dk+2]=dm.value[dV.c],dm.array[dk+3]=dm.value[dV.d],dk+=4}}else{if("faces"===dm.boundTo){ef=0;for(eg=cA.length;ef<eg;ef++){cG=dm.value[cA[ef]],dm.array[dk]=cG,dm.array[dk+1]=cG,dm.array[dk+2]=cG,dk+=3}ef=0;for(eg=co.length;ef<eg;ef++){cG=dm.value[co[ef]],dm.array[dk]=cG,dm.array[dk+1]=cG,dm.array[dk+2]=cG,dm.array[dk+3]=cG,dk+=4}}}}else{if(2===dm.size){if(void 0===dm.boundTo||"vertices"===dm.boundTo){ef=0;for(eg=cA.length;ef<eg;ef++){dV=bF[cA[ef]],dT=dm.value[dV.a],dS=dm.value[dV.b],dW=dm.value[dV.c],dm.array[dk]=dT.x,dm.array[dk+1]=dT.y,dm.array[dk+2]=dS.x,dm.array[dk+3]=dS.y,dm.array[dk+4]=dW.x,dm.array[dk+5]=dW.y,dk+=6}ef=0;for(eg=co.length;ef<eg;ef++){dV=bF[co[ef]],dT=dm.value[dV.a],dS=dm.value[dV.b],dW=dm.value[dV.c],d9=dm.value[dV.d],dm.array[dk]=dT.x,dm.array[dk+1]=dT.y,dm.array[dk+2]=dS.x,dm.array[dk+3]=dS.y,dm.array[dk+4]=dW.x,dm.array[dk+5]=dW.y,dm.array[dk+6]=d9.x,dm.array[dk+7]=d9.y,dk+=8}}else{if("faces"===dm.boundTo){ef=0;for(eg=cA.length;ef<eg;ef++){dW=dS=dT=cG=dm.value[cA[ef]],dm.array[dk]=dT.x,dm.array[dk+1]=dT.y,dm.array[dk+2]=dS.x,dm.array[dk+3]=dS.y,dm.array[dk+4]=dW.x,dm.array[dk+5]=dW.y,dk+=6}ef=0;for(eg=co.length;ef<eg;ef++){d9=dW=dS=dT=cG=dm.value[co[ef]],dm.array[dk]=dT.x,dm.array[dk+1]=dT.y,dm.array[dk+2]=dS.x,dm.array[dk+3]=dS.y,dm.array[dk+4]=dW.x,dm.array[dk+5]=dW.y,dm.array[dk+6]=d9.x,dm.array[dk+7]=d9.y,dk+=8}}}}else{if(3===dm.size){var dN;dN="c"===dm.type?["r","g","b"]:["x","y","z"];if(void 0===dm.boundTo||"vertices"===dm.boundTo){ef=0;for(eg=cA.length;ef<eg;ef++){dV=bF[cA[ef]],dT=dm.value[dV.a],dS=dm.value[dV.b],dW=dm.value[dV.c],dm.array[dk]=dT[dN[0]],dm.array[dk+1]=dT[dN[1]],dm.array[dk+2]=dT[dN[2]],dm.array[dk+3]=dS[dN[0]],dm.array[dk+4]=dS[dN[1]],dm.array[dk+5]=dS[dN[2]],dm.array[dk+6]=dW[dN[0]],dm.array[dk+7]=dW[dN[1]],dm.array[dk+8]=dW[dN[2]],dk+=9}ef=0;for(eg=co.length;ef<eg;ef++){dV=bF[co[ef]],dT=dm.value[dV.a],dS=dm.value[dV.b],dW=dm.value[dV.c],d9=dm.value[dV.d],dm.array[dk]=dT[dN[0]],dm.array[dk+1]=dT[dN[1]],dm.array[dk+2]=dT[dN[2]],dm.array[dk+3]=dS[dN[0]],dm.array[dk+4]=dS[dN[1]],dm.array[dk+5]=dS[dN[2]],dm.array[dk+6]=dW[dN[0]],dm.array[dk+7]=dW[dN[1]],dm.array[dk+8]=dW[dN[2]],dm.array[dk+9]=d9[dN[0]],dm.array[dk+10]=d9[dN[1]],dm.array[dk+11]=d9[dN[2]],dk+=12}}else{if("faces"===dm.boundTo){ef=0;for(eg=cA.length;ef<eg;ef++){dW=dS=dT=cG=dm.value[cA[ef]],dm.array[dk]=dT[dN[0]],dm.array[dk+1]=dT[dN[1]],dm.array[dk+2]=dT[dN[2]],dm.array[dk+3]=dS[dN[0]],dm.array[dk+4]=dS[dN[1]],dm.array[dk+5]=dS[dN[2]],dm.array[dk+6]=dW[dN[0]],dm.array[dk+7]=dW[dN[1]],dm.array[dk+8]=dW[dN[2]],dk+=9}ef=0;for(eg=co.length;ef<eg;ef++){d9=dW=dS=dT=cG=dm.value[co[ef]],dm.array[dk]=dT[dN[0]],dm.array[dk+1]=dT[dN[1]],dm.array[dk+2]=dT[dN[2]],dm.array[dk+3]=dS[dN[0]],dm.array[dk+4]=dS[dN[1]],dm.array[dk+5]=dS[dN[2]],dm.array[dk+6]=dW[dN[0]],dm.array[dk+7]=dW[dN[1]],dm.array[dk+8]=dW[dN[2]],dm.array[dk+9]=d9[dN[0]],dm.array[dk+10]=d9[dN[1]],dm.array[dk+11]=d9[dN[2]],dk+=12}}else{if("faceVertices"===dm.boundTo){ef=0;for(eg=cA.length;ef<eg;ef++){cG=dm.value[cA[ef]],dT=cG[0],dS=cG[1],dW=cG[2],dm.array[dk]=dT[dN[0]],dm.array[dk+1]=dT[dN[1]],dm.array[dk+2]=dT[dN[2]],dm.array[dk+3]=dS[dN[0]],dm.array[dk+4]=dS[dN[1]],dm.array[dk+5]=dS[dN[2]],dm.array[dk+6]=dW[dN[0]],dm.array[dk+7]=dW[dN[1]],dm.array[dk+8]=dW[dN[2]],dk+=9}ef=0;for(eg=co.length;ef<eg;ef++){cG=dm.value[co[ef]],dT=cG[0],dS=cG[1],dW=cG[2],d9=cG[3],dm.array[dk]=dT[dN[0]],dm.array[dk+1]=dT[dN[1]],dm.array[dk+2]=dT[dN[2]],dm.array[dk+3]=dS[dN[0]],dm.array[dk+4]=dS[dN[1]],dm.array[dk+5]=dS[dN[2]],dm.array[dk+6]=dW[dN[0]],dm.array[dk+7]=dW[dN[1]],dm.array[dk+8]=dW[dN[2]],dm.array[dk+9]=d9[dN[0]],dm.array[dk+10]=d9[dN[1]],dm.array[dk+11]=d9[dN[2]],dk+=12}}}}}else{if(4===dm.size){if(void 0===dm.boundTo||"vertices"===dm.boundTo){ef=0;for(eg=cA.length;ef<eg;ef++){dV=bF[cA[ef]],dT=dm.value[dV.a],dS=dm.value[dV.b],dW=dm.value[dV.c],dm.array[dk]=dT.x,dm.array[dk+1]=dT.y,dm.array[dk+2]=dT.z,dm.array[dk+3]=dT.w,dm.array[dk+4]=dS.x,dm.array[dk+5]=dS.y,dm.array[dk+6]=dS.z,dm.array[dk+7]=dS.w,dm.array[dk+8]=dW.x,dm.array[dk+9]=dW.y,dm.array[dk+10]=dW.z,dm.array[dk+11]=dW.w,dk+=12}ef=0;for(eg=co.length;ef<eg;ef++){dV=bF[co[ef]],dT=dm.value[dV.a],dS=dm.value[dV.b],dW=dm.value[dV.c],d9=dm.value[dV.d],dm.array[dk]=dT.x,dm.array[dk+1]=dT.y,dm.array[dk+2]=dT.z,dm.array[dk+3]=dT.w,dm.array[dk+4]=dS.x,dm.array[dk+5]=dS.y,dm.array[dk+6]=dS.z,dm.array[dk+7]=dS.w,dm.array[dk+8]=dW.x,dm.array[dk+9]=dW.y,dm.array[dk+10]=dW.z,dm.array[dk+11]=dW.w,dm.array[dk+12]=d9.x,dm.array[dk+13]=d9.y,dm.array[dk+14]=d9.z,dm.array[dk+15]=d9.w,dk+=16}}else{if("faces"===dm.boundTo){ef=0;for(eg=cA.length;ef<eg;ef++){dW=dS=dT=cG=dm.value[cA[ef]],dm.array[dk]=dT.x,dm.array[dk+1]=dT.y,dm.array[dk+2]=dT.z,dm.array[dk+3]=dT.w,dm.array[dk+4]=dS.x,dm.array[dk+5]=dS.y,dm.array[dk+6]=dS.z,dm.array[dk+7]=dS.w,dm.array[dk+8]=dW.x,dm.array[dk+9]=dW.y,dm.array[dk+10]=dW.z,dm.array[dk+11]=dW.w,dk+=12}ef=0;for(eg=co.length;ef<eg;ef++){d9=dW=dS=dT=cG=dm.value[co[ef]],dm.array[dk]=dT.x,dm.array[dk+1]=dT.y,dm.array[dk+2]=dT.z,dm.array[dk+3]=dT.w,dm.array[dk+4]=dS.x,dm.array[dk+5]=dS.y,dm.array[dk+6]=dS.z,dm.array[dk+7]=dS.w,dm.array[dk+8]=dW.x,dm.array[dk+9]=dW.y,dm.array[dk+10]=dW.z,dm.array[dk+11]=dW.w,dm.array[dk+12]=d9.x,dm.array[dk+13]=d9.y,dm.array[dk+14]=d9.z,dm.array[dk+15]=d9.w,dk+=16}}else{if("faceVertices"===dm.boundTo){ef=0;for(eg=cA.length;ef<eg;ef++){cG=dm.value[cA[ef]],dT=cG[0],dS=cG[1],dW=cG[2],dm.array[dk]=dT.x,dm.array[dk+1]=dT.y,dm.array[dk+2]=dT.z,dm.array[dk+3]=dT.w,dm.array[dk+4]=dS.x,dm.array[dk+5]=dS.y,dm.array[dk+6]=dS.z,dm.array[dk+7]=dS.w,dm.array[dk+8]=dW.x,dm.array[dk+9]=dW.y,dm.array[dk+10]=dW.z,dm.array[dk+11]=dW.w,dk+=12}ef=0;for(eg=co.length;ef<eg;ef++){cG=dm.value[co[ef]],dT=cG[0],dS=cG[1],dW=cG[2],d9=cG[3],dm.array[dk]=dT.x,dm.array[dk+1]=dT.y,dm.array[dk+2]=dT.z,dm.array[dk+3]=dT.w,dm.array[dk+4]=dS.x,dm.array[dk+5]=dS.y,dm.array[dk+6]=dS.z,dm.array[dk+7]=dS.w,dm.array[dk+8]=dW.x,dm.array[dk+9]=dW.y,dm.array[dk+10]=dW.z,dm.array[dk+11]=dW.w,dm.array[dk+12]=d9.x,dm.array[dk+13]=d9.y,dm.array[dk+14]=d9.z,dm.array[dk+15]=d9.w,dk+=16}}}}}}}}aD.bindBuffer(aD.ARRAY_BUFFER,dm.buffer);aD.bufferData(aD.ARRAY_BUFFER,dm.array,ee)}}}d5&&(delete ek.__inittedArrays,delete ek.__colorArray,delete ek.__normalArray,delete ek.__tangentArray,delete ek.__uvArray,delete ek.__uv2Array,delete ek.__faceArray,delete ek.__vertexArray,delete ek.__lineArray,delete ek.__skinIndexArray,delete ek.__skinWeightArray)}}}dv.verticesNeedUpdate=!1;dv.morphTargetsNeedUpdate=!1;dv.elementsNeedUpdate=!1;dv.uvsNeedUpdate=!1;dv.normalsNeedUpdate=!1;dv.colorsNeedUpdate=!1;dv.tangentsNeedUpdate=!1;dv.buffersNeedUpdate=!1;dr.attributes&&aw(dr)}else{if(dx instanceof THREE.Ribbon){dr=aL(dx,dv);du=dr.attributes&&az(dr);if(dv.verticesNeedUpdate||dv.colorsNeedUpdate||dv.normalsNeedUpdate||du){var ce=dv,c9=aD.DYNAMIC_DRAW,eq=void 0,dH=void 0,df=void 0,eI=void 0,cr=void 0,et=void 0,k=void 0,eK=void 0,bP=void 0,ct=void 0,cs=void 0,ep=void 0,cN=void 0,v=ce.vertices,eP=ce.colors,eF=ce.normals,b6=v.length,bV=eP.length,cP=eF.length,ev=ce.__vertexArray,cD=ce.__colorArray,cp=ce.__normalArray,cB=ce.colorsNeedUpdate,ej=ce.normalsNeedUpdate,cW=ce.__webglCustomAttributesList;if(ce.verticesNeedUpdate){for(eq=0;eq<b6;eq++){eI=v[eq],cr=3*eq,ev[cr]=eI.x,ev[cr+1]=eI.y,ev[cr+2]=eI.z}aD.bindBuffer(aD.ARRAY_BUFFER,ce.__webglVertexBuffer);aD.bufferData(aD.ARRAY_BUFFER,ev,c9)}if(cB){for(dH=0;dH<bV;dH++){et=eP[dH],cr=3*dH,cD[cr]=et.r,cD[cr+1]=et.g,cD[cr+2]=et.b}aD.bindBuffer(aD.ARRAY_BUFFER,ce.__webglColorBuffer);aD.bufferData(aD.ARRAY_BUFFER,cD,c9)}if(ej){for(df=0;df<cP;df++){k=eF[df],cr=3*df,cp[cr]=k.x,cp[cr+1]=k.y,cp[cr+2]=k.z}aD.bindBuffer(aD.ARRAY_BUFFER,ce.__webglNormalBuffer);aD.bufferData(aD.ARRAY_BUFFER,cp,c9)}if(cW){eK=0;for(bP=cW.length;eK<bP;eK++){if(ep=cW[eK],ep.needsUpdate&&(void 0===ep.boundTo||"vertices"===ep.boundTo)){cr=0;cs=ep.value.length;if(1===ep.size){for(ct=0;ct<cs;ct++){ep.array[ct]=ep.value[ct]}}else{if(2===ep.size){for(ct=0;ct<cs;ct++){cN=ep.value[ct],ep.array[cr]=cN.x,ep.array[cr+1]=cN.y,cr+=2}}else{if(3===ep.size){if("c"===ep.type){for(ct=0;ct<cs;ct++){cN=ep.value[ct],ep.array[cr]=cN.r,ep.array[cr+1]=cN.g,ep.array[cr+2]=cN.b,cr+=3}}else{for(ct=0;ct<cs;ct++){cN=ep.value[ct],ep.array[cr]=cN.x,ep.array[cr+1]=cN.y,ep.array[cr+2]=cN.z,cr+=3}}}else{if(4===ep.size){for(ct=0;ct<cs;ct++){cN=ep.value[ct],ep.array[cr]=cN.x,ep.array[cr+1]=cN.y,ep.array[cr+2]=cN.z,ep.array[cr+3]=cN.w,cr+=4}}}}}aD.bindBuffer(aD.ARRAY_BUFFER,ep.buffer);aD.bufferData(aD.ARRAY_BUFFER,ep.array,c9)}}}}dv.verticesNeedUpdate=!1;dv.colorsNeedUpdate=!1;dv.normalsNeedUpdate=!1;dr.attributes&&aw(dr)}else{if(dx instanceof THREE.Line){dr=aL(dx,dv);du=dr.attributes&&az(dr);if(dv.verticesNeedUpdate||dv.colorsNeedUpdate||dv.lineDistancesNeedUpdate||du){var bY=dv,b9=aD.DYNAMIC_DRAW,cY=void 0,cL=void 0,cx=void 0,bX=void 0,cm=void 0,bM=void 0,bS=bY.vertices,bH=bY.colors,e=bY.lineDistances,ex=bS.length,d2=bH.length,dw=e.length,p=bY.__vertexArray,eN=bY.__colorArray,eH=bY.__lineDistanceArray,c5=bY.colorsNeedUpdate,cS=bY.lineDistancesNeedUpdate,cJ=bY.__webglCustomAttributesList,eC=void 0,es=void 0,ch=void 0,cf=void 0,cz=void 0,dG=void 0;if(bY.verticesNeedUpdate){for(cY=0;cY<ex;cY++){bX=bS[cY],cm=3*cY,p[cm]=bX.x,p[cm+1]=bX.y,p[cm+2]=bX.z}aD.bindBuffer(aD.ARRAY_BUFFER,bY.__webglVertexBuffer);aD.bufferData(aD.ARRAY_BUFFER,p,b9)}if(c5){for(cL=0;cL<d2;cL++){bM=bH[cL],cm=3*cL,eN[cm]=bM.r,eN[cm+1]=bM.g,eN[cm+2]=bM.b}aD.bindBuffer(aD.ARRAY_BUFFER,bY.__webglColorBuffer);aD.bufferData(aD.ARRAY_BUFFER,eN,b9)}if(cS){for(cx=0;cx<dw;cx++){eH[cx]=e[cx]}aD.bindBuffer(aD.ARRAY_BUFFER,bY.__webglLineDistanceBuffer);aD.bufferData(aD.ARRAY_BUFFER,eH,b9)}if(cJ){eC=0;for(es=cJ.length;eC<es;eC++){if(dG=cJ[eC],dG.needsUpdate&&(void 0===dG.boundTo||"vertices"===dG.boundTo)){cm=0;cf=dG.value.length;if(1===dG.size){for(ch=0;ch<cf;ch++){dG.array[ch]=dG.value[ch]}}else{if(2===dG.size){for(ch=0;ch<cf;ch++){cz=dG.value[ch],dG.array[cm]=cz.x,dG.array[cm+1]=cz.y,cm+=2}}else{if(3===dG.size){if("c"===dG.type){for(ch=0;ch<cf;ch++){cz=dG.value[ch],dG.array[cm]=cz.r,dG.array[cm+1]=cz.g,dG.array[cm+2]=cz.b,cm+=3}}else{for(ch=0;ch<cf;ch++){cz=dG.value[ch],dG.array[cm]=cz.x,dG.array[cm+1]=cz.y,dG.array[cm+2]=cz.z,cm+=3}}}else{if(4===dG.size){for(ch=0;ch<cf;ch++){cz=dG.value[ch],dG.array[cm]=cz.x,dG.array[cm+1]=cz.y,dG.array[cm+2]=cz.z,dG.array[cm+3]=cz.w,cm+=4}}}}}aD.bindBuffer(aD.ARRAY_BUFFER,dG.buffer);aD.bufferData(aD.ARRAY_BUFFER,dG.array,b9)}}}}dv.verticesNeedUpdate=!1;dv.colorsNeedUpdate=!1;dv.lineDistancesNeedUpdate=!1;dr.attributes&&aw(dr)}else{if(dx instanceof THREE.ParticleSystem){dr=aL(dx,dv);du=dr.attributes&&az(dr);if(dv.verticesNeedUpdate||dv.colorsNeedUpdate||dx.sortParticles||du){var cw=dv,cv=aD.DYNAMIC_DRAW,cl=dx,cn=void 0,ck=void 0,b4=void 0,dB=void 0,bT=void 0,d4=void 0,em=cw.vertices,cj=em.length,b3=cw.colors,dP=b3.length,cT=cw.__vertexArray,cF=cw.__colorArray,dR=cw.__sortArray,dn=cw.verticesNeedUpdate,c2=cw.colorsNeedUpdate,dp=cw.__webglCustomAttributesList,bN=void 0,bZ=void 0,bR=void 0,s=void 0,bO=void 0,eB=void 0;if(cl.sortParticles){bA.copy(o);bA.multiply(cl.matrixWorld);for(cn=0;cn<cj;cn++){b4=em[cn],bD.copy(b4),bD.applyProjection(bA),dR[cn]=[bD.z,cn]}dR.sort(aC);for(cn=0;cn<cj;cn++){b4=em[dR[cn][1]],dB=3*cn,cT[dB]=b4.x,cT[dB+1]=b4.y,cT[dB+2]=b4.z}for(ck=0;ck<dP;ck++){dB=3*ck,d4=b3[dR[ck][1]],cF[dB]=d4.r,cF[dB+1]=d4.g,cF[dB+2]=d4.b}if(dp){bN=0;for(bZ=dp.length;bN<bZ;bN++){if(eB=dp[bN],void 0===eB.boundTo||"vertices"===eB.boundTo){if(dB=0,s=eB.value.length,1===eB.size){for(bR=0;bR<s;bR++){bT=dR[bR][1],eB.array[bR]=eB.value[bT]}}else{if(2===eB.size){for(bR=0;bR<s;bR++){bT=dR[bR][1],bO=eB.value[bT],eB.array[dB]=bO.x,eB.array[dB+1]=bO.y,dB+=2}}else{if(3===eB.size){if("c"===eB.type){for(bR=0;bR<s;bR++){bT=dR[bR][1],bO=eB.value[bT],eB.array[dB]=bO.r,eB.array[dB+1]=bO.g,eB.array[dB+2]=bO.b,dB+=3}}else{for(bR=0;bR<s;bR++){bT=dR[bR][1],bO=eB.value[bT],eB.array[dB]=bO.x,eB.array[dB+1]=bO.y,eB.array[dB+2]=bO.z,dB+=3}}}else{if(4===eB.size){for(bR=0;bR<s;bR++){bT=dR[bR][1],bO=eB.value[bT],eB.array[dB]=bO.x,eB.array[dB+1]=bO.y,eB.array[dB+2]=bO.z,eB.array[dB+3]=bO.w,dB+=4}}}}}}}}}else{if(dn){for(cn=0;cn<cj;cn++){b4=em[cn],dB=3*cn,cT[dB]=b4.x,cT[dB+1]=b4.y,cT[dB+2]=b4.z}}if(c2){for(ck=0;ck<dP;ck++){d4=b3[ck],dB=3*ck,cF[dB]=d4.r,cF[dB+1]=d4.g,cF[dB+2]=d4.b}}if(dp){bN=0;for(bZ=dp.length;bN<bZ;bN++){if(eB=dp[bN],eB.needsUpdate&&(void 0===eB.boundTo||"vertices"===eB.boundTo)){if(s=eB.value.length,dB=0,1===eB.size){for(bR=0;bR<s;bR++){eB.array[bR]=eB.value[bR]}}else{if(2===eB.size){for(bR=0;bR<s;bR++){bO=eB.value[bR],eB.array[dB]=bO.x,eB.array[dB+1]=bO.y,dB+=2}}else{if(3===eB.size){if("c"===eB.type){for(bR=0;bR<s;bR++){bO=eB.value[bR],eB.array[dB]=bO.r,eB.array[dB+1]=bO.g,eB.array[dB+2]=bO.b,dB+=3}}else{for(bR=0;bR<s;bR++){bO=eB.value[bR],eB.array[dB]=bO.x,eB.array[dB+1]=bO.y,eB.array[dB+2]=bO.z,dB+=3}}}else{if(4===eB.size){for(bR=0;bR<s;bR++){bO=eB.value[bR],eB.array[dB]=bO.x,eB.array[dB+1]=bO.y,eB.array[dB+2]=bO.z,eB.array[dB+3]=bO.w,dB+=4}}}}}}}}}if(dn||cl.sortParticles){aD.bindBuffer(aD.ARRAY_BUFFER,cw.__webglVertexBuffer),aD.bufferData(aD.ARRAY_BUFFER,cT,cv)}if(c2||cl.sortParticles){aD.bindBuffer(aD.ARRAY_BUFFER,cw.__webglColorBuffer),aD.bufferData(aD.ARRAY_BUFFER,cF,cv)}if(dp){bN=0;for(bZ=dp.length;bN<bZ;bN++){if(eB=dp[bN],eB.needsUpdate||cl.sortParticles){aD.bindBuffer(aD.ARRAY_BUFFER,eB.buffer),aD.bufferData(aD.ARRAY_BUFFER,eB.array,cv)}}}}dv.verticesNeedUpdate=!1;dv.colorsNeedUpdate=!1;dr.attributes&&aw(dr)}}}}}}};this.initMaterial=function(aa,Z,Y,V){var T,O,M,N;aa.addEventListener("dispose",aR);var L,K,J,H,I;aa instanceof THREE.MeshDepthMaterial?I="depth":aa instanceof THREE.MeshNormalMaterial?I="normal":aa instanceof THREE.MeshBasicMaterial?I="basic":aa instanceof THREE.MeshLambertMaterial?I="lambert":aa instanceof THREE.MeshPhongMaterial?I="phong":aa instanceof THREE.LineBasicMaterial?I="basic":aa instanceof THREE.LineDashedMaterial?I="dashed":aa instanceof THREE.ParticleBasicMaterial&&(I="particle_basic");if(I){var G=THREE.ShaderLib[I];aa.uniforms=THREE.UniformsUtils.clone(G.uniforms);aa.vertexShader=G.vertexShader;aa.fragmentShader=G.fragmentShader}var F,C,D;T=M=C=D=G=0;for(O=Z.length;T<O;T++){F=Z[T],F.onlyShadow||(F instanceof THREE.DirectionalLight&&M++,F instanceof THREE.PointLight&&C++,F instanceof THREE.SpotLight&&D++,F instanceof THREE.HemisphereLight&&G++)}T=M;O=C;M=D;N=G;G=F=0;for(D=Z.length;G<D;G++){C=Z[G],C.castShadow&&(C instanceof THREE.SpotLight&&F++,C instanceof THREE.DirectionalLight&&!C.shadowCascade&&F++)}H=F;bo&&V&&V.useVertexTexture?J=1024:(Z=aD.getParameter(aD.MAX_VERTEX_UNIFORM_VECTORS),Z=Math.floor((Z-20)/4),void 0!==V&&V instanceof THREE.SkinnedMesh&&(Z=Math.min(V.bones.length,Z),Z<V.bones.length&&console.warn("WebGLRenderer: too many bones - "+V.bones.length+", this GPU supports just "+Z+" (try OpenGL instead of ANGLE)")),J=Z);aa:{D=aa.fragmentShader;C=aa.vertexShader;G=aa.uniforms;Z=aa.attributes;F=aa.defines;var Y={map:!!aa.map,envMap:!!aa.envMap,lightMap:!!aa.lightMap,bumpMap:!!aa.bumpMap,normalMap:!!aa.normalMap,specularMap:!!aa.specularMap,vertexColors:aa.vertexColors,fog:Y,useFog:aa.fog,fogExp:Y instanceof THREE.FogExp2,sizeAttenuation:aa.sizeAttenuation,skinning:aa.skinning,maxBones:J,useVertexTexture:bo&&V&&V.useVertexTexture,boneTextureWidth:V&&V.boneTextureWidth,boneTextureHeight:V&&V.boneTextureHeight,morphTargets:aa.morphTargets,morphNormals:aa.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:T,maxPointLights:O,maxSpotLights:M,maxHemiLights:N,maxShadows:H,shadowMapEnabled:this.shadowMapEnabled&&V.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:aa.alphaTest,metal:aa.metal,perPixel:aa.perPixel,wrapAround:aa.wrapAround,doubleSided:aa.side===THREE.DoubleSide,flipSided:aa.side===THREE.BackSide},B,A,k,V=[];I?V.push(I):(V.push(D),V.push(C));for(A in F){V.push(A),V.push(F[A])}for(B in Y){V.push(B),V.push(Y[B])}I=V.join();B=0;for(A=aZ.length;B<A;B++){if(V=aZ[B],V.code===I){V.usedTimes++;K=V.program;break aa}}B="SHADOWMAP_TYPE_BASIC";Y.shadowMapType===THREE.PCFShadowMap?B="SHADOWMAP_TYPE_PCF":Y.shadowMapType===THREE.PCFSoftShadowMap&&(B="SHADOWMAP_TYPE_PCF_SOFT");A=[];for(k in F){V=F[k],!1!==V&&(V="#define "+k+" "+V,A.push(V))}V=A.join("\n");k=aD.createProgram();A=["precision "+a6+" float;",V,bB?"#define VERTEX_TEXTURES":"",bh.gammaInput?"#define GAMMA_INPUT":"",bh.gammaOutput?"#define GAMMA_OUTPUT":"",bh.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+Y.maxDirLights,"#define MAX_POINT_LIGHTS "+Y.maxPointLights,"#define MAX_SPOT_LIGHTS "+Y.maxSpotLights,"#define MAX_HEMI_LIGHTS "+Y.maxHemiLights,"#define MAX_SHADOWS "+Y.maxShadows,"#define MAX_BONES "+Y.maxBones,Y.map?"#define USE_MAP":"",Y.envMap?"#define USE_ENVMAP":"",Y.lightMap?"#define USE_LIGHTMAP":"",Y.bumpMap?"#define USE_BUMPMAP":"",Y.normalMap?"#define USE_NORMALMAP":"",Y.specularMap?"#define USE_SPECULARMAP":"",Y.vertexColors?"#define USE_COLOR":"",Y.skinning?"#define USE_SKINNING":"",Y.useVertexTexture?"#define BONE_TEXTURE":"",Y.boneTextureWidth?"#define N_BONE_PIXEL_X "+Y.boneTextureWidth.toFixed(1):"",Y.boneTextureHeight?"#define N_BONE_PIXEL_Y "+Y.boneTextureHeight.toFixed(1):"",Y.morphTargets?"#define USE_MORPHTARGETS":"",Y.morphNormals?"#define USE_MORPHNORMALS":"",Y.perPixel?"#define PHONG_PER_PIXEL":"",Y.wrapAround?"#define WRAP_AROUND":"",Y.doubleSided?"#define DOUBLE_SIDED":"",Y.flipSided?"#define FLIP_SIDED":"",Y.shadowMapEnabled?"#define USE_SHADOWMAP":"",Y.shadowMapEnabled?"#define "+B:"",Y.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",Y.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",Y.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");B=["precision "+a6+" float;",Y.bumpMap||Y.normalMap?"#extension GL_OES_standard_derivatives : enable":"",V,"#define MAX_DIR_LIGHTS "+Y.maxDirLights,"#define MAX_POINT_LIGHTS "+Y.maxPointLights,"#define MAX_SPOT_LIGHTS "+Y.maxSpotLights,"#define MAX_HEMI_LIGHTS "+Y.maxHemiLights,"#define MAX_SHADOWS "+Y.maxShadows,Y.alphaTest?"#define ALPHATEST "+Y.alphaTest:"",bh.gammaInput?"#define GAMMA_INPUT":"",bh.gammaOutput?"#define GAMMA_OUTPUT":"",bh.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",Y.useFog&&Y.fog?"#define USE_FOG":"",Y.useFog&&Y.fogExp?"#define FOG_EXP2":"",Y.map?"#define USE_MAP":"",Y.envMap?"#define USE_ENVMAP":"",Y.lightMap?"#define USE_LIGHTMAP":"",Y.bumpMap?"#define USE_BUMPMAP":"",Y.normalMap?"#define USE_NORMALMAP":"",Y.specularMap?"#define USE_SPECULARMAP":"",Y.vertexColors?"#define USE_COLOR":"",Y.metal?"#define METAL":"",Y.perPixel?"#define PHONG_PER_PIXEL":"",Y.wrapAround?"#define WRAP_AROUND":"",Y.doubleSided?"#define DOUBLE_SIDED":"",Y.flipSided?"#define FLIP_SIDED":"",Y.shadowMapEnabled?"#define USE_SHADOWMAP":"",Y.shadowMapEnabled?"#define "+B:"",Y.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",Y.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");A=a7("vertex",A+C);B=a7("fragment",B+D);aD.attachShader(k,A);aD.attachShader(k,B);aD.linkProgram(k);aD.getProgramParameter(k,aD.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+aD.getProgramParameter(k,aD.VALIDATE_STATUS)+", gl error ["+aD.getError()+"]");aD.deleteShader(B);aD.deleteShader(A);k.uniforms={};k.attributes={};var z;B="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" ");Y.useVertexTexture?B.push("boneTexture"):B.push("boneGlobalMatrices");for(z in G){B.push(z)}z=B;B=0;for(A=z.length;B<A;B++){G=z[B],k.uniforms[G]=aD.getUniformLocation(k,G)}B="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" ");for(z=0;z<Y.maxMorphTargets;z++){B.push("morphTarget"+z)}for(z=0;z<Y.maxMorphNormals;z++){B.push("morphNormal"+z)}for(K in Z){B.push(K)}K=B;z=0;for(Z=K.length;z<Z;z++){B=K[z],k.attributes[B]=aD.getAttribLocation(k,B)}k.id=R++;aZ.push({program:k,code:I,usedTimes:1});bh.info.memory.programs=aZ.length;K=k}aa.program=K;z=aa.program.attributes;if(aa.morphTargets){aa.numSupportedMorphTargets=0;Z="morphTarget";for(K=0;K<this.maxMorphTargets;K++){k=Z+K,0<=z[k]&&aa.numSupportedMorphTargets++}}if(aa.morphNormals){aa.numSupportedMorphNormals=0;Z="morphNormal";for(K=0;K<this.maxMorphNormals;K++){k=Z+K,0<=z[k]&&aa.numSupportedMorphNormals++}}aa.uniformsList=[];for(L in aa.uniforms){aa.uniformsList.push([aa.uniforms[L],L])}};this.setFaceCulling=function(d,c){d===THREE.CullFaceNone?aD.disable(aD.CULL_FACE):(c===THREE.FrontFaceDirectionCW?aD.frontFace(aD.CW):aD.frontFace(aD.CCW),d===THREE.CullFaceBack?aD.cullFace(aD.BACK):d===THREE.CullFaceFront?aD.cullFace(aD.FRONT):aD.cullFace(aD.FRONT_AND_BACK),aD.enable(aD.CULL_FACE))};this.setMaterialFaces=function(d){var c=d.side===THREE.DoubleSide,d=d.side===THREE.BackSide;ah!==c&&(c?aD.disable(aD.CULL_FACE):aD.enable(aD.CULL_FACE),ah=c);a0!==d&&(d?aD.frontFace(aD.CW):aD.frontFace(aD.CCW),a0=d)};this.setDepthTest=function(b){x!==b&&(b?aD.enable(aD.DEPTH_TEST):aD.disable(aD.DEPTH_TEST),x=b)};this.setDepthWrite=function(b){a1!==b&&(aD.depthMask(b),a1=b)};this.setBlending=function(f,e,h,g){f!==bn&&(f===THREE.NoBlending?aD.disable(aD.BLEND):f===THREE.AdditiveBlending?(aD.enable(aD.BLEND),aD.blendEquation(aD.FUNC_ADD),aD.blendFunc(aD.SRC_ALPHA,aD.ONE)):f===THREE.SubtractiveBlending?(aD.enable(aD.BLEND),aD.blendEquation(aD.FUNC_ADD),aD.blendFunc(aD.ZERO,aD.ONE_MINUS_SRC_COLOR)):f===THREE.MultiplyBlending?(aD.enable(aD.BLEND),aD.blendEquation(aD.FUNC_ADD),aD.blendFunc(aD.ZERO,aD.SRC_COLOR)):f===THREE.CustomBlending?aD.enable(aD.BLEND):(aD.enable(aD.BLEND),aD.blendEquationSeparate(aD.FUNC_ADD,aD.FUNC_ADD),aD.blendFuncSeparate(aD.SRC_ALPHA,aD.ONE_MINUS_SRC_ALPHA,aD.ONE,aD.ONE_MINUS_SRC_ALPHA)),bn=f);if(f===THREE.CustomBlending){if(e!==bC&&(aD.blendEquation(at(e)),bC=e),h!==aY||g!==br){aD.blendFunc(at(h),at(g)),aY=h,br=g}}else{br=aY=bC=null}};this.setTexture=function(s,r){if(s.needsUpdate){s.__webglInit||(s.__webglInit=!0,s.addEventListener("dispose",bz),s.__webglTexture=aD.createTexture(),bh.info.memory.textures++);aD.activeTexture(aD.TEXTURE0+r);aD.bindTexture(aD.TEXTURE_2D,s.__webglTexture);aD.pixelStorei(aD.UNPACK_FLIP_Y_WEBGL,s.flipY);aD.pixelStorei(aD.UNPACK_PREMULTIPLY_ALPHA_WEBGL,s.premultiplyAlpha);aD.pixelStorei(aD.UNPACK_ALIGNMENT,s.unpackAlignment);var q=s.image,p=0===(q.width&q.width-1)&&0===(q.height&q.height-1),n=at(s.format),m=at(s.type);a3(aD.TEXTURE_2D,s,p);var k=s.mipmaps;if(s instanceof THREE.DataTexture){if(0<k.length&&p){for(var l=0,j=k.length;l<j;l++){q=k[l],aD.texImage2D(aD.TEXTURE_2D,l,n,q.width,q.height,0,n,m,q.data)}s.generateMipmaps=!1}else{aD.texImage2D(aD.TEXTURE_2D,0,n,q.width,q.height,0,n,m,q.data)}}else{if(s instanceof THREE.CompressedTexture){l=0;for(j=k.length;l<j;l++){q=k[l],aD.compressedTexImage2D(aD.TEXTURE_2D,l,n,q.width,q.height,0,q.data)}}else{if(0<k.length&&p){l=0;for(j=k.length;l<j;l++){q=k[l],aD.texImage2D(aD.TEXTURE_2D,l,n,n,m,q)}s.generateMipmaps=!1}else{aD.texImage2D(aD.TEXTURE_2D,0,n,n,m,s.image)}}}s.generateMipmaps&&p&&aD.generateMipmap(aD.TEXTURE_2D);s.needsUpdate=!1;if(s.onUpdate){s.onUpdate()}}else{aD.activeTexture(aD.TEXTURE0+r),aD.bindTexture(aD.TEXTURE_2D,s.__webglTexture)}};this.setRenderTarget=function(j){var i=j instanceof THREE.WebGLRenderTargetCube;if(j&&!j.__webglFramebuffer){void 0===j.depthBuffer&&(j.depthBuffer=!0);void 0===j.stencilBuffer&&(j.stencilBuffer=!0);j.addEventListener("dispose",bp);j.__webglTexture=aD.createTexture();bh.info.memory.textures++;var q=0===(j.width&j.width-1)&&0===(j.height&j.height-1),p=at(j.format),n=at(j.type);if(i){j.__webglFramebuffer=[];j.__webglRenderbuffer=[];aD.bindTexture(aD.TEXTURE_CUBE_MAP,j.__webglTexture);a3(aD.TEXTURE_CUBE_MAP,j,q);for(var m=0;6>m;m++){j.__webglFramebuffer[m]=aD.createFramebuffer();j.__webglRenderbuffer[m]=aD.createRenderbuffer();aD.texImage2D(aD.TEXTURE_CUBE_MAP_POSITIVE_X+m,0,p,j.width,j.height,0,p,n,null);var k=j,l=aD.TEXTURE_CUBE_MAP_POSITIVE_X+m;aD.bindFramebuffer(aD.FRAMEBUFFER,j.__webglFramebuffer[m]);aD.framebufferTexture2D(aD.FRAMEBUFFER,aD.COLOR_ATTACHMENT0,l,k.__webglTexture,0);aq(j.__webglRenderbuffer[m],j)}q&&aD.generateMipmap(aD.TEXTURE_CUBE_MAP)}else{j.__webglFramebuffer=aD.createFramebuffer(),j.__webglRenderbuffer=j.shareDepthFrom?j.shareDepthFrom.__webglRenderbuffer:aD.createRenderbuffer(),aD.bindTexture(aD.TEXTURE_2D,j.__webglTexture),a3(aD.TEXTURE_2D,j,q),aD.texImage2D(aD.TEXTURE_2D,0,p,j.width,j.height,0,p,n,null),p=aD.TEXTURE_2D,aD.bindFramebuffer(aD.FRAMEBUFFER,j.__webglFramebuffer),aD.framebufferTexture2D(aD.FRAMEBUFFER,aD.COLOR_ATTACHMENT0,p,j.__webglTexture,0),j.shareDepthFrom?j.depthBuffer&&!j.stencilBuffer?aD.framebufferRenderbuffer(aD.FRAMEBUFFER,aD.DEPTH_ATTACHMENT,aD.RENDERBUFFER,j.__webglRenderbuffer):j.depthBuffer&&j.stencilBuffer&&aD.framebufferRenderbuffer(aD.FRAMEBUFFER,aD.DEPTH_STENCIL_ATTACHMENT,aD.RENDERBUFFER,j.__webglRenderbuffer):aq(j.__webglRenderbuffer,j),q&&aD.generateMipmap(aD.TEXTURE_2D)}i?aD.bindTexture(aD.TEXTURE_CUBE_MAP,null):aD.bindTexture(aD.TEXTURE_2D,null);aD.bindRenderbuffer(aD.RENDERBUFFER,null);aD.bindFramebuffer(aD.FRAMEBUFFER,null)}j?(i=i?j.__webglFramebuffer[j.activeCubeFace]:j.__webglFramebuffer,q=j.width,j=j.height,n=p=0):(i=null,q=ap,j=Q,p=aU,n=ae);i!==bm&&(aD.bindFramebuffer(aD.FRAMEBUFFER,i),aD.viewport(p,n,q,j),bm=i);af=q;aN=j};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};THREE.WebGLRenderTarget=function(e,d,f){this.width=e;this.height=d;f=f||{};this.wrapS=void 0!==f.wrapS?f.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==f.wrapT?f.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==f.magFilter?f.magFilter:THREE.LinearFilter;this.minFilter=void 0!==f.minFilter?f.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==f.anisotropy?f.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==f.format?f.format:THREE.RGBAFormat;this.type=void 0!==f.type?f.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==f.depthBuffer?f.depthBuffer:!0;this.stencilBuffer=void 0!==f.stencilBuffer?f.stencilBuffer:!0;this.generateMipmaps=!0;this.shareDepthFrom=null};THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent,clone:function(){var b=new THREE.WebGLRenderTarget(this.width,this.height);b.wrapS=this.wrapS;b.wrapT=this.wrapT;b.magFilter=this.magFilter;b.minFilter=this.minFilter;b.anisotropy=this.anisotropy;b.offset.copy(this.offset);b.repeat.copy(this.repeat);b.format=this.format;b.type=this.type;b.depthBuffer=this.depthBuffer;b.stencilBuffer=this.stencilBuffer;b.generateMipmaps=this.generateMipmaps;b.shareDepthFrom=this.shareDepthFrom;return b},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.WebGLRenderTargetCube=function(e,d,f){THREE.WebGLRenderTarget.call(this,e,d,f);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(b){this.positionWorld.copy(b.positionWorld);this.positionScreen.copy(b.positionScreen)};THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidModel=new THREE.Vector3;this.normalModel=new THREE.Vector3;this.normalModelView=new THREE.Vector3;this.vertexNormalsLength=0;this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.material=this.color=null;this.uvs=[[]];this.z=null};THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.v4=new THREE.RenderableVertex;this.centroidModel=new THREE.Vector3;this.normalModel=new THREE.Vector3;this.normalModelView=new THREE.Vector3;this.vertexNormalsLength=0;this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.material=this.color=null;this.uvs=[[]];this.z=null};THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=this.object=null;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.vertexColors=[new THREE.Color,new THREE.Color];this.material=null};THREE.GeometryUtils={merge:function(G,F,E){var D,C,B=G.vertices.length,z=F instanceof THREE.Mesh?F.geometry:F,A=G.vertices,y=z.vertices,x=G.faces,w=z.faces,G=G.faceVertexUvs[0],z=z.faceVertexUvs[0];void 0===E&&(E=0);F instanceof THREE.Mesh&&(F.matrixAutoUpdate&&F.updateMatrix(),D=F.matrix,C=(new THREE.Matrix3).getNormalMatrix(D));for(var F=0,u=y.length;F<u;F++){var v=y[F].clone();D&&v.applyMatrix4(D);A.push(v)}F=0;for(u=w.length;F<u;F++){var v=w[F],o,H,k=v.vertexNormals,s=v.vertexColors;v instanceof THREE.Face3?o=new THREE.Face3(v.a+B,v.b+B,v.c+B):v instanceof THREE.Face4&&(o=new THREE.Face4(v.a+B,v.b+B,v.c+B,v.d+B));o.normal.copy(v.normal);C&&o.normal.applyMatrix3(C).normalize();A=0;for(y=k.length;A<y;A++){H=k[A].clone(),C&&H.applyMatrix3(C).normalize(),o.vertexNormals.push(H)}o.color.copy(v.color);A=0;for(y=s.length;A<y;A++){H=s[A],o.vertexColors.push(H.clone())}o.materialIndex=v.materialIndex+E;o.centroid.copy(v.centroid);D&&o.centroid.applyMatrix4(D);x.push(o)}F=0;for(u=z.length;F<u;F++){E=z[F];D=[];A=0;for(y=E.length;A<y;A++){D.push(new THREE.Vector2(E[A].x,E[A].y))}G.push(D)}},removeMaterials:function(i,g){for(var n={},m=0,l=g.length;m<l;m++){n[g[m]]=!0}for(var k,j=[],m=0,l=i.faces.length;m<l;m++){k=i.faces[m],k.materialIndex in n||j.push(k)}i.faces=j},randomPointInTriangle:function(j,i,p){var o,n,m,k=new THREE.Vector3,l=THREE.GeometryUtils.__v1;o=THREE.GeometryUtils.random();n=THREE.GeometryUtils.random();1<o+n&&(o=1-o,n=1-n);m=1-o-n;k.copy(j);k.multiplyScalar(o);l.copy(i);l.multiplyScalar(n);k.add(l);l.copy(p);l.multiplyScalar(m);k.add(l);return k},randomPointInFace:function(i,g,n){var m,l,k;if(i instanceof THREE.Face3){return m=g.vertices[i.a],l=g.vertices[i.b],k=g.vertices[i.c],THREE.GeometryUtils.randomPointInTriangle(m,l,k)}if(i instanceof THREE.Face4){m=g.vertices[i.a];l=g.vertices[i.b];k=g.vertices[i.c];var g=g.vertices[i.d],j;n?i._area1&&i._area2?(n=i._area1,j=i._area2):(n=THREE.GeometryUtils.triangleArea(m,l,g),j=THREE.GeometryUtils.triangleArea(l,k,g),i._area1=n,i._area2=j):(n=THREE.GeometryUtils.triangleArea(m,l,g),j=THREE.GeometryUtils.triangleArea(l,k,g));return THREE.GeometryUtils.random()*(n+j)<n?THREE.GeometryUtils.randomPointInTriangle(m,l,g):THREE.GeometryUtils.randomPointInTriangle(l,k,g)}},randomPointsInGeometry:function(B,A){function z(d){function c(f,b){if(b<f){return f}var a=f+Math.floor((b-f)/2);return s[a]>d?c(f,a-1):s[a]<d?c(a+1,b):a}return c(0,s.length-1)}var y,x,w=B.faces,u=B.vertices,v=w.length,t=0,s=[],r,o,p,k;for(x=0;x<v;x++){y=w[x],y instanceof THREE.Face3?(r=u[y.a],o=u[y.b],p=u[y.c],y._area=THREE.GeometryUtils.triangleArea(r,o,p)):y instanceof THREE.Face4&&(r=u[y.a],o=u[y.b],p=u[y.c],k=u[y.d],y._area1=THREE.GeometryUtils.triangleArea(r,o,k),y._area2=THREE.GeometryUtils.triangleArea(o,p,k),y._area=y._area1+y._area2),t+=y._area,s[x]=t}y=[];for(x=0;x<A;x++){u=THREE.GeometryUtils.random()*t,u=z(u),y[x]=THREE.GeometryUtils.randomPointInFace(w[u],B,!0)}return y},triangleArea:function(g,f,j){var i=THREE.GeometryUtils.__v1,h=THREE.GeometryUtils.__v2;i.subVectors(f,g);h.subVectors(j,g);i.cross(h);return 0.5*i.length()},center:function(e){e.computeBoundingBox();var d=e.boundingBox,f=new THREE.Vector3;f.addVectors(d.min,d.max);f.multiplyScalar(-0.5);e.applyMatrix((new THREE.Matrix4).makeTranslation(f.x,f.y,f.z));e.computeBoundingBox();return f},normalizeUVs:function(h){for(var h=h.faceVertexUvs[0],g=0,l=h.length;g<l;g++){for(var k=h[g],j=0,i=k.length;j<i;j++){1!==k[j].x&&(k[j].x-=Math.floor(k[j].x)),1!==k[j].y&&(k[j].y-=Math.floor(k[j].y))}}},triangulateQuads:function(z){var y,x,w,v,u=[],s=[],t=[];y=0;for(x=z.faceUvs.length;y<x;y++){s[y]=[]}y=0;for(x=z.faceVertexUvs.length;y<x;y++){t[y]=[]}y=0;for(x=z.faces.length;y<x;y++){if(w=z.faces[y],w instanceof THREE.Face4){v=w.a;var r=w.b,q=w.c,p=w.d,k=new THREE.Face3,o=new THREE.Face3;k.color.copy(w.color);o.color.copy(w.color);k.materialIndex=w.materialIndex;o.materialIndex=w.materialIndex;k.a=v;k.b=r;k.c=p;o.a=r;o.b=q;o.c=p;4===w.vertexColors.length&&(k.vertexColors[0]=w.vertexColors[0].clone(),k.vertexColors[1]=w.vertexColors[1].clone(),k.vertexColors[2]=w.vertexColors[3].clone(),o.vertexColors[0]=w.vertexColors[1].clone(),o.vertexColors[1]=w.vertexColors[2].clone(),o.vertexColors[2]=w.vertexColors[3].clone());u.push(k,o);w=0;for(v=z.faceVertexUvs.length;w<v;w++){z.faceVertexUvs[w].length&&(k=z.faceVertexUvs[w][y],r=k[1],q=k[2],p=k[3],k=[k[0].clone(),r.clone(),p.clone()],r=[r.clone(),q.clone(),p.clone()],t[w].push(k,r))}w=0;for(v=z.faceUvs.length;w<v;w++){z.faceUvs[w].length&&(r=z.faceUvs[w][y],s[w].push(r,r))}}else{u.push(w);w=0;for(v=z.faceUvs.length;w<v;w++){s[w].push(z.faceUvs[w][y])}w=0;for(v=z.faceVertexUvs.length;w<v;w++){t[w].push(z.faceVertexUvs[w][y])}}}z.faces=u;z.faceUvs=s;z.faceVertexUvs=t;z.computeCentroids();z.computeFaceNormals();z.computeVertexNormals();z.hasTangents&&z.computeTangents()},setMaterialIndex:function(f,e,h,g){f=f.faces;g=g||f.length-1;for(h=h||0;h<=g;h++){f[h].materialIndex=e}}};THREE.GeometryUtils.random=THREE.Math.random16;THREE.GeometryUtils.__v1=new THREE.Vector3;THREE.GeometryUtils.__v2=new THREE.Vector3;THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(h,g,l,k){var j=new Image,i=new THREE.Texture(j,g),g=new THREE.ImageLoader;g.addEventListener("load",function(b){i.image=b.content;i.needsUpdate=!0;l&&l(i)});g.addEventListener("error",function(b){k&&k(b.message)});g.crossOrigin=this.crossOrigin;g.load(h,j);i.sourceFile=h;return i},loadCompressedTexture:function(h,g,l,k){var j=new THREE.CompressedTexture;j.mapping=g;var i=new XMLHttpRequest;i.onload=function(){var b=THREE.ImageUtils.parseDDS(i.response,!0);j.format=b.format;j.mipmaps=b.mipmaps;j.image.width=b.width;j.image.height=b.height;j.generateMipmaps=!1;j.needsUpdate=!0;l&&l(j)};i.onerror=k;i.open("GET",h,!0);i.responseType="arraybuffer";i.send(null);return j},loadTextureCube:function(j,i,p,o){var n=[];n.loadCount=0;var m=new THREE.Texture;m.image=n;void 0!==i&&(m.mapping=i);m.flipY=!1;for(var i=0,k=j.length;i<k;++i){var l=new Image;n[i]=l;l.onload=function(){n.loadCount+=1;6===n.loadCount&&(m.needsUpdate=!0,p&&p(m))};l.onerror=o;l.crossOrigin=this.crossOrigin;l.src=j[i]}return m},loadCompressedTextureCube:function(t,s,r,q){var p=[];p.loadCount=0;var o=new THREE.CompressedTexture;o.image=p;void 0!==s&&(o.mapping=s);o.flipY=!1;o.generateMipmaps=!1;s=function(d,c){return function(){var a=THREE.ImageUtils.parseDDS(d.response,!0);c.format=a.format;c.mipmaps=a.mipmaps;c.width=a.width;c.height=a.height;p.loadCount+=1;6===p.loadCount&&(o.format=a.format,o.needsUpdate=!0,r&&r(o))}};if(t instanceof Array){for(var m=0,n=t.length;m<n;++m){var l={};p[m]=l;var k=new XMLHttpRequest;k.onload=s(k,l);k.onerror=q;l=t[m];k.open("GET",l,!0);k.responseType="arraybuffer";k.send(null)}}else{k=new XMLHttpRequest,k.onload=function(){var e=THREE.ImageUtils.parseDDS(k.response,!0);if(e.isCubemap){for(var c=e.mipmaps.length/e.mipmapCount,g=0;g<c;g++){p[g]={mipmaps:[]};for(var f=0;f<e.mipmapCount;f++){p[g].mipmaps.push(e.mipmaps[g*e.mipmapCount+f]),p[g].format=e.format,p[g].width=e.width,p[g].height=e.height}}o.format=e.format;o.needsUpdate=!0;r&&r(o)}},k.onerror=q,k.open("GET",t,!0),k.responseType="arraybuffer",k.send(null)}return o},parseDDS:function(z,y){function x(b){return b.charCodeAt(0)+(b.charCodeAt(1)<<8)+(b.charCodeAt(2)<<16)+(b.charCodeAt(3)<<24)}var w={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},v=x("DXT1"),u=x("DXT3"),s=x("DXT5"),t=new Int32Array(z,0,31);if(542327876!==t[0]){return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),w}if(!t[20]&4){return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),w}var r=t[21];switch(r){case v:v=8;w.format=THREE.RGB_S3TC_DXT1_Format;break;case u:v=16;w.format=THREE.RGBA_S3TC_DXT3_Format;break;case s:v=16;w.format=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(r&255,r>>8&255,r>>16&255,r>>24&255)),w}w.mipmapCount=1;t[2]&131072&&!1!==y&&(w.mipmapCount=Math.max(1,t[7]));w.isCubemap=t[28]&512?!0:!1;w.width=t[4];w.height=t[3];for(var t=t[1]+4,u=w.width,s=w.height,r=w.isCubemap?6:1,q=0;q<r;q++){for(var p=0;p<w.mipmapCount;p++){var k=Math.max(4,u)/4*Math.max(4,s)/4*v,o={data:new Uint8Array(z,t,k),width:u,height:s};w.mipmaps.push(o);t+=k;u=Math.max(0.5*u,1);s=Math.max(0.5*s,1)}u=w.width;s=w.height}return w},getNormalMap:function(L,K){var J=function(d){var c=Math.sqrt(d[0]*d[0]+d[1]*d[1]+d[2]*d[2]);return[d[0]/c,d[1]/c,d[2]/c]},K=K|1,I=L.width,H=L.height,G=document.createElement("canvas");G.width=I;G.height=H;var E=G.getContext("2d");E.drawImage(L,0,0);for(var F=E.getImageData(0,0,I,H).data,D=E.createImageData(I,H),C=D.data,B=0;B<I;B++){for(var z=0;z<H;z++){var A=0>z-1?0:z-1,x=z+1>H-1?H-1:z+1,o=0>B-1?0:B-1,w=B+1>I-1?I-1:B+1,y=[],u=[0,0,F[4*(z*I+B)]/255*K];y.push([-1,0,F[4*(z*I+o)]/255*K]);y.push([-1,-1,F[4*(A*I+o)]/255*K]);y.push([0,-1,F[4*(A*I+B)]/255*K]);y.push([1,-1,F[4*(A*I+w)]/255*K]);y.push([1,0,F[4*(z*I+w)]/255*K]);y.push([1,1,F[4*(x*I+w)]/255*K]);y.push([0,1,F[4*(x*I+B)]/255*K]);y.push([-1,1,F[4*(x*I+o)]/255*K]);A=[];o=y.length;for(x=0;x<o;x++){var w=y[x],k=y[(x+1)%o],w=[w[0]-u[0],w[1]-u[1],w[2]-u[2]],k=[k[0]-u[0],k[1]-u[1],k[2]-u[2]];A.push(J([w[1]*k[2]-w[2]*k[1],w[2]*k[0]-w[0]*k[2],w[0]*k[1]-w[1]*k[0]]))}y=[0,0,0];for(x=0;x<A.length;x++){y[0]+=A[x][0],y[1]+=A[x][1],y[2]+=A[x][2]}y[0]/=A.length;y[1]/=A.length;y[2]/=A.length;u=4*(z*I+B);C[u]=255*((y[0]+1)/2)|0;C[u+1]=255*((y[1]+1)/2)|0;C[u+2]=255*y[2]|0;C[u+3]=255}}E.putImageData(D,0,0);return G},generateDataTexture:function(j,i,p){for(var o=j*i,n=new Uint8Array(3*o),m=Math.floor(255*p.r),k=Math.floor(255*p.g),p=Math.floor(255*p.b),l=0;l<o;l++){n[3*l]=m,n[3*l+1]=k,n[3*l+2]=p}j=new THREE.DataTexture(n,j,i,THREE.RGBFormat);j.needsUpdate=!0;return j}};THREE.SceneUtils={createMultiMaterialObject:function(g,f){for(var j=new THREE.Object3D,i=0,h=f.length;i<h;i++){j.add(new THREE.Mesh(g,f[i]))}return j},detach:function(e,d,f){e.applyMatrix(d.matrixWorld);d.remove(e);f.add(e)},attach:function(f,e,h){var g=new THREE.Matrix4;g.getInverse(h.matrixWorld);f.applyMatrix(g);e.remove(f);h.add(f)}};THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(d){var c=d.familyName.toLowerCase();this.faces[c]=this.faces[c]||{};this.faces[c][d.cssFontWeight]=this.faces[c][d.cssFontWeight]||{};this.faces[c][d.cssFontWeight][d.cssFontStyle]=d;return this.faces[c][d.cssFontWeight][d.cssFontStyle]=d},drawText:function(j){for(var i=this.getFace(),p=this.size/i.resolution,o=0,n=String(j).split(""),m=n.length,k=[],j=0;j<m;j++){var l=new THREE.Path,l=this.extractGlyphPoints(n[j],i,p,o,l),o=o+l.offset;k.push(l.path)}return{paths:k,offset:o/2}},extractGlyphPoints:function(L,K,J,I,H){var G=[],E,F,D,C,B,z,A,x,o,w,y,u=K.glyphs[L]||K.glyphs["?"];if(u){if(u.o){K=u._cachedOutline||(u._cachedOutline=u.o.split(" "));C=K.length;for(L=0;L<C;){switch(D=K[L++],D){case"m":D=K[L++]*J+I;B=K[L++]*J;H.moveTo(D,B);break;case"l":D=K[L++]*J+I;B=K[L++]*J;H.lineTo(D,B);break;case"q":D=K[L++]*J+I;B=K[L++]*J;x=K[L++]*J+I;o=K[L++]*J;H.quadraticCurveTo(x,o,D,B);if(E=G[G.length-1]){z=E.x;A=E.y;E=1;for(F=this.divisions;E<=F;E++){var k=E/F;THREE.Shape.Utils.b2(k,z,x,D);THREE.Shape.Utils.b2(k,A,o,B)}}break;case"b":if(D=K[L++]*J+I,B=K[L++]*J,x=K[L++]*J+I,o=K[L++]*-J,w=K[L++]*J+I,y=K[L++]*-J,H.bezierCurveTo(D,B,x,o,w,y),E=G[G.length-1]){z=E.x;A=E.y;E=1;for(F=this.divisions;E<=F;E++){k=E/F,THREE.Shape.Utils.b3(k,z,x,w,D),THREE.Shape.Utils.b3(k,A,o,y,B)}}}}}return{offset:u.ha*J,path:H}}}};THREE.FontUtils.generateShapes=function(h,g){var g=g||{},l=void 0!==g.curveSegments?g.curveSegments:4,k=void 0!==g.font?g.font:"helvetiker",j=void 0!==g.weight?g.weight:"normal",i=void 0!==g.style?g.style:"normal";THREE.FontUtils.size=void 0!==g.size?g.size:100;THREE.FontUtils.divisions=l;THREE.FontUtils.face=k;THREE.FontUtils.weight=j;THREE.FontUtils.style=i;l=THREE.FontUtils.drawText(h).paths;k=[];j=0;for(i=l.length;j<i;j++){Array.prototype.push.apply(k,l[j].toShapes())}return k};(function(d){var c=function(i){for(var g=i.length,l=0,k=g-1,j=0;j<g;k=j++){l+=i[k].x*i[j].y-i[j].x*i[k].y}return 0.5*l};d.Triangulate=function(ag,af){var ae=ag.length;if(3>ae){return null}var ad=[],ab=[],ac=[],aa,Z,Y;if(0<c(ag)){for(Z=0;Z<ae;Z++){ab[Z]=Z}}else{for(Z=0;Z<ae;Z++){ab[Z]=ae-1-Z}}var W=2*ae;for(Z=ae-1;2<ae;){if(0>=W--){console.log("Warning, unable to triangulate polygon!");break}aa=Z;ae<=aa&&(aa=0);Z=aa+1;ae<=Z&&(Z=0);Y=Z+1;ae<=Y&&(Y=0);var X;ag:{var T=X=void 0,O=void 0,R=void 0,V=void 0,P=void 0,K=void 0,w=void 0,E=void 0,T=ag[ab[aa]].x,O=ag[ab[aa]].y,R=ag[ab[Z]].x,V=ag[ab[Z]].y,P=ag[ab[Y]].x,K=ag[ab[Y]].y;if(1e-10>(R-T)*(K-O)-(V-O)*(P-T)){X=!1}else{var D=void 0,x=void 0,M=void 0,U=void 0,S=void 0,k=void 0,Q=void 0,u=void 0,b=void 0,o=void 0,b=u=Q=E=w=void 0,D=P-R,x=K-V,M=T-P,U=O-K,S=R-T,k=V-O;for(X=0;X<ae;X++){if(!(X===aa||X===Z||X===Y)){if(w=ag[ab[X]].x,E=ag[ab[X]].y,Q=w-T,u=E-O,b=w-R,o=E-V,w-=P,E-=K,b=D*o-x*b,Q=S*u-k*Q,u=M*E-U*w,0<=b&&0<=u&&0<=Q){X=!1;break ag}}}X=!0}}if(X){ad.push([ag[ab[aa]],ag[ab[Z]],ag[ab[Y]]]);ac.push([ab[aa],ab[Z],ab[Y]]);aa=Z;for(Y=Z+1;Y<ae;aa++,Y++){ab[aa]=ab[Y]}ae--;W=2*ae}}return af?ac:ad};d.Triangulate.area=c;return d})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.typeface_js=self._typeface_js;THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(b){b=this.getUtoTmapping(b);return this.getPoint(b)};THREE.Curve.prototype.getPoints=function(e){e||(e=5);var d,f=[];for(d=0;d<=e;d++){f.push(this.getPoint(d/e))}return f};THREE.Curve.prototype.getSpacedPoints=function(e){e||(e=5);var d,f=[];for(d=0;d<=e;d++){f.push(this.getPointAt(d/e))}return f};THREE.Curve.prototype.getLength=function(){var b=this.getLengths();return b[b.length-1]};THREE.Curve.prototype.getLengths=function(h){h||(h=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==h+1&&!this.needsUpdate){return this.cacheArcLengths}this.needsUpdate=!1;var g=[],l,k=this.getPoint(0),j,i=0;g.push(0);for(j=1;j<=h;j++){l=this.getPoint(j/h),i+=l.distanceTo(k),g.push(i),k=l}return this.cacheArcLengths=g};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};THREE.Curve.prototype.getUtoTmapping=function(r,q){var p=this.getLengths(),o=0,n=p.length,m;m=q?q:r*p[n-1];for(var k=0,l=n-1,j;k<=l;){if(o=Math.floor(k+(l-k)/2),j=p[o]-m,0>j){k=o+1}else{if(0<j){l=o-1}else{l=o;break}}}o=l;if(p[o]==m){return o/(n-1)}k=p[o];return p=(o+(m-k)/(p[o+1]-k))/(n-1)};THREE.Curve.prototype.getTangent=function(d){var c=d-0.0001,d=d+0.0001;0>c&&(c=0);1<d&&(d=1);c=this.getPoint(c);return this.getPoint(d).clone().sub(c).normalize()};THREE.Curve.prototype.getTangentAt=function(b){b=this.getUtoTmapping(b);return this.getTangent(b)};THREE.Curve.Utils={tangentQuadraticBezier:function(f,e,h,g){return 2*(1-f)*(h-e)+2*f*(g-h)},tangentCubicBezier:function(g,f,j,i,h){return -3*f*(1-g)*(1-g)+3*j*(1-g)*(1-g)-6*g*j*(1-g)+6*g*i*(1-g)-3*g*g*i+3*g*g*h},tangentSpline:function(b){return 6*b*b-6*b+(3*b*b-4*b+1)+(-6*b*b+6*b)+(3*b*b-2*b)},interpolate:function(h,g,l,k,j){var h=0.5*(l-h),k=0.5*(k-g),i=j*j;return(2*g-2*l+h+k)*j*i+(-3*g+3*l-2*h-k)*i+h*j+g}};THREE.Curve.create=function(d,c){d.prototype=Object.create(THREE.Curve.prototype);d.prototype.getPoint=c;return d};THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(b){this.curves.push(b)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var d=this.curves[0].getPoint(0),c=this.curves[this.curves.length-1].getPoint(1);d.equals(c)||this.curves.push(new THREE.LineCurve(c,d))};THREE.CurvePath.prototype.getPoint=function(e){for(var d=e*this.getLength(),f=this.getCurveLengths(),e=0;e<f.length;){if(f[e]>=d){return d=f[e]-d,e=this.curves[e],d=1-d/e.getLength(),e.getPointAt(d)}e++}return null};THREE.CurvePath.prototype.getLength=function(){var b=this.getCurveLengths();return b[b.length-1]};THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length){return this.cacheLengths}var f=[],e=0,h,g=this.curves.length;for(h=0;h<g;h++){e+=this.curves[h].getLength(),f.push(e)}return this.cacheLengths=f};THREE.CurvePath.prototype.getBoundingBox=function(){var x=this.getPoints(),w,v,u,t,s,q;w=v=Number.NEGATIVE_INFINITY;t=s=Number.POSITIVE_INFINITY;var r,p,o,m,k=x[0] instanceof THREE.Vector3;m=k?new THREE.Vector3:new THREE.Vector2;p=0;for(o=x.length;p<o;p++){r=x[p],r.x>w?w=r.x:r.x<t&&(t=r.x),r.y>v?v=r.y:r.y<s&&(s=r.y),k&&(r.z>u?u=r.z:r.z<q&&(q=r.z)),m.add(r)}x={minX:t,minY:s,maxX:w,maxY:v,centroid:m.divideScalar(o)};k&&(x.maxZ=u,x.minZ=q);return x};THREE.CurvePath.prototype.createPointsGeometry=function(b){b=this.getPoints(b,!0);return this.createGeometry(b)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(b){b=this.getSpacedPoints(b,!0);return this.createGeometry(b)};THREE.CurvePath.prototype.createGeometry=function(e){for(var d=new THREE.Geometry,f=0;f<e.length;f++){d.vertices.push(new THREE.Vector3(e[f].x,e[f].y,e[f].z||0))}return d};THREE.CurvePath.prototype.addWrapPath=function(b){this.bends.push(b)};THREE.CurvePath.prototype.getTransformedPoints=function(g,f){var j=this.getPoints(g),i,h;f||(f=this.bends);i=0;for(h=f.length;i<h;i++){j=this.getWrapPoints(j,f[i])}return j};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(g,f){var j=this.getSpacedPoints(g),i,h;f||(f=this.bends);i=0;for(h=f.length;i<h;i++){j=this.getWrapPoints(j,f[i])}return j};THREE.CurvePath.prototype.getWrapPoints=function(r,q){var p=this.getBoundingBox(),o,n,m,k,l,j;o=0;for(n=r.length;o<n;o++){m=r[o],k=m.x,l=m.y,j=k/p.maxX,j=q.getUtoTmapping(j,k),k=q.getPoint(j),l=q.getNormalVector(j).multiplyScalar(l),m.x=k.x+l.x,m.y=k.y+l.y}return r};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);THREE.Gyroscope.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||e){this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.makeFromPositionQuaternionScale(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0}for(var d=0,f=this.children.length;d<f;d++){this.children[d].updateMatrixWorld(e)}};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;THREE.Path=function(b){THREE.CurvePath.call(this);this.actions=[];b&&this.fromPoints(b)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var d=1,f=e.length;d<f;d++){this.lineTo(e[d].x,e[d].y)}};THREE.Path.prototype.moveTo=function(e,d){var f=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:f})};THREE.Path.prototype.lineTo=function(f,e){var h=Array.prototype.slice.call(arguments),g=this.actions[this.actions.length-1].args,g=new THREE.LineCurve(new THREE.Vector2(g[g.length-2],g[g.length-1]),new THREE.Vector2(f,e));this.curves.push(g);this.actions.push({action:THREE.PathActions.LINE_TO,args:h})};THREE.Path.prototype.quadraticCurveTo=function(h,g,l,k){var j=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,i=new THREE.QuadraticBezierCurve(new THREE.Vector2(i[i.length-2],i[i.length-1]),new THREE.Vector2(h,g),new THREE.Vector2(l,k));this.curves.push(i);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:j})};THREE.Path.prototype.bezierCurveTo=function(j,i,p,o,n,m){var k=Array.prototype.slice.call(arguments),l=this.actions[this.actions.length-1].args,l=new THREE.CubicBezierCurve(new THREE.Vector2(l[l.length-2],l[l.length-1]),new THREE.Vector2(j,i),new THREE.Vector2(p,o),new THREE.Vector2(n,m));this.curves.push(l);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:k})};THREE.Path.prototype.splineThru=function(e){var d=Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args,f=[new THREE.Vector2(f[f.length-2],f[f.length-1])];Array.prototype.push.apply(f,e);f=new THREE.SplineCurve(f);this.curves.push(f);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:d})};THREE.Path.prototype.arc=function(i,g,n,m,l,k){var j=this.actions[this.actions.length-1].args;this.absarc(i+j[j.length-2],g+j[j.length-1],n,m,l,k)};THREE.Path.prototype.absarc=function(h,g,l,k,j,i){this.absellipse(h,g,l,l,k,j,i)};THREE.Path.prototype.ellipse=function(j,i,p,o,n,m,k){var l=this.actions[this.actions.length-1].args;this.absellipse(j+l[l.length-2],i+l[l.length-1],p,o,n,m,k)};THREE.Path.prototype.absellipse=function(r,q,p,o,n,m,k){var l=Array.prototype.slice.call(arguments),j=new THREE.EllipseCurve(r,q,p,o,n,m,k);this.curves.push(j);j=j.getPoint(k?1:0);l.push(j.x);l.push(j.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:l})};THREE.Path.prototype.getSpacedPoints=function(e){e||(e=40);for(var d=[],f=0;f<e;f++){d.push(this.getPoint(f/e))}return d};THREE.Path.prototype.getPoints=function(E,D){if(this.useSpacedPoints){return console.log("tata"),this.getSpacedPoints(E,D)}var E=E||12,C=[],B,A,z,x,y,w,v,u,p,s,o,F,k;B=0;for(A=this.actions.length;B<A;B++){switch(z=this.actions[B],x=z.action,z=z.args,x){case THREE.PathActions.MOVE_TO:C.push(new THREE.Vector2(z[0],z[1]));break;case THREE.PathActions.LINE_TO:C.push(new THREE.Vector2(z[0],z[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:y=z[2];w=z[3];p=z[0];s=z[1];0<C.length?(x=C[C.length-1],o=x.x,F=x.y):(x=this.actions[B-1].args,o=x[x.length-2],F=x[x.length-1]);for(z=1;z<=E;z++){k=z/E,x=THREE.Shape.Utils.b2(k,o,p,y),k=THREE.Shape.Utils.b2(k,F,s,w),C.push(new THREE.Vector2(x,k))}break;case THREE.PathActions.BEZIER_CURVE_TO:y=z[4];w=z[5];p=z[0];s=z[1];v=z[2];u=z[3];0<C.length?(x=C[C.length-1],o=x.x,F=x.y):(x=this.actions[B-1].args,o=x[x.length-2],F=x[x.length-1]);for(z=1;z<=E;z++){k=z/E,x=THREE.Shape.Utils.b3(k,o,p,v,y),k=THREE.Shape.Utils.b3(k,F,s,u,w),C.push(new THREE.Vector2(x,k))}break;case THREE.PathActions.CSPLINE_THRU:x=this.actions[B-1].args;k=[new THREE.Vector2(x[x.length-2],x[x.length-1])];x=E*z[0].length;k=k.concat(z[0]);k=new THREE.SplineCurve(k);for(z=1;z<=x;z++){C.push(k.getPointAt(z/x))}break;case THREE.PathActions.ARC:y=z[0];w=z[1];s=z[2];v=z[3];x=z[4];p=!!z[5];o=x-v;F=2*E;for(z=1;z<=F;z++){k=z/F,p||(k=1-k),k=v+k*o,x=y+s*Math.cos(k),k=w+s*Math.sin(k),C.push(new THREE.Vector2(x,k))}break;case THREE.PathActions.ELLIPSE:y=z[0];w=z[1];s=z[2];u=z[3];v=z[4];x=z[5];p=!!z[6];o=x-v;F=2*E;for(z=1;z<=F;z++){k=z/F,p||(k=1-k),k=v+k*o,x=y+s*Math.cos(k),k=w+u*Math.sin(k),C.push(new THREE.Vector2(x,k))}}}B=C[C.length-1];1e-10>Math.abs(B.x-C[0].x)&&1e-10>Math.abs(B.y-C[0].y)&&C.splice(C.length-1,1);D&&C.push(C[0]);return C};THREE.Path.prototype.toShapes=function(){var i,g,n,m,l=[],k=new THREE.Path;i=0;for(g=this.actions.length;i<g;i++){n=this.actions[i],m=n.args,n=n.action,n==THREE.PathActions.MOVE_TO&&0!=k.actions.length&&(l.push(k),k=new THREE.Path),k[n].apply(k,m)}0!=k.actions.length&&l.push(k);if(0==l.length){return[]}var j;m=[];i=!THREE.Shape.Utils.isClockWise(l[0].getPoints());if(1==l.length){return k=l[0],j=new THREE.Shape,j.actions=k.actions,j.curves=k.curves,m.push(j),m}if(i){j=new THREE.Shape;i=0;for(g=l.length;i<g;i++){k=l[i],THREE.Shape.Utils.isClockWise(k.getPoints())?(j.actions=k.actions,j.curves=k.curves,m.push(j),j=new THREE.Shape):j.holes.push(k)}}else{i=0;for(g=l.length;i<g;i++){k=l[i],THREE.Shape.Utils.isClockWise(k.getPoints())?(j&&m.push(j),j=new THREE.Shape,j.actions=k.actions,j.curves=k.curves):j.holes.push(k)}m.push(j)}return m};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.extrude=function(b){return new THREE.ExtrudeGeometry(this,b)};THREE.Shape.prototype.makeGeometry=function(b){return new THREE.ShapeGeometry(this,b)};THREE.Shape.prototype.getPointsHoles=function(f){var e,h=this.holes.length,g=[];for(e=0;e<h;e++){g[e]=this.holes[e].getTransformedPoints(f,this.bends)}return g};THREE.Shape.prototype.getSpacedPointsHoles=function(f){var e,h=this.holes.length,g=[];for(e=0;e<h;e++){g[e]=this.holes[e].getTransformedSpacedPoints(f,this.bends)}return g};THREE.Shape.prototype.extractAllPoints=function(b){return{shape:this.getTransformedPoints(b),holes:this.getPointsHoles(b)}};THREE.Shape.prototype.extractPoints=function(b){return this.useSpacedPoints?this.extractAllSpacedPoints(b):this.extractAllPoints(b)};THREE.Shape.prototype.extractAllSpacedPoints=function(b){return{shape:this.getTransformedSpacedPoints(b),holes:this.getSpacedPointsHoles(b)}};THREE.Shape.Utils={removeHoles:function(G,F){var E=G.concat(),D=E.concat(),C,B,z,A,y,x,w,u,v,o,H=[];for(y=0;y<F.length;y++){x=F[y];Array.prototype.push.apply(D,x);B=Number.POSITIVE_INFINITY;for(C=0;C<x.length;C++){v=x[C];o=[];for(u=0;u<E.length;u++){w=E[u],w=v.distanceToSquared(w),o.push(w),w<B&&(B=w,z=C,A=u)}}C=0<=A-1?A-1:E.length-1;B=0<=z-1?z-1:x.length-1;var k=[x[z],E[A],E[C]];u=THREE.FontUtils.Triangulate.area(k);var s=[x[z],x[B],E[A]];v=THREE.FontUtils.Triangulate.area(s);o=A;w=z;A+=1;z+=-1;0>A&&(A+=E.length);A%=E.length;0>z&&(z+=x.length);z%=x.length;C=0<=A-1?A-1:E.length-1;B=0<=z-1?z-1:x.length-1;k=[x[z],E[A],E[C]];k=THREE.FontUtils.Triangulate.area(k);s=[x[z],x[B],E[A]];s=THREE.FontUtils.Triangulate.area(s);u+v>k+s&&(A=o,z=w,0>A&&(A+=E.length),A%=E.length,0>z&&(z+=x.length),z%=x.length,C=0<=A-1?A-1:E.length-1,B=0<=z-1?z-1:x.length-1);u=E.slice(0,A);v=E.slice(A);o=x.slice(z);w=x.slice(0,z);B=[x[z],x[B],E[A]];H.push([x[z],E[A],E[C]]);H.push(B);E=u.concat(o).concat(w).concat(v)}return{shape:E,isolatedPts:H,allpoints:D}},triangulateShape:function(t,s){var r=THREE.Shape.Utils.removeHoles(t,s),q=r.allpoints,p=r.isolatedPts,r=THREE.FontUtils.Triangulate(r.shape,!1),o,m,n,l,k={};o=0;for(m=q.length;o<m;o++){l=q[o].x+":"+q[o].y,void 0!==k[l]&&console.log("Duplicate point",l),k[l]=o}o=0;for(m=r.length;o<m;o++){n=r[o];for(q=0;3>q;q++){l=n[q].x+":"+n[q].y,l=k[l],void 0!==l&&(n[q]=l)}}o=0;for(m=p.length;o<m;o++){n=p[o];for(q=0;3>q;q++){l=n[q].x+":"+n[q].y,l=k[l],void 0!==l&&(n[q]=l)}}return r.concat(p)},isClockWise:function(b){return 0>THREE.FontUtils.Triangulate.area(b)},b2p0:function(e,d){var f=1-e;return f*f*d},b2p1:function(d,c){return 2*(1-d)*d*c},b2p2:function(d,c){return d*d*c},b2:function(f,e,h,g){return this.b2p0(f,e)+this.b2p1(f,h)+this.b2p2(f,g)},b3p0:function(e,d){var f=1-e;return f*f*f*d},b3p1:function(e,d){var f=1-e;return 3*f*f*e*d},b3p2:function(d,c){return 3*(1-d)*d*d*c},b3p3:function(d,c){return d*d*d*c},b3:function(g,f,j,i,h){return this.b3p0(g,f)+this.b3p1(g,j)+this.b3p2(g,i)+this.b3p3(g,h)}};THREE.LineCurve=function(d,c){this.v1=d;this.v2=c};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(d){var c=this.v2.clone().sub(this.v1);c.multiplyScalar(d).add(this.v1);return c};THREE.LineCurve.prototype.getPointAt=function(b){return this.getPoint(b)};THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()};THREE.QuadraticBezierCurve=function(e,d,f){this.v0=e;this.v1=d;this.v2=f};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.getPoint=function(d){var c;c=THREE.Shape.Utils.b2(d,this.v0.x,this.v1.x,this.v2.x);d=THREE.Shape.Utils.b2(d,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(c,d)};THREE.QuadraticBezierCurve.prototype.getTangent=function(d){var c;c=THREE.Curve.Utils.tangentQuadraticBezier(d,this.v0.x,this.v1.x,this.v2.x);d=THREE.Curve.Utils.tangentQuadraticBezier(d,this.v0.y,this.v1.y,this.v2.y);c=new THREE.Vector2(c,d);c.normalize();return c};THREE.CubicBezierCurve=function(f,e,h,g){this.v0=f;this.v1=e;this.v2=h;this.v3=g};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.getPoint=function(d){var c;c=THREE.Shape.Utils.b3(d,this.v0.x,this.v1.x,this.v2.x,this.v3.x);d=THREE.Shape.Utils.b3(d,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(c,d)};THREE.CubicBezierCurve.prototype.getTangent=function(d){var c;c=THREE.Curve.Utils.tangentCubicBezier(d,this.v0.x,this.v1.x,this.v2.x,this.v3.x);d=THREE.Curve.Utils.tangentCubicBezier(d,this.v0.y,this.v1.y,this.v2.y,this.v3.y);c=new THREE.Vector2(c,d);c.normalize();return c};THREE.SplineCurve=function(b){this.points=void 0==b?[]:b};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.getPoint=function(g){var f=new THREE.Vector2,j=[],i=this.points,h;h=(i.length-1)*g;g=Math.floor(h);h-=g;j[0]=0==g?g:g-1;j[1]=g;j[2]=g>i.length-2?i.length-1:g+1;j[3]=g>i.length-3?i.length-1:g+2;f.x=THREE.Curve.Utils.interpolate(i[j[0]].x,i[j[1]].x,i[j[2]].x,i[j[3]].x,h);f.y=THREE.Curve.Utils.interpolate(i[j[0]].y,i[j[1]].y,i[j[2]].y,i[j[3]].y,h);return f};THREE.EllipseCurve=function(i,g,n,m,l,k,j){this.aX=i;this.aY=g;this.xRadius=n;this.yRadius=m;this.aStartAngle=l;this.aEndAngle=k;this.aClockwise=j};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.getPoint=function(d){var c=this.aEndAngle-this.aStartAngle;this.aClockwise||(d=1-d);c=this.aStartAngle+d*c;d=this.aX+this.xRadius*Math.cos(c);c=this.aY+this.yRadius*Math.sin(c);return new THREE.Vector2(d,c)};THREE.ArcCurve=function(h,g,l,k,j,i){THREE.EllipseCurve.call(this,h,g,l,l,k,j,i)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);THREE.LineCurve3=THREE.Curve.create(function(d,c){this.v1=d;this.v2=c},function(d){var c=new THREE.Vector3;c.subVectors(this.v2,this.v1);c.multiplyScalar(d);c.add(this.v1);return c});THREE.QuadraticBezierCurve3=THREE.Curve.create(function(e,d,f){this.v0=e;this.v1=d;this.v2=f},function(e){var d,f;d=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x);f=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y);e=THREE.Shape.Utils.b2(e,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(d,f,e)});THREE.CubicBezierCurve3=THREE.Curve.create(function(f,e,h,g){this.v0=f;this.v1=e;this.v2=h;this.v3=g},function(e){var d,f;d=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x);f=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y);e=THREE.Shape.Utils.b3(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(d,f,e)});THREE.SplineCurve3=THREE.Curve.create(function(b){this.points=void 0==b?[]:b},function(i){var g=new THREE.Vector3,n=[],m=this.points,l,i=(m.length-1)*i;l=Math.floor(i);i-=l;n[0]=0==l?l:l-1;n[1]=l;n[2]=l>m.length-2?m.length-1:l+1;n[3]=l>m.length-3?m.length-1:l+2;l=m[n[0]];var k=m[n[1]],j=m[n[2]],n=m[n[3]];g.x=THREE.Curve.Utils.interpolate(l.x,k.x,j.x,n.x,i);g.y=THREE.Curve.Utils.interpolate(l.y,k.y,j.y,n.y,i);g.z=THREE.Curve.Utils.interpolate(l.z,k.z,j.z,n.z,i);return g});THREE.ClosedSplineCurve3=THREE.Curve.create(function(b){this.points=void 0==b?[]:b},function(g){var f=new THREE.Vector3,j=[],i=this.points,h;h=(i.length-0)*g;g=Math.floor(h);h-=g;g+=0<g?0:(Math.floor(Math.abs(g)/i.length)+1)*i.length;j[0]=(g-1)%i.length;j[1]=g%i.length;j[2]=(g+1)%i.length;j[3]=(g+2)%i.length;f.x=THREE.Curve.Utils.interpolate(i[j[0]].x,i[j[1]].x,i[j[2]].x,i[j[3]].x,h);f.y=THREE.Curve.Utils.interpolate(i[j[0]].y,i[j[1]].y,i[j[2]].y,i[j[3]].y,h);f.z=THREE.Curve.Utils.interpolate(i[j[0]].z,i[j[1]].z,i[j[2]].z,i[j[3]].z,h);return f});THREE.AnimationHandler=function(){var f=[],e={},h={update:function(a){for(var d=0;d<f.length;d++){f[d].update(a)}},addToUpdate:function(a){-1===f.indexOf(a)&&f.push(a)},removeFromUpdate:function(a){a=f.indexOf(a);-1!==a&&f.splice(a,1)},add:function(k){void 0!==e[k.name]&&console.log("THREE.AnimationHandler.add: Warning! "+k.name+" already exists in library. Overwriting.");e[k.name]=k;if(!0!==k.initialized){for(var q=0;q<k.hierarchy.length;q++){for(var p=0;p<k.hierarchy[q].keys.length;p++){if(0>k.hierarchy[q].keys[p].time&&(k.hierarchy[q].keys[p].time=0),void 0!==k.hierarchy[q].keys[p].rot&&!(k.hierarchy[q].keys[p].rot instanceof THREE.Quaternion)){var o=k.hierarchy[q].keys[p].rot;k.hierarchy[q].keys[p].rot=new THREE.Quaternion(o[0],o[1],o[2],o[3])}}if(k.hierarchy[q].keys.length&&void 0!==k.hierarchy[q].keys[0].morphTargets){o={};for(p=0;p<k.hierarchy[q].keys.length;p++){for(var n=0;n<k.hierarchy[q].keys[p].morphTargets.length;n++){var m=k.hierarchy[q].keys[p].morphTargets[n];o[m]=-1}}k.hierarchy[q].usedMorphTargets=o;for(p=0;p<k.hierarchy[q].keys.length;p++){var b={};for(m in o){for(n=0;n<k.hierarchy[q].keys[p].morphTargets.length;n++){if(k.hierarchy[q].keys[p].morphTargets[n]===m){b[m]=k.hierarchy[q].keys[p].morphTargetsInfluences[n];break}}n===k.hierarchy[q].keys[p].morphTargets.length&&(b[m]=0)}k.hierarchy[q].keys[p].morphTargetsInfluences=b}}for(p=1;p<k.hierarchy[q].keys.length;p++){k.hierarchy[q].keys[p].time===k.hierarchy[q].keys[p-1].time&&(k.hierarchy[q].keys.splice(p,1),p--)}for(p=0;p<k.hierarchy[q].keys.length;p++){k.hierarchy[q].keys[p].index=p}}p=parseInt(k.length*k.fps,10);k.JIT={};k.JIT.hierarchy=[];for(q=0;q<k.hierarchy.length;q++){k.JIT.hierarchy.push(Array(p))}k.initialized=!0}},get:function(b){if("string"===typeof b){if(e[b]){return e[b]}console.log("THREE.AnimationHandler.get: Couldn't find animation "+b);return null}},parse:function(i){var d=[];if(i instanceof THREE.SkinnedMesh){for(var j=0;j<i.bones.length;j++){d.push(i.bones[j])}}else{g(i,d)}return d}},g=function(i,d){d.push(i);for(var j=0;j<i.children.length;j++){g(i.children[j],d)}};h.LINEAR=0;h.CATMULLROM=1;h.CATMULLROM_FORWARD=2;return h}();THREE.Animation=function(e,d,f){this.root=e;this.data=THREE.AnimationHandler.get(d);this.hierarchy=THREE.AnimationHandler.parse(e);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=this.isPaused=!0;this.interpolationType=void 0!==f?f:THREE.AnimationHandler.LINEAR;this.points=[];this.target=new THREE.Vector3};THREE.Animation.prototype.play=function(h,g){if(!1===this.isPlaying){this.isPlaying=!0;this.loop=void 0!==h?h:!0;this.currentTime=void 0!==g?g:0;var l,k=this.hierarchy.length,j;for(l=0;l<k;l++){j=this.hierarchy[l];this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD&&(j.useQuaternion=!0);j.matrixAutoUpdate=!0;void 0===j.animationCache&&(j.animationCache={},j.animationCache.prevKey={pos:0,rot:0,scl:0},j.animationCache.nextKey={pos:0,rot:0,scl:0},j.animationCache.originalMatrix=j instanceof THREE.Bone?j.skinMatrix:j.matrix);var i=j.animationCache.prevKey;j=j.animationCache.nextKey;i.pos=this.data.hierarchy[l].keys[0];i.rot=this.data.hierarchy[l].keys[0];i.scl=this.data.hierarchy[l].keys[0];j.pos=this.getNextKeyWith("pos",l,1);j.rot=this.getNextKeyWith("rot",l,1);j.scl=this.getNextKeyWith("scl",l,1)}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this)};THREE.Animation.prototype.update=function(B){if(!1!==this.isPlaying){var A=["pos","rot","scl"],z,y,x,w,u,v,t,s,r;r=this.currentTime+=B*this.timeScale;s=this.currentTime%=this.data.length;parseInt(Math.min(s*this.data.fps,this.data.length*this.data.fps),10);for(var o=0,p=this.hierarchy.length;o<p;o++){B=this.hierarchy[o];t=B.animationCache;for(var k=0;3>k;k++){z=A[k];u=t.prevKey[z];v=t.nextKey[z];if(v.time<=r){if(s<r){if(this.loop){u=this.data.hierarchy[o].keys[0];for(v=this.getNextKeyWith(z,o,1);v.time<s;){u=v,v=this.getNextKeyWith(z,o,v.index+1)}}else{this.stop();return}}else{do{u=v,v=this.getNextKeyWith(z,o,v.index+1)}while(v.time<s)}t.prevKey[z]=u;t.nextKey[z]=v}B.matrixAutoUpdate=!0;B.matrixWorldNeedsUpdate=!0;y=(s-u.time)/(v.time-u.time);x=u[z];w=v[z];if(0>y||1<y){console.log("THREE.Animation.update: Warning! Scale out of bounds:"+y+" on bone "+o),y=0>y?0:1}if("pos"===z){if(z=B.position,this.interpolationType===THREE.AnimationHandler.LINEAR){z.x=x[0]+(w[0]-x[0])*y,z.y=x[1]+(w[1]-x[1])*y,z.z=x[2]+(w[2]-x[2])*y}else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){this.points[0]=this.getPrevKeyWith("pos",o,u.index-1).pos,this.points[1]=x,this.points[2]=w,this.points[3]=this.getNextKeyWith("pos",o,v.index+1).pos,y=0.33*y+0.33,x=this.interpolateCatmullRom(this.points,y),z.x=x[0],z.y=x[1],z.z=x[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(y=this.interpolateCatmullRom(this.points,1.01*y),this.target.set(y[0],y[1],y[2]),this.target.sub(z),this.target.y=0,this.target.normalize(),y=Math.atan2(this.target.x,this.target.z),B.rotation.set(0,y,0))}}}else{"rot"===z?THREE.Quaternion.slerp(x,w,B.quaternion,y):"scl"===z&&(z=B.scale,z.x=x[0]+(w[0]-x[0])*y,z.y=x[1]+(w[1]-x[1])*y,z.z=x[2]+(w[2]-x[2])*y)}}}}};THREE.Animation.prototype.interpolateCatmullRom=function(t,s){var r=[],q=[],p,o,m,n,l,k;p=(t.length-1)*s;o=Math.floor(p);p-=o;r[0]=0===o?o:o-1;r[1]=o;r[2]=o>t.length-2?o:o+1;r[3]=o>t.length-3?o:o+2;o=t[r[0]];n=t[r[1]];l=t[r[2]];k=t[r[3]];r=p*p;m=p*r;q[0]=this.interpolate(o[0],n[0],l[0],k[0],p,r,m);q[1]=this.interpolate(o[1],n[1],l[1],k[1],p,r,m);q[2]=this.interpolate(o[2],n[2],l[2],k[2],p,r,m);return q};THREE.Animation.prototype.interpolate=function(i,g,n,m,l,k,j){i=0.5*(n-i);m=0.5*(m-g);return(2*(g-n)+i+m)*j+(-3*(g-n)-2*i-m)*k+i*l+g};THREE.Animation.prototype.getNextKeyWith=function(f,e,h){for(var g=this.data.hierarchy[e].keys,h=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?h<g.length-1?h:g.length-1:h%g.length;h<g.length;h++){if(void 0!==g[h][f]){return g[h]}}return this.data.hierarchy[e].keys[0]};THREE.Animation.prototype.getPrevKeyWith=function(f,e,h){for(var g=this.data.hierarchy[e].keys,h=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<h?h:0:0<=h?h:h+g.length;0<=h;h--){if(void 0!==g[h][f]){return g[h]}}return this.data.hierarchy[e].keys[g.length-1]};THREE.KeyFrameAnimation=function(i,g,n){this.root=i;this.data=THREE.AnimationHandler.get(g);this.hierarchy=THREE.AnimationHandler.parse(i);this.currentTime=0;this.timeScale=0.001;this.isPlaying=!1;this.loop=this.isPaused=!0;this.JITCompile=void 0!==n?n:!0;i=0;for(g=this.hierarchy.length;i<g;i++){var n=this.data.hierarchy[i].sids,m=this.hierarchy[i];if(this.data.hierarchy[i].keys.length&&n){for(var l=0;l<n.length;l++){var k=n[l],j=this.getNextKeyWith(k,i,0);j&&j.apply(k)}m.matrixAutoUpdate=!1;this.data.hierarchy[i].node.updateMatrix();m.matrixWorldNeedsUpdate=!0}}};THREE.KeyFrameAnimation.prototype.play=function(h,g){if(!this.isPlaying){this.isPlaying=!0;this.loop=void 0!==h?h:!0;this.currentTime=void 0!==g?g:0;this.startTimeMs=g;this.startTime=10000000;this.endTime=-this.startTime;var l,k=this.hierarchy.length,j,i;for(l=0;l<k;l++){j=this.hierarchy[l],i=this.data.hierarchy[l],j.useQuaternion=!0,void 0===i.animationCache&&(i.animationCache={},i.animationCache.prevKey=null,i.animationCache.nextKey=null,i.animationCache.originalMatrix=j instanceof THREE.Bone?j.skinMatrix:j.matrix),j=this.data.hierarchy[l].keys,j.length&&(i.animationCache.prevKey=j[0],i.animationCache.nextKey=j[1],this.startTime=Math.min(j[0].time,this.startTime),this.endTime=Math.max(j[j.length-1].time,this.endTime))}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var f=0;f<this.data.hierarchy.length;f++){var e=this.hierarchy[f],h=this.data.hierarchy[f];if(void 0!==h.animationCache){var g=h.animationCache.originalMatrix;e instanceof THREE.Bone?(g.copy(e.skinMatrix),e.skinMatrix=g):(g.copy(e.matrix),e.matrix=g);delete h.animationCache}}};THREE.KeyFrameAnimation.prototype.update=function(z){if(this.isPlaying){var y,x,w,v,u=this.data.JIT.hierarchy,s,t,r;t=this.currentTime+=z*this.timeScale;s=this.currentTime%=this.data.length;s<this.startTimeMs&&(s=this.currentTime=this.startTimeMs+s);v=parseInt(Math.min(s*this.data.fps,this.data.length*this.data.fps),10);if((r=s<t)&&!this.loop){for(var z=0,q=this.hierarchy.length;z<q;z++){var p=this.data.hierarchy[z].keys,u=this.data.hierarchy[z].sids;w=p.length-1;v=this.hierarchy[z];if(p.length){for(p=0;p<u.length;p++){s=u[p],(t=this.getPrevKeyWith(s,z,w))&&t.apply(s)}this.data.hierarchy[z].node.updateMatrix();v.matrixWorldNeedsUpdate=!0}}this.stop()}else{if(!(s<this.startTime)){z=0;for(q=this.hierarchy.length;z<q;z++){w=this.hierarchy[z];y=this.data.hierarchy[z];var p=y.keys,k=y.animationCache;if(this.JITCompile&&void 0!==u[z][v]){w instanceof THREE.Bone?(w.skinMatrix=u[z][v],w.matrixWorldNeedsUpdate=!1):(w.matrix=u[z][v],w.matrixWorldNeedsUpdate=!0)}else{if(p.length){this.JITCompile&&k&&(w instanceof THREE.Bone?w.skinMatrix=k.originalMatrix:w.matrix=k.originalMatrix);y=k.prevKey;x=k.nextKey;if(y&&x){if(x.time<=t){if(r&&this.loop){y=p[0];for(x=p[1];x.time<s;){y=x,x=p[y.index+1]}}else{if(!r){for(var o=p.length-1;x.time<s&&x.index!==o;){y=x,x=p[y.index+1]}}}k.prevKey=y;k.nextKey=x}x.time>=s?y.interpolate(x,s):y.interpolate(x,x.time)}this.data.hierarchy[z].node.updateMatrix();w.matrixWorldNeedsUpdate=!0}}}if(this.JITCompile&&void 0===u[0][v]){this.hierarchy[0].updateMatrixWorld(!0);for(z=0;z<this.hierarchy.length;z++){u[z][v]=this.hierarchy[z] instanceof THREE.Bone?this.hierarchy[z].skinMatrix.clone():this.hierarchy[z].matrix.clone()}}}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(e,d,f){d=this.data.hierarchy[d].keys;for(f%=d.length;f<d.length;f++){if(d[f].hasTarget(e)){return d[f]}}return d[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(e,d,f){d=this.data.hierarchy[d].keys;for(f=0<=f?f:f+d.length;0<=f;f--){if(d[f].hasTarget(e)){return d[f]}}return d[d.length-1]};THREE.CubeCamera=function(r,q,p){THREE.Object3D.call(this);var o=new THREE.PerspectiveCamera(90,1,r,q);o.up.set(0,-1,0);o.lookAt(new THREE.Vector3(1,0,0));this.add(o);var n=new THREE.PerspectiveCamera(90,1,r,q);n.up.set(0,-1,0);n.lookAt(new THREE.Vector3(-1,0,0));this.add(n);var m=new THREE.PerspectiveCamera(90,1,r,q);m.up.set(0,0,1);m.lookAt(new THREE.Vector3(0,1,0));this.add(m);var k=new THREE.PerspectiveCamera(90,1,r,q);k.up.set(0,0,-1);k.lookAt(new THREE.Vector3(0,-1,0));this.add(k);var l=new THREE.PerspectiveCamera(90,1,r,q);l.up.set(0,-1,0);l.lookAt(new THREE.Vector3(0,0,1));this.add(l);var j=new THREE.PerspectiveCamera(90,1,r,q);j.up.set(0,-1,0);j.lookAt(new THREE.Vector3(0,0,-1));this.add(j);this.renderTarget=new THREE.WebGLRenderTargetCube(p,p,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(f,e){var g=this.renderTarget,d=g.generateMipmaps;g.generateMipmaps=!1;g.activeCubeFace=0;f.render(e,o,g);g.activeCubeFace=1;f.render(e,n,g);g.activeCubeFace=2;f.render(e,m,g);g.activeCubeFace=3;f.render(e,k,g);g.activeCubeFace=4;f.render(e,l,g);g.generateMipmaps=d;g.activeCubeFace=5;f.render(e,j,g)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CombinedCamera=function(i,g,n,m,l,k,j){THREE.Camera.call(this);this.fov=n;this.left=-i/2;this.right=i/2;this.top=g/2;this.bottom=-g/2;this.cameraO=new THREE.OrthographicCamera(i/-2,i/2,g/2,g/-2,k,j);this.cameraP=new THREE.PerspectiveCamera(n,i/g,m,l);this.zoom=1;this.toPerspective()};THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype);THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPerspectiveMode=!0;this.inOrthographicMode=!1};THREE.CombinedCamera.prototype.toOrthographic=function(){var d=this.cameraP.aspect,c=(this.cameraP.near+this.cameraP.far)/2,c=Math.tan(this.fov/2)*c,d=2*c*d/2,c=c/this.zoom,d=d/this.zoom;this.cameraO.left=-d;this.cameraO.right=d;this.cameraO.top=c;this.cameraO.bottom=-c;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPerspectiveMode=!1;this.inOrthographicMode=!0};THREE.CombinedCamera.prototype.setSize=function(d,c){this.cameraP.aspect=d/c;this.left=-d/2;this.right=d/2;this.top=c/2;this.bottom=-c/2};THREE.CombinedCamera.prototype.setFov=function(b){this.fov=b;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())};THREE.CombinedCamera.prototype.setLens=function(e,d){void 0===d&&(d=24);var f=2*THREE.Math.radToDeg(Math.atan(d/(2*e)));this.setFov(f);return f};THREE.CombinedCamera.prototype.setZoom=function(b){this.zoom=b;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CircleGeometry=function(r,q,p,o){THREE.Geometry.call(this);var r=r||50,p=void 0!==p?p:0,o=void 0!==o?o:2*Math.PI,q=void 0!==q?Math.max(3,q):8,n,m=[];n=new THREE.Vector3;var k=new THREE.Vector2(0.5,0.5);this.vertices.push(n);m.push(k);for(n=0;n<=q;n++){var l=new THREE.Vector3,j=p+n/q*o;l.x=r*Math.cos(j);l.y=r*Math.sin(j);this.vertices.push(l);m.push(new THREE.Vector2((l.x/r+1)/2,(l.y/r+1)/2))}p=new THREE.Vector3(0,0,1);for(n=1;n<=q;n++){this.faces.push(new THREE.Face3(n,n+1,0,[p,p,p])),this.faceVertexUvs[0].push([m[n],m[n+1],k])}this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,r)};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CubeGeometry=function(j,i,p,o,n,m){function k(U,T,S,R,Q,P,O,J){var N,D=l.widthSegments,x=l.heightSegments,q=Q/2,w=P/2,u=l.vertices.length;if("x"===U&&"y"===T||"y"===U&&"x"===T){N="z"}else{if("x"===U&&"z"===T||"z"===U&&"x"===T){N="y",x=l.depthSegments}else{if("z"===U&&"y"===T||"y"===U&&"z"===T){N="x",D=l.depthSegments}}}var t=D+1,z=x+1,M=Q/D,K=P/x,g=new THREE.Vector3;g[N]=0<O?1:-1;for(Q=0;Q<z;Q++){for(P=0;P<t;P++){var E=new THREE.Vector3;E[U]=(P*M-q)*S;E[T]=(Q*K-w)*R;E[N]=O;l.vertices.push(E)}}for(Q=0;Q<x;Q++){for(P=0;P<D;P++){U=new THREE.Face4(P+t*Q+u,P+t*(Q+1)+u,P+1+t*(Q+1)+u,P+1+t*Q+u),U.normal.copy(g),U.vertexNormals.push(g.clone(),g.clone(),g.clone(),g.clone()),U.materialIndex=J,l.faces.push(U),l.faceVertexUvs[0].push([new THREE.Vector2(P/D,1-Q/x),new THREE.Vector2(P/D,1-(Q+1)/x),new THREE.Vector2((P+1)/D,1-(Q+1)/x),new THREE.Vector2((P+1)/D,1-Q/x)])}}}THREE.Geometry.call(this);var l=this;this.width=j;this.height=i;this.depth=p;this.widthSegments=o||1;this.heightSegments=n||1;this.depthSegments=m||1;j=this.width/2;i=this.height/2;p=this.depth/2;k("z","y",-1,-1,this.depth,this.height,j,0);k("z","y",1,-1,this.depth,this.height,-j,1);k("x","z",1,1,this.width,this.depth,i,2);k("x","z",1,-1,this.width,this.depth,-i,3);k("x","y",1,-1,this.width,this.height,p,4);k("x","y",-1,-1,this.width,this.height,-p,5);this.computeCentroids();this.mergeVertices()};THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CylinderGeometry=function(X,W,V,U,T,S){THREE.Geometry.call(this);this.radiusTop=X=void 0!==X?X:20;this.radiusBottom=W=void 0!==W?W:20;this.height=V=void 0!==V?V:100;this.radiusSegments=U=U||8;this.heightSegments=T=T||1;this.openEnded=S=void 0!==S?S:!1;var Q=V/2,R,P,O=[],N=[];for(P=0;P<=T;P++){var L=[],M=[],E=P/T,B=E*(W-X)+X;for(R=0;R<=U;R++){var D=R/U,K=new THREE.Vector3;K.x=B*Math.sin(2*D*Math.PI);K.y=-E*V+Q;K.z=B*Math.cos(2*D*Math.PI);this.vertices.push(K);L.push(this.vertices.length-1);M.push(new THREE.Vector2(D,1-E))}O.push(L);N.push(M)}V=(W-X)/V;for(R=0;R<U;R++){0!==X?(L=this.vertices[O[0][R]].clone(),M=this.vertices[O[0][R+1]].clone()):(L=this.vertices[O[1][R]].clone(),M=this.vertices[O[1][R+1]].clone());L.setY(Math.sqrt(L.x*L.x+L.z*L.z)*V).normalize();M.setY(Math.sqrt(M.x*M.x+M.z*M.z)*V).normalize();for(P=0;P<T;P++){var E=O[P][R],B=O[P+1][R],D=O[P+1][R+1],K=O[P][R+1],C=L.clone(),x=L.clone(),k=M.clone(),w=M.clone(),u=N[P][R].clone(),o=N[P+1][R].clone(),z=N[P+1][R+1].clone(),J=N[P][R+1].clone();this.faces.push(new THREE.Face4(E,B,D,K,[C,x,k,w]));this.faceVertexUvs[0].push([u,o,z,J])}}if(!1===S&&0<X){this.vertices.push(new THREE.Vector3(0,Q,0));for(R=0;R<U;R++){E=O[0][R],B=O[0][R+1],D=this.vertices.length-1,C=new THREE.Vector3(0,1,0),x=new THREE.Vector3(0,1,0),k=new THREE.Vector3(0,1,0),u=N[0][R].clone(),o=N[0][R+1].clone(),z=new THREE.Vector2(o.u,0),this.faces.push(new THREE.Face3(E,B,D,[C,x,k])),this.faceVertexUvs[0].push([u,o,z])}}if(!1===S&&0<W){this.vertices.push(new THREE.Vector3(0,-Q,0));for(R=0;R<U;R++){E=O[P][R+1],B=O[P][R],D=this.vertices.length-1,C=new THREE.Vector3(0,-1,0),x=new THREE.Vector3(0,-1,0),k=new THREE.Vector3(0,-1,0),u=N[P][R+1].clone(),o=N[P][R].clone(),z=new THREE.Vector2(o.u,1),this.faces.push(new THREE.Face3(E,B,D,[C,x,k])),this.faceVertexUvs[0].push([u,o,z])}}this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry=function(d,c){"undefined"!==typeof d&&(THREE.Geometry.call(this),d=d instanceof Array?d:[d],this.shapebb=d[d.length-1].getBoundingBox(),this.addShapeList(d,c),this.computeCentroids(),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(f,e){for(var h=f.length,g=0;g<h;g++){this.addShape(f[g],e)}};THREE.ExtrudeGeometry.prototype.addShape=function(aC,aB){function aA(e,d,f){d||console.log("die");return d.clone().multiplyScalar(f).add(e)}function az(t,s,r){var q=THREE.ExtrudeGeometry.__v1,p=THREE.ExtrudeGeometry.__v2,n=THREE.ExtrudeGeometry.__v3,m=THREE.ExtrudeGeometry.__v4,l=THREE.ExtrudeGeometry.__v5,j=THREE.ExtrudeGeometry.__v6;q.set(t.x-s.x,t.y-s.y);p.set(t.x-r.x,t.y-r.y);q=q.normalize();p=p.normalize();n.set(-q.y,q.x);m.set(p.y,-p.x);l.copy(t).add(n);j.copy(t).add(m);if(l.equals(j)){return m.clone()}l.copy(s).add(n);j.copy(r).add(m);n=q.dot(m);m=j.sub(l).dot(m);0===n&&(console.log("Either infinite or no solutions!"),0===m?console.log("Its finite solutions."):console.log("Too bad, no solutions."));m/=n;return 0>m?(s=Math.atan2(s.y-t.y,s.x-t.x),t=Math.atan2(r.y-t.y,r.x-t.x),s>t&&(t+=2*Math.PI),r=(s+t)/2,t=-Math.cos(r),r=-Math.sin(r),new THREE.Vector2(t,r)):q.multiplyScalar(m).add(l).sub(t).clone()}function ay(F,D){var C,B;for(E=F.length;0<=--E;){C=E;B=E-1;0>B&&(B=F.length-1);for(var A=0,z=al+2*ap,A=0;A<z;A++){var y=ag*A,v=ag*(A+1),l=D+C+y,y=D+B+y,q=D+B+v,v=D+C+v,b=F,I=A,a=z,H=C,G=B,l=l+T,y=y+T,q=q+T,v=v+T;aa.faces.push(new THREE.Face4(l,y,q,v,null,null,ah));l=ae.generateSideWallUV(aa,aC,b,aB,l,y,q,v,I,a,H,G);aa.faceVertexUvs[0].push(l)}}}function ax(e,d,f){aa.vertices.push(new THREE.Vector3(e,d,f))}function au(h,g,b,a){h+=T;g+=T;b+=T;aa.faces.push(new THREE.Face3(h,g,b,null,null,aj));h=a?ae.generateBottomUV(aa,aC,aB,h,g,b):ae.generateTopUV(aa,aC,aB,h,g,b);aa.faceVertexUvs[0].push(h)}var aw=void 0!==aB.amount?aB.amount:100,at=void 0!==aB.bevelThickness?aB.bevelThickness:6,ar=void 0!==aB.bevelSize?aB.bevelSize:at-2,ap=void 0!==aB.bevelSegments?aB.bevelSegments:3,an=void 0!==aB.bevelEnabled?aB.bevelEnabled:!0,ao=void 0!==aB.curveSegments?aB.curveSegments:12,al=void 0!==aB.steps?aB.steps:1,ai=aB.extrudePath,ak,am=!1,aj=aB.material,ah=aB.extrudeMaterial,ae=void 0!==aB.UVGenerator?aB.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,W,V,U,X;ai&&(ak=ai.getSpacedPoints(al),am=!0,an=!1,W=void 0!==aB.frames?aB.frames:new THREE.TubeGeometry.FrenetFrames(ai,al,!1),V=new THREE.Vector3,U=new THREE.Vector3,X=new THREE.Vector3);an||(ar=at=ap=0);var ac,ab,R,aa=this,T=this.vertices.length,ao=aC.extractPoints(ao),P=ao.shape,ao=ao.holes;if(ai=!THREE.Shape.Utils.isClockWise(P)){P=P.reverse();ab=0;for(R=ao.length;ab<R;ab++){ac=ao[ab],THREE.Shape.Utils.isClockWise(ac)&&(ao[ab]=ac.reverse())}ai=!1}var ad=THREE.Shape.Utils.triangulateShape(P,ao),ai=P;ab=0;for(R=ao.length;ab<R;ab++){ac=ao[ab],P=P.concat(ac)}var Q,af,k,S,ag=P.length,aq=ad.length,av=[],E=0,o=ai.length;Q=o-1;for(af=E+1;E<o;E++,Q++,af++){Q===o&&(Q=0),af===o&&(af=0),av[E]=az(ai[E],ai[Q],ai[af])}var u=[],x,Y=av.concat();ab=0;for(R=ao.length;ab<R;ab++){ac=ao[ab];x=[];E=0;o=ac.length;Q=o-1;for(af=E+1;E<o;E++,Q++,af++){Q===o&&(Q=0),af===o&&(af=0),x[E]=az(ac[E],ac[Q],ac[af])}u.push(x);Y=Y.concat(x)}for(Q=0;Q<ap;Q++){ac=Q/ap;k=at*(1-ac);af=ar*Math.sin(ac*Math.PI/2);E=0;for(o=ai.length;E<o;E++){S=aA(ai[E],av[E],af),ax(S.x,S.y,-k)}ab=0;for(R=ao.length;ab<R;ab++){ac=ao[ab];x=u[ab];E=0;for(o=ac.length;E<o;E++){S=aA(ac[E],x[E],af),ax(S.x,S.y,-k)}}}af=ar;for(E=0;E<ag;E++){S=an?aA(P[E],Y[E],af):P[E],am?(U.copy(W.normals[0]).multiplyScalar(S.x),V.copy(W.binormals[0]).multiplyScalar(S.y),X.copy(ak[0]).add(U).add(V),ax(X.x,X.y,X.z)):ax(S.x,S.y,0)}for(ac=1;ac<=al;ac++){for(E=0;E<ag;E++){S=an?aA(P[E],Y[E],af):P[E],am?(U.copy(W.normals[ac]).multiplyScalar(S.x),V.copy(W.binormals[ac]).multiplyScalar(S.y),X.copy(ak[ac]).add(U).add(V),ax(X.x,X.y,X.z)):ax(S.x,S.y,aw/al*ac)}}for(Q=ap-1;0<=Q;Q--){ac=Q/ap;k=at*(1-ac);af=ar*Math.sin(ac*Math.PI/2);E=0;for(o=ai.length;E<o;E++){S=aA(ai[E],av[E],af),ax(S.x,S.y,aw+k)}ab=0;for(R=ao.length;ab<R;ab++){ac=ao[ab];x=u[ab];E=0;for(o=ac.length;E<o;E++){S=aA(ac[E],x[E],af),am?ax(S.x,S.y+ak[al-1].y,ak[al-1].x+k):ax(S.x,S.y,aw+k)}}}if(an){at=0*ag;for(E=0;E<aq;E++){aw=ad[E],au(aw[2]+at,aw[1]+at,aw[0]+at,!0)}at=ag*(al+2*ap);for(E=0;E<aq;E++){aw=ad[E],au(aw[0]+at,aw[1]+at,aw[2]+at,!1)}}else{for(E=0;E<aq;E++){aw=ad[E],au(aw[2],aw[1],aw[0],!0)}for(E=0;E<aq;E++){aw=ad[E],au(aw[0]+ag*al,aw[1]+ag*al,aw[2]+ag*al,!1)}}aw=0;ay(ai,aw);aw+=ai.length;ab=0;for(R=ao.length;ab<R;ab++){ac=ao[ab],ay(ac,aw),aw+=ac.length}};THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(h,g,l,k,j,i){g=h.vertices[j].x;j=h.vertices[j].y;l=h.vertices[i].x;i=h.vertices[i].y;return[new THREE.Vector2(h.vertices[k].x,h.vertices[k].y),new THREE.Vector2(g,j),new THREE.Vector2(l,i)]},generateBottomUV:function(h,g,l,k,j,i){return this.generateTopUV(h,g,l,k,j,i)},generateSideWallUV:function(z,y,x,w,v,u,s,t){var y=z.vertices[v].x,x=z.vertices[v].y,v=z.vertices[v].z,w=z.vertices[u].x,r=z.vertices[u].y,u=z.vertices[u].z,q=z.vertices[s].x,p=z.vertices[s].y,s=z.vertices[s].z,k=z.vertices[t].x,o=z.vertices[t].y,z=z.vertices[t].z;return 0.01>Math.abs(x-r)?[new THREE.Vector2(y,1-v),new THREE.Vector2(w,1-u),new THREE.Vector2(q,1-s),new THREE.Vector2(k,1-z)]:[new THREE.Vector2(x,1-v),new THREE.Vector2(r,1-u),new THREE.Vector2(p,1-s),new THREE.Vector2(o,1-z)]}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;THREE.ExtrudeGeometry.__v5=new THREE.Vector2;THREE.ExtrudeGeometry.__v6=new THREE.Vector2;THREE.ShapeGeometry=function(d,c){THREE.Geometry.call(this);!1===d instanceof Array&&(d=[d]);this.shapebb=d[d.length-1].getBoundingBox();this.addShapeList(d,c);this.computeCentroids();this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(f,e){for(var h=0,g=f.length;h<g;h++){this.addShape(f[h],e)}return this};THREE.ShapeGeometry.prototype.addShape=function(v,u){void 0===u&&(u={});var t=u.material,s=void 0===u.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:u.UVGenerator,r,q,o,p=this.vertices.length;r=v.extractPoints(void 0!==u.curveSegments?u.curveSegments:12);var n=r.shape,m=r.holes;if(!THREE.Shape.Utils.isClockWise(n)){n=n.reverse();r=0;for(q=m.length;r<q;r++){o=m[r],THREE.Shape.Utils.isClockWise(o)&&(m[r]=o.reverse())}}var k=THREE.Shape.Utils.triangulateShape(n,m);r=0;for(q=m.length;r<q;r++){o=m[r],n=n.concat(o)}m=n.length;q=k.length;for(r=0;r<m;r++){o=n[r],this.vertices.push(new THREE.Vector3(o.x,o.y,0))}for(r=0;r<q;r++){m=k[r],n=m[0]+p,o=m[1]+p,m=m[2]+p,this.faces.push(new THREE.Face3(n,o,m,null,null,t)),this.faceVertexUvs[0].push(s.generateBottomUV(this,v,u,n,o,m))}};THREE.LatheGeometry=function(B,A,z,y){THREE.Geometry.call(this);for(var A=A||12,z=z||0,y=y||2*Math.PI,x=1/(B.length-1),w=1/A,u=0,v=A;u<=v;u++){for(var t=z+u*w*y,s=Math.cos(t),r=Math.sin(t),t=0,o=B.length;t<o;t++){var p=B[t],k=new THREE.Vector3;k.x=s*p.x-r*p.y;k.y=r*p.x+s*p.y;k.z=p.z;this.vertices.push(k)}}z=B.length;u=0;for(v=A;u<v;u++){t=0;for(o=B.length-1;t<o;t++){y=A=t+z*u,r=A+z,s=A+1+z,this.faces.push(new THREE.Face4(y,r,s,A+1)),s=u*w,A=t*x,y=s+w,r=A+x,this.faceVertexUvs[0].push([new THREE.Vector2(s,A),new THREE.Vector2(y,A),new THREE.Vector2(y,r),new THREE.Vector2(s,r)])}}this.mergeVertices();this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry=function(v,u,t,s){THREE.Geometry.call(this);this.width=v;this.height=u;this.widthSegments=t||1;this.heightSegments=s||1;for(var t=v/2,r=u/2,s=this.widthSegments,q=this.heightSegments,o=s+1,p=q+1,n=this.width/s,m=this.height/q,k=new THREE.Vector3(0,0,1),v=0;v<p;v++){for(u=0;u<o;u++){this.vertices.push(new THREE.Vector3(u*n-t,-(v*m-r),0))}}for(v=0;v<q;v++){for(u=0;u<s;u++){t=new THREE.Face4(u+o*v,u+o*(v+1),u+1+o*(v+1),u+1+o*v),t.normal.copy(k),t.vertexNormals.push(k.clone(),k.clone(),k.clone(),k.clone()),this.faces.push(t),this.faceVertexUvs[0].push([new THREE.Vector2(u/s,1-v/q),new THREE.Vector2(u/s,1-(v+1)/q),new THREE.Vector2((u+1)/s,1-(v+1)/q),new THREE.Vector2((u+1)/s,1-v/q)])}}this.computeCentroids()};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.RingGeometry=function(x,w,v,u,t,s){THREE.Geometry.call(this);for(var x=x||0,w=w||50,t=void 0!==t?t:0,s=void 0!==s?s:2*Math.PI,v=void 0!==v?Math.max(3,v):8,u=void 0!==u?Math.max(3,u):8,q=[],r=x,p=(w-x)/u,x=0;x<=u;x++){for(w=0;w<=v;w++){var o=new THREE.Vector3,m=t+w/v*s;o.x=r*Math.cos(m);o.y=r*Math.sin(m);this.vertices.push(o);q.push(new THREE.Vector2((o.x/r+1)/2,-(o.y/r+1)/2+1))}r+=p}t=new THREE.Vector3(0,0,1);for(x=0;x<u;x++){s=x*v;for(w=0;w<=v;w++){var m=w+s,p=m+x,o=m+v+x,k=m+v+1+x;this.faces.push(new THREE.Face3(p,o,k,[t,t,t]));this.faceVertexUvs[0].push([q[p],q[o],q[k]]);p=m+x;o=m+v+1+x;k=m+1+x;this.faces.push(new THREE.Face3(p,o,k,[t,t,t]));this.faceVertexUvs[0].push([q[p],q[o],q[k]])}}this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,r)};THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.SphereGeometry=function(G,F,E,D,C,B,z){THREE.Geometry.call(this);this.radius=G=G||50;this.widthSegments=F=Math.max(3,Math.floor(F)||8);this.heightSegments=E=Math.max(2,Math.floor(E)||6);this.phiStart=D=void 0!==D?D:0;this.phiLength=C=void 0!==C?C:2*Math.PI;this.thetaStart=B=void 0!==B?B:0;this.thetaLength=z=void 0!==z?z:Math.PI;var A,y,x=[],w=[];for(y=0;y<=E;y++){var u=[],v=[];for(A=0;A<=F;A++){var o=A/F,H=y/E,k=new THREE.Vector3;k.x=-G*Math.cos(D+o*C)*Math.sin(B+H*z);k.y=G*Math.cos(B+H*z);k.z=G*Math.sin(D+o*C)*Math.sin(B+H*z);this.vertices.push(k);u.push(this.vertices.length-1);v.push(new THREE.Vector2(o,1-H))}x.push(u);w.push(v)}for(y=0;y<this.heightSegments;y++){for(A=0;A<this.widthSegments;A++){var F=x[y][A+1],E=x[y][A],D=x[y+1][A],C=x[y+1][A+1],B=this.vertices[F].clone().normalize(),z=this.vertices[E].clone().normalize(),u=this.vertices[D].clone().normalize(),v=this.vertices[C].clone().normalize(),o=w[y][A+1].clone(),H=w[y][A].clone(),k=w[y+1][A].clone(),s=w[y+1][A+1].clone();Math.abs(this.vertices[F].y)===this.radius?(this.faces.push(new THREE.Face3(F,D,C,[B,u,v])),this.faceVertexUvs[0].push([o,k,s])):Math.abs(this.vertices[D].y)===this.radius?(this.faces.push(new THREE.Face3(F,E,D,[B,z,u])),this.faceVertexUvs[0].push([o,H,k])):(this.faces.push(new THREE.Face4(F,E,D,C,[B,z,u,v])),this.faceVertexUvs[0].push([o,H,k,s]))}}this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,G)};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TextGeometry=function(e,d){var d=d||{},f=THREE.FontUtils.generateShapes(e,d);d.amount=void 0!==d.height?d.height:50;void 0===d.bevelThickness&&(d.bevelThickness=10);void 0===d.bevelSize&&(d.bevelSize=8);void 0===d.bevelEnabled&&(d.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,f,d)};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);THREE.TorusGeometry=function(r,q,p,o,n){THREE.Geometry.call(this);this.radius=r||100;this.tube=q||40;this.radialSegments=p||8;this.tubularSegments=o||6;this.arc=n||2*Math.PI;n=new THREE.Vector3;r=[];q=[];for(p=0;p<=this.radialSegments;p++){for(o=0;o<=this.tubularSegments;o++){var m=o/this.tubularSegments*this.arc,k=2*p/this.radialSegments*Math.PI;n.x=this.radius*Math.cos(m);n.y=this.radius*Math.sin(m);var l=new THREE.Vector3;l.x=(this.radius+this.tube*Math.cos(k))*Math.cos(m);l.y=(this.radius+this.tube*Math.cos(k))*Math.sin(m);l.z=this.tube*Math.sin(k);this.vertices.push(l);r.push(new THREE.Vector2(o/this.tubularSegments,p/this.radialSegments));q.push(l.clone().sub(n).normalize())}}for(p=1;p<=this.radialSegments;p++){for(o=1;o<=this.tubularSegments;o++){var n=(this.tubularSegments+1)*p+o-1,m=(this.tubularSegments+1)*(p-1)+o-1,k=(this.tubularSegments+1)*(p-1)+o,l=(this.tubularSegments+1)*p+o,j=new THREE.Face4(n,m,k,l,[q[n],q[m],q[k],q[l]]);j.normal.add(q[n]);j.normal.add(q[m]);j.normal.add(q[k]);j.normal.add(q[l]);j.normal.normalize();this.faces.push(j);this.faceVertexUvs[0].push([r[n].clone(),r[m].clone(),r[k].clone(),r[l].clone()])}}this.computeCentroids()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusKnotGeometry=function(v,u,t,s,r,q,o){function p(i,h,y,x,w,l){var j=Math.cos(i);Math.cos(h);h=Math.sin(i);i*=y/x;y=Math.cos(i);j*=0.5*w*(2+y);h=0.5*w*(2+y)*h;w=0.5*l*w*Math.sin(i);return new THREE.Vector3(j,h,w)}THREE.Geometry.call(this);this.radius=v||100;this.tube=u||40;this.radialSegments=t||64;this.tubularSegments=s||8;this.p=r||2;this.q=q||3;this.heightScale=o||1;this.grid=Array(this.radialSegments);t=new THREE.Vector3;s=new THREE.Vector3;r=new THREE.Vector3;for(v=0;v<this.radialSegments;++v){this.grid[v]=Array(this.tubularSegments);for(u=0;u<this.tubularSegments;++u){var n=2*(v/this.radialSegments)*this.p*Math.PI,o=2*(u/this.tubularSegments)*Math.PI,q=p(n,o,this.q,this.p,this.radius,this.heightScale),n=p(n+0.01,o,this.q,this.p,this.radius,this.heightScale);t.subVectors(n,q);s.addVectors(n,q);r.crossVectors(t,s);s.crossVectors(r,t);r.normalize();s.normalize();n=-this.tube*Math.cos(o);o=this.tube*Math.sin(o);q.x+=n*s.x+o*r.x;q.y+=n*s.y+o*r.y;q.z+=n*s.z+o*r.z;this.grid[v][u]=this.vertices.push(new THREE.Vector3(q.x,q.y,q.z))-1}}for(v=0;v<this.radialSegments;++v){for(u=0;u<this.tubularSegments;++u){var r=(v+1)%this.radialSegments,q=(u+1)%this.tubularSegments,t=this.grid[v][u],s=this.grid[r][u],r=this.grid[r][q],q=this.grid[v][q],o=new THREE.Vector2(v/this.radialSegments,u/this.tubularSegments),n=new THREE.Vector2((v+1)/this.radialSegments,u/this.tubularSegments),m=new THREE.Vector2((v+1)/this.radialSegments,(u+1)/this.tubularSegments),k=new THREE.Vector2(v/this.radialSegments,(u+1)/this.tubularSegments);this.faces.push(new THREE.Face4(t,s,r,q));this.faceVertexUvs[0].push([o,n,m,k])}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry=function(B,A,z,y,x,w){THREE.Geometry.call(this);this.path=B;this.segments=A||64;this.radius=z||1;this.radiusSegments=y||8;this.closed=x||!1;w&&(this.debug=new THREE.Object3D);this.grid=[];var u,v,x=this.segments+1,t,s,r,w=new THREE.Vector3,o,p,k,A=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed);o=A.tangents;p=A.normals;k=A.binormals;this.tangents=o;this.normals=p;this.binormals=k;for(A=0;A<x;A++){this.grid[A]=[];y=A/(x-1);r=B.getPointAt(y);y=o[A];u=p[A];v=k[A];this.debug&&(this.debug.add(new THREE.ArrowHelper(y,r,z,255)),this.debug.add(new THREE.ArrowHelper(u,r,z,16711680)),this.debug.add(new THREE.ArrowHelper(v,r,z,65280)));for(y=0;y<this.radiusSegments;y++){t=2*(y/this.radiusSegments)*Math.PI,s=-this.radius*Math.cos(t),t=this.radius*Math.sin(t),w.copy(r),w.x+=s*u.x+t*v.x,w.y+=s*u.y+t*v.y,w.z+=s*u.z+t*v.z,this.grid[A][y]=this.vertices.push(new THREE.Vector3(w.x,w.y,w.z))-1}}for(A=0;A<this.segments;A++){for(y=0;y<this.radiusSegments;y++){x=this.closed?(A+1)%this.segments:A+1,w=(y+1)%this.radiusSegments,B=this.grid[A][y],z=this.grid[x][y],x=this.grid[x][w],w=this.grid[A][w],o=new THREE.Vector2(A/this.segments,y/this.radiusSegments),p=new THREE.Vector2((A+1)/this.segments,y/this.radiusSegments),k=new THREE.Vector2((A+1)/this.segments,(y+1)/this.radiusSegments),u=new THREE.Vector2(A/this.segments,(y+1)/this.radiusSegments),this.faces.push(new THREE.Face4(B,z,x,w)),this.faceVertexUvs[0].push([o,p,k,u])}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry.FrenetFrames=function(x,w,v){new THREE.Vector3;var u=new THREE.Vector3;new THREE.Vector3;var t=[],s=[],q=[],r=new THREE.Vector3,p=new THREE.Matrix4,w=w+1,o,m,k;this.tangents=t;this.normals=s;this.binormals=q;for(o=0;o<w;o++){m=o/(w-1),t[o]=x.getTangentAt(m),t[o].normalize()}s[0]=new THREE.Vector3;q[0]=new THREE.Vector3;x=Number.MAX_VALUE;o=Math.abs(t[0].x);m=Math.abs(t[0].y);k=Math.abs(t[0].z);o<=x&&(x=o,u.set(1,0,0));m<=x&&(x=m,u.set(0,1,0));k<=x&&u.set(0,0,1);r.crossVectors(t[0],u).normalize();s[0].crossVectors(t[0],r);q[0].crossVectors(t[0],s[0]);for(o=1;o<w;o++){s[o]=s[o-1].clone(),q[o]=q[o-1].clone(),r.crossVectors(t[o-1],t[o]),0.0001<r.length()&&(r.normalize(),u=Math.acos(t[o-1].dot(t[o])),s[o].applyMatrix4(p.makeRotationAxis(r,u))),q[o].crossVectors(t[o],s[o])}if(v){u=Math.acos(s[0].dot(s[w-1]));u/=w-1;0<t[0].dot(r.crossVectors(s[0],s[w-1]))&&(u=-u);for(o=1;o<w;o++){s[o].applyMatrix4(p.makeRotationAxis(t[o],u*o)),q[o].crossVectors(t[o],s[o])}}};THREE.PolyhedronGeometry=function(L,K,J,I){function H(e){var d=e.normalize().clone();d.index=F.vertices.push(d)-1;var f=Math.atan2(e.z,-e.x)/2/Math.PI+0.5,e=Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+0.5;d.uv=new THREE.Vector2(f,1-e);return d}function G(f,e,h){var g=new THREE.Face3(f.index,e.index,h.index,[f.clone(),e.clone(),h.clone()]);g.centroid.add(f).add(e).add(h).divideScalar(3);F.faces.push(g);g=Math.atan2(g.centroid.z,-g.centroid.x);F.faceVertexUvs[0].push([E(f.uv,f,g),E(e.uv,e,g),E(h.uv,h,g)])}function E(e,d,f){0>f&&1===e.x&&(e=new THREE.Vector2(e.x-1,e.y));0===d.x&&0===d.z&&(e=new THREE.Vector2(f/2/Math.PI+0.5,e.y));return e.clone()}THREE.Geometry.call(this);for(var J=J||1,I=I||0,F=this,D=0,C=L.length;D<C;D++){H(new THREE.Vector3(L[D][0],L[D][1],L[D][2]))}for(var B=this.vertices,L=[],D=0,C=K.length;D<C;D++){var z=B[K[D][0]],A=B[K[D][1]],x=B[K[D][2]];L[D]=new THREE.Face3(z.index,A.index,x.index,[z.clone(),A.clone(),x.clone()])}D=0;for(C=L.length;D<C;D++){A=L[D];B=I;K=Math.pow(2,B);Math.pow(4,B);for(var B=H(F.vertices[A.a]),z=H(F.vertices[A.b]),o=H(F.vertices[A.c]),A=[],x=0;x<=K;x++){A[x]=[];for(var w=H(B.clone().lerp(o,x/K)),y=H(z.clone().lerp(o,x/K)),u=K-x,k=0;k<=u;k++){A[x][k]=0==k&&x==K?w:H(w.clone().lerp(y,k/u))}}for(x=0;x<K;x++){for(k=0;k<2*(K-x)-1;k++){B=Math.floor(k/2),0==k%2?G(A[x][B+1],A[x+1][B],A[x][B]):G(A[x][B+1],A[x+1][B+1],A[x+1][B])}}}D=0;for(C=this.faceVertexUvs[0].length;D<C;D++){I=this.faceVertexUvs[0][D],L=I[0].x,K=I[1].x,B=I[2].x,z=Math.max(L,Math.max(K,B)),A=Math.min(L,Math.min(K,B)),0.9<z&&0.1>A&&(0.2>L&&(I[0].x+=1),0.2>K&&(I[1].x+=1),0.2>B&&(I[2].x+=1))}D=0;for(C=this.vertices.length;D<C;D++){this.vertices[D].multiplyScalar(J)}this.mergeVertices();this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,J)};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.IcosahedronGeometry=function(e,d){this.radius=e;this.detail=d;var f=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,f,0],[1,f,0],[-1,-f,0],[1,-f,0],[0,-1,f],[0,1,f],[0,-1,-f],[0,1,-f],[f,0,-1],[f,0,1],[-f,0,-1],[-f,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],e,d)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.OctahedronGeometry=function(d,c){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],d,c)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(d,c){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],d,c)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry=function(E,D,C,B){THREE.Geometry.call(this);var A=this.vertices,z=this.faces,x=this.faceVertexUvs[0],B=void 0===B?!1:B,y,w,v,u,p=D+1;for(y=0;y<=C;y++){u=y/C;for(w=0;w<=D;w++){v=w/D,v=E(v,u),A.push(v)}}var s,o,F,k;for(y=0;y<C;y++){for(w=0;w<D;w++){E=y*p+w,A=y*p+w+1,u=(y+1)*p+w,v=(y+1)*p+w+1,s=new THREE.Vector2(w/D,y/C),o=new THREE.Vector2((w+1)/D,y/C),F=new THREE.Vector2(w/D,(y+1)/C),k=new THREE.Vector2((w+1)/D,(y+1)/C),B?(z.push(new THREE.Face3(E,A,u)),z.push(new THREE.Face3(A,v,u)),x.push([s,o,F]),x.push([o,k,F])):(z.push(new THREE.Face4(E,A,v,u)),x.push([s,o,k,F]))}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ConvexGeometry=function(E){function D(d){var c=d.length();return new THREE.Vector2(d.x/c,d.y/c)}THREE.Geometry.call(this);for(var C=[[0,1,2],[0,2,1]],B=3;B<E.length;B++){var A=B,z=E[A].clone(),x=z.length();z.x+=x*0.000002*(Math.random()-0.5);z.y+=x*0.000002*(Math.random()-0.5);z.z+=x*0.000002*(Math.random()-0.5);for(var x=[],y=0;y<C.length;){var w=C[y],v=z,u=E[w[0]],p;p=u;var s=E[w[1]],o=E[w[2]],F=new THREE.Vector3,k=new THREE.Vector3;F.subVectors(o,s);k.subVectors(p,s);F.cross(k);F.normalize();p=F;u=p.dot(u);if(p.dot(v)>=u){for(v=0;3>v;v++){u=[w[v],w[(v+1)%3]];p=!0;for(s=0;s<x.length;s++){if(x[s][0]===u[1]&&x[s][1]===u[0]){x[s]=x[x.length-1];x.pop();p=!1;break}}p&&x.push(u)}C[y]=C[C.length-1];C.pop()}else{y++}}for(s=0;s<x.length;s++){C.push([x[s][0],x[s][1],A])}}A=0;z=Array(E.length);for(B=0;B<C.length;B++){x=C[B];for(y=0;3>y;y++){void 0===z[x[y]]&&(z[x[y]]=A++,this.vertices.push(E[x[y]])),x[y]=z[x[y]]}}for(B=0;B<C.length;B++){this.faces.push(new THREE.Face3(C[B][0],C[B][1],C[B][2]))}for(B=0;B<this.faces.length;B++){x=this.faces[B],this.faceVertexUvs[0].push([D(this.vertices[x.a]),D(this.vertices[x.b]),D(this.vertices[x.c])])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.AxisHelper=function(d){var d=d||1,c=new THREE.Geometry;c.vertices.push(new THREE.Vector3,new THREE.Vector3(d,0,0),new THREE.Vector3,new THREE.Vector3(0,d,0),new THREE.Vector3,new THREE.Vector3(0,0,d));c.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));d=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,c,d,THREE.LinePieces)};THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);THREE.ArrowHelper=function(f,e,h,g){THREE.Object3D.call(this);void 0===g&&(g=16776960);void 0===h&&(h=1);this.position=e;this.useQuaternion=!0;e=new THREE.Geometry;e.vertices.push(new THREE.Vector3(0,0,0));e.vertices.push(new THREE.Vector3(0,1,0));this.line=new THREE.Line(e,new THREE.LineBasicMaterial({color:g}));this.line.matrixAutoUpdate=!1;this.add(this.line);e=new THREE.CylinderGeometry(0,0.05,0.25,5,1);e.applyMatrix((new THREE.Matrix4).makeTranslation(0,0.875,0));this.cone=new THREE.Mesh(e,new THREE.MeshBasicMaterial({color:g}));this.cone.matrixAutoUpdate=!1;this.add(this.cone);this.setDirection(f);this.setLength(h)};THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(){var d=new THREE.Vector3,c;return function(a){0.999<a.y?this.quaternion.set(0,0,0,1):-0.999>a.y?this.quaternion.set(1,0,0,0):(d.set(a.z,0,-a.x).normalize(),c=Math.acos(a.y),this.quaternion.setFromAxisAngle(d,c))}}();THREE.ArrowHelper.prototype.setLength=function(b){this.scale.set(b,b,b)};THREE.ArrowHelper.prototype.setColor=function(b){this.line.material.color.setHex(b);this.cone.material.color.setHex(b)};THREE.BoxHelper=function(d){var d=d||1,c=new THREE.Geometry,d=[new THREE.Vector3(d,d,d),new THREE.Vector3(-d,d,d),new THREE.Vector3(-d,-d,d),new THREE.Vector3(d,-d,d),new THREE.Vector3(d,d,-d),new THREE.Vector3(-d,d,-d),new THREE.Vector3(-d,-d,-d),new THREE.Vector3(d,-d,-d)];c.vertices.push(d[0],d[1],d[1],d[2],d[2],d[3],d[3],d[0],d[4],d[5],d[5],d[6],d[6],d[7],d[7],d[4],d[0],d[4],d[1],d[5],d[2],d[6],d[3],d[7]);this.vertices=d;THREE.Line.call(this,c,new THREE.LineBasicMaterial,THREE.LinePieces)};THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype);THREE.BoxHelper.prototype.update=function(f){var e=f.geometry;null===e.boundingBox&&e.computeBoundingBox();var h=e.boundingBox.min,e=e.boundingBox.max,g=this.vertices;g[0].set(e.x,e.y,e.z);g[1].set(h.x,e.y,e.z);g[2].set(h.x,h.y,e.z);g[3].set(e.x,h.y,e.z);g[4].set(e.x,e.y,h.z);g[5].set(h.x,e.y,h.z);g[6].set(h.x,h.y,h.z);g[7].set(e.x,h.y,h.z);this.geometry.computeBoundingSphere();this.geometry.verticesNeedUpdate=!0;this.matrixAutoUpdate=!1;this.matrixWorld=f.matrixWorld};THREE.CameraHelper=function(h){function g(e,c,f){l(e,f);l(c,f)}function l(d,c){k.vertices.push(new THREE.Vector3);k.colors.push(new THREE.Color(c));void 0===i[d]&&(i[d]=[]);i[d].push(k.vertices.length-1)}THREE.Line.call(this);var k=new THREE.Geometry,j=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),i={};g("n1","n2",16755200);g("n2","n4",16755200);g("n4","n3",16755200);g("n3","n1",16755200);g("f1","f2",16755200);g("f2","f4",16755200);g("f4","f3",16755200);g("f3","f1",16755200);g("n1","f1",16755200);g("n2","f2",16755200);g("n3","f3",16755200);g("n4","f4",16755200);g("p","n1",16711680);g("p","n2",16711680);g("p","n3",16711680);g("p","n4",16711680);g("u1","u2",43775);g("u2","u3",43775);g("u3","u1",43775);g("c","t",16777215);g("p","c",3355443);g("cn1","cn2",3355443);g("cn3","cn4",3355443);g("cf1","cf2",3355443);g("cf3","cf4",3355443);THREE.Line.call(this,k,j,THREE.LinePieces);this.camera=h;this.matrixWorld=h.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=i;this.update()};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);THREE.CameraHelper.prototype.update=function(){var e=new THREE.Vector3,d=new THREE.Camera,f=new THREE.Projector;return function(){function b(l,j,k,c){e.set(j,k,c);f.unprojectVector(e,d);l=a.pointMap[l];if(void 0!==l){j=0;for(k=l.length;j<k;j++){a.geometry.vertices[l[j]].copy(e)}}}var a=this;d.projectionMatrix.copy(this.camera.projectionMatrix);b("c",0,0,-1);b("t",0,0,1);b("n1",-1,-1,-1);b("n2",1,-1,-1);b("n3",-1,1,-1);b("n4",1,1,-1);b("f1",-1,-1,1);b("f2",1,-1,1);b("f3",-1,1,1);b("f4",1,1,1);b("u1",0.7,1.1,-1);b("u2",-0.7,1.1,-1);b("u3",0,2,-1);b("cf1",-1,0,1);b("cf2",1,0,1);b("cf3",0,-1,1);b("cf4",0,1,1);b("cn1",-1,0,-1);b("cn2",1,0,-1);b("cn3",0,-1,-1);b("cn4",0,1,-1);this.geometry.verticesNeedUpdate=!0}}();THREE.DirectionalLightHelper=function(f,e){THREE.Object3D.call(this);this.matrixAutoUpdate=!1;this.light=f;var h=new THREE.SphereGeometry(e,4,2),g=new THREE.MeshBasicMaterial({fog:!1,wireframe:!0});g.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightSphere=new THREE.Mesh(h,g);this.lightSphere.matrixWorld=this.light.matrixWorld;this.lightSphere.matrixAutoUpdate=!1;this.add(this.lightSphere);h=new THREE.Geometry;h.vertices.push(this.light.position);h.vertices.push(this.light.target.position);h.computeLineDistances();g=new THREE.LineDashedMaterial({dashSize:4,gapSize:4,opacity:0.75,transparent:!0,fog:!1});g.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine=new THREE.Line(h,g);this.add(this.targetLine)};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.update=function(){this.lightSphere.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine.geometry.computeLineDistances();this.targetLine.geometry.verticesNeedUpdate=!0;this.targetLine.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};THREE.FaceNormalsHelper=function(h,g){for(var g=g||20,l=new THREE.Geometry,k=0,j=h.geometry.faces.length;k<j;k++){var i=h.geometry.faces[k];l.vertices.push(i.centroid);l.vertices.push(i.normal.clone().multiplyScalar(g).add(i.centroid))}THREE.Line.call(this,l,new THREE.LineBasicMaterial({color:255}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.matrixWorld=h.matrixWorld};THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype);THREE.GridHelper=function(j,i){for(var p=new THREE.Geometry,o=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors}),n=new THREE.Color(4473924),m=new THREE.Color(8947848),k=-j;k<=j;k+=i){p.vertices.push(new THREE.Vector3(-j,0,k),new THREE.Vector3(j,0,k),new THREE.Vector3(k,0,-j),new THREE.Vector3(k,0,j));var l=0===k?n:m;p.colors.push(l,l,l,l)}THREE.Line.call(this,p,o,THREE.LinePieces)};THREE.GridHelper.prototype=Object.create(THREE.Line.prototype);THREE.HemisphereLightHelper=function(g,f){THREE.Object3D.call(this);this.light=g;var j=new THREE.SphereGeometry(f,4,2);j.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));for(var i=0;8>i;i++){j.faces[i].materialIndex=4>i?0:1}i=new THREE.MeshBasicMaterial({fog:!1,wireframe:!0});i.color.copy(g.color).multiplyScalar(g.intensity);var h=new THREE.MeshBasicMaterial({fog:!1,wireframe:!0});h.color.copy(g.groundColor).multiplyScalar(g.intensity);this.lightSphere=new THREE.Mesh(j,new THREE.MeshFaceMaterial([i,h]));this.lightSphere.position=g.position;this.lightSphere.lookAt(new THREE.Vector3);this.add(this.lightSphere)};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.update=function(){this.lightSphere.lookAt(new THREE.Vector3);this.lightSphere.material.materials[0].color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightSphere.material.materials[1].color.copy(this.light.groundColor).multiplyScalar(this.light.intensity)};THREE.PointLightHelper=function(f,e){THREE.Object3D.call(this);this.matrixAutoUpdate=!1;this.light=f;var h=new THREE.SphereGeometry(e,4,2),g=new THREE.MeshBasicMaterial({fog:!1,wireframe:!0});g.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightSphere=new THREE.Mesh(h,g);this.lightSphere.matrixWorld=this.light.matrixWorld;this.lightSphere.matrixAutoUpdate=!1;this.add(this.lightSphere)};THREE.PointLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.PointLightHelper.prototype.update=function(){this.lightSphere.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};THREE.SpotLightHelper=function(f,e){THREE.Object3D.call(this);this.matrixAutoUpdate=!1;this.light=f;var h=new THREE.SphereGeometry(e,4,2),g=new THREE.MeshBasicMaterial({fog:!1,wireframe:!0});g.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightSphere=new THREE.Mesh(h,g);this.lightSphere.matrixWorld=this.light.matrixWorld;this.lightSphere.matrixAutoUpdate=!1;this.add(this.lightSphere);h=new THREE.CylinderGeometry(0.0001,1,1,8,1,!0);h.applyMatrix((new THREE.Matrix4).makeTranslation(0,-0.5,0));h.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));g=new THREE.MeshBasicMaterial({fog:!1,wireframe:!0,opacity:0.3,transparent:!0});g.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightCone=new THREE.Mesh(h,g);this.lightCone.position=this.light.position;h=f.distance?f.distance:10000;g=h*Math.tan(f.angle);this.lightCone.scale.set(g,g,h);this.lightCone.lookAt(this.light.target.position);this.add(this.lightCone)};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.SpotLightHelper.prototype.update=function(){var d=this.light.distance?this.light.distance:10000,c=d*Math.tan(this.light.angle);this.lightCone.scale.set(c,c,d);this.lightCone.lookAt(this.light.target.position);this.lightSphere.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightCone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare=function(g,f,j,i,h){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==g&&this.add(g,f,j,i,h)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.add=function(h,g,l,k,j,i){void 0===g&&(g=-1);void 0===l&&(l=0);void 0===i&&(i=1);void 0===j&&(j=new THREE.Color(16777215));void 0===k&&(k=THREE.NormalBlending);l=Math.min(l,Math.max(0,l));this.lensFlares.push({texture:h,size:g,distance:l,x:0,y:0,z:0,scale:1,rotation:1,opacity:i,color:j,blending:k})};THREE.LensFlare.prototype.updateLensFlares=function(){var g,f=this.lensFlares.length,j,i=2*-this.positionScreen.x,h=2*-this.positionScreen.y;for(g=0;g<f;g++){j=this.lensFlares[g],j.x=this.positionScreen.x+i*j.distance,j.y=this.positionScreen.y+h*j.distance,j.wantedRotation=0.25*j.x*Math.PI,j.rotation+=0.25*(j.wantedRotation-j.rotation)}};THREE.MorphBlendMesh=function(e,d){THREE.Mesh.call(this,e,d);this.animationsMap={};this.animationsList=[];var f=this.geometry.morphTargets.length;this.createAnimation("__default",0,f-1,f/1);this.setAnimationWeight("__default",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphBlendMesh.prototype.createAnimation=function(f,e,h,g){e={startFrame:e,endFrame:h,length:h-e+1,fps:g,duration:(h-e)/g,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[f]=e;this.animationsList.push(e)};THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(r){for(var q=/([a-z]+)(\d+)/,p,o={},n=this.geometry,m=0,k=n.morphTargets.length;m<k;m++){var l=n.morphTargets[m].name.match(q);if(l&&1<l.length){var j=l[1];o[j]||(o[j]={start:Infinity,end:-Infinity});l=o[j];m<l.start&&(l.start=m);m>l.end&&(l.end=m);p||(p=j)}}for(j in o){l=o[j],this.createAnimation(j,l.start,l.end,r)}this.firstAnimation=p};THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(b){if(b=this.animationsMap[b]){b.direction=1,b.directionBackwards=!1}};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(b){if(b=this.animationsMap[b]){b.direction=-1,b.directionBackwards=!0}};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,d){var f=this.animationsMap[e];f&&(f.fps=d,f.duration=(f.end-f.start)/f.fps)};THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,d){var f=this.animationsMap[e];f&&(f.duration=d,f.fps=(f.end-f.start)/f.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,d){var f=this.animationsMap[e];f&&(f.weight=d)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,d){var f=this.animationsMap[e];f&&(f.time=d)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(d){var c=0;if(d=this.animationsMap[d]){c=d.time}return c};THREE.MorphBlendMesh.prototype.getAnimationDuration=function(d){var c=-1;if(d=this.animationsMap[d]){c=d.duration}return c};THREE.MorphBlendMesh.prototype.playAnimation=function(d){var c=this.animationsMap[d];c?(c.time=0,c.active=!0):console.warn("animation["+d+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(b){if(b=this.animationsMap[b]){b.active=!1}};THREE.MorphBlendMesh.prototype.update=function(i){for(var g=0,n=this.animationsList.length;g<n;g++){var m=this.animationsList[g];if(m.active){var l=m.duration/m.length;m.time+=m.direction*i;if(m.mirroredLoop){if(m.time>m.duration||0>m.time){m.direction*=-1,m.time>m.duration&&(m.time=m.duration,m.directionBackwards=!0),0>m.time&&(m.time=0,m.directionBackwards=!1)}}else{m.time%=m.duration,0>m.time&&(m.time+=m.duration)}var k=m.startFrame+THREE.Math.clamp(Math.floor(m.time/l),0,m.length-1),j=m.weight;k!==m.currentFrame&&(this.morphTargetInfluences[m.lastFrame]=0,this.morphTargetInfluences[m.currentFrame]=1*j,this.morphTargetInfluences[k]=0,m.lastFrame=m.currentFrame,m.currentFrame=k);l=m.time%l/l;m.directionBackwards&&(l=1-l);this.morphTargetInfluences[m.currentFrame]=l*j;this.morphTargetInfluences[m.lastFrame]=(1-l)*j}}};THREE.LensFlarePlugin=function(){function B(b,m){var l=A.createProgram(),j=A.createShader(A.FRAGMENT_SHADER),i=A.createShader(A.VERTEX_SHADER),h="precision "+m+" float;\n";A.shaderSource(j,h+b.fragmentShader);A.shaderSource(i,h+b.vertexShader);A.compileShader(j);A.compileShader(i);A.attachShader(l,j);A.attachShader(l,i);A.linkProgram(l);return l}var A,z,y,x,w,u,v,t,s,r,o,p,k;this.init=function(a){A=a.context;z=a;y=a.getPrecision();x=new Float32Array(16);w=new Uint16Array(6);a=0;x[a++]=-1;x[a++]=-1;x[a++]=0;x[a++]=0;x[a++]=1;x[a++]=-1;x[a++]=1;x[a++]=0;x[a++]=1;x[a++]=1;x[a++]=1;x[a++]=1;x[a++]=-1;x[a++]=1;x[a++]=0;x[a++]=1;a=0;w[a++]=0;w[a++]=1;w[a++]=2;w[a++]=0;w[a++]=2;w[a++]=3;u=A.createBuffer();v=A.createBuffer();A.bindBuffer(A.ARRAY_BUFFER,u);A.bufferData(A.ARRAY_BUFFER,x,A.STATIC_DRAW);A.bindBuffer(A.ELEMENT_ARRAY_BUFFER,v);A.bufferData(A.ELEMENT_ARRAY_BUFFER,w,A.STATIC_DRAW);t=A.createTexture();s=A.createTexture();A.bindTexture(A.TEXTURE_2D,t);A.texImage2D(A.TEXTURE_2D,0,A.RGB,16,16,0,A.RGB,A.UNSIGNED_BYTE,null);A.texParameteri(A.TEXTURE_2D,A.TEXTURE_WRAP_S,A.CLAMP_TO_EDGE);A.texParameteri(A.TEXTURE_2D,A.TEXTURE_WRAP_T,A.CLAMP_TO_EDGE);A.texParameteri(A.TEXTURE_2D,A.TEXTURE_MAG_FILTER,A.NEAREST);A.texParameteri(A.TEXTURE_2D,A.TEXTURE_MIN_FILTER,A.NEAREST);A.bindTexture(A.TEXTURE_2D,s);A.texImage2D(A.TEXTURE_2D,0,A.RGBA,16,16,0,A.RGBA,A.UNSIGNED_BYTE,null);A.texParameteri(A.TEXTURE_2D,A.TEXTURE_WRAP_S,A.CLAMP_TO_EDGE);A.texParameteri(A.TEXTURE_2D,A.TEXTURE_WRAP_T,A.CLAMP_TO_EDGE);A.texParameteri(A.TEXTURE_2D,A.TEXTURE_MAG_FILTER,A.NEAREST);A.texParameteri(A.TEXTURE_2D,A.TEXTURE_MIN_FILTER,A.NEAREST);0>=A.getParameter(A.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(r=!1,o=B(THREE.ShaderFlares.lensFlare,y)):(r=!0,o=B(THREE.ShaderFlares.lensFlareVertexTexture,y));p={};k={};p.vertex=A.getAttribLocation(o,"position");p.uv=A.getAttribLocation(o,"uv");k.renderType=A.getUniformLocation(o,"renderType");k.map=A.getUniformLocation(o,"map");k.occlusionMap=A.getUniformLocation(o,"occlusionMap");k.opacity=A.getUniformLocation(o,"opacity");k.color=A.getUniformLocation(o,"color");k.scale=A.getUniformLocation(o,"scale");k.rotation=A.getUniformLocation(o,"rotation");k.screenPosition=A.getUniformLocation(o,"screenPosition")};this.render=function(T,S,R,Q){var T=T.__webglFlares,D=T.length;if(D){var j=new THREE.Vector3,q=Q/R,n=0.5*R,l=0.5*Q,E=16/Q,P=new THREE.Vector2(E*q,E),O=new THREE.Vector3(1,1,0),g=new THREE.Vector2(1,1),K=k,E=p;A.useProgram(o);A.enableVertexAttribArray(p.vertex);A.enableVertexAttribArray(p.uv);A.uniform1i(K.occlusionMap,0);A.uniform1i(K.map,1);A.bindBuffer(A.ARRAY_BUFFER,u);A.vertexAttribPointer(E.vertex,2,A.FLOAT,!1,16,0);A.vertexAttribPointer(E.uv,2,A.FLOAT,!1,16,8);A.bindBuffer(A.ELEMENT_ARRAY_BUFFER,v);A.disable(A.CULL_FACE);A.depthMask(!1);var i,b,h,c,m;for(i=0;i<D;i++){if(E=16/Q,P.set(E*q,E),c=T[i],j.set(c.matrixWorld.elements[12],c.matrixWorld.elements[13],c.matrixWorld.elements[14]),j.applyMatrix4(S.matrixWorldInverse),j.applyProjection(S.projectionMatrix),O.copy(j),g.x=O.x*n+n,g.y=O.y*l+l,r||0<g.x&&g.x<R&&0<g.y&&g.y<Q){A.activeTexture(A.TEXTURE1);A.bindTexture(A.TEXTURE_2D,t);A.copyTexImage2D(A.TEXTURE_2D,0,A.RGB,g.x-8,g.y-8,16,16,0);A.uniform1i(K.renderType,0);A.uniform2f(K.scale,P.x,P.y);A.uniform3f(K.screenPosition,O.x,O.y,O.z);A.disable(A.BLEND);A.enable(A.DEPTH_TEST);A.drawElements(A.TRIANGLES,6,A.UNSIGNED_SHORT,0);A.activeTexture(A.TEXTURE0);A.bindTexture(A.TEXTURE_2D,s);A.copyTexImage2D(A.TEXTURE_2D,0,A.RGBA,g.x-8,g.y-8,16,16,0);A.uniform1i(K.renderType,1);A.disable(A.DEPTH_TEST);A.activeTexture(A.TEXTURE1);A.bindTexture(A.TEXTURE_2D,t);A.drawElements(A.TRIANGLES,6,A.UNSIGNED_SHORT,0);c.positionScreen.copy(O);c.customUpdateCallback?c.customUpdateCallback(c):c.updateLensFlares();A.uniform1i(K.renderType,2);A.enable(A.BLEND);b=0;for(h=c.lensFlares.length;b<h;b++){m=c.lensFlares[b],0.001<m.opacity&&0.001<m.scale&&(O.x=m.x,O.y=m.y,O.z=m.z,E=m.size*m.scale/Q,P.x=E*q,P.y=E,A.uniform3f(K.screenPosition,O.x,O.y,O.z),A.uniform2f(K.scale,P.x,P.y),A.uniform1f(K.rotation,m.rotation),A.uniform1f(K.opacity,m.opacity),A.uniform3f(K.color,m.color.r,m.color.g,m.color.b),z.setBlending(m.blending,m.blendEquation,m.blendSrc,m.blendDst),z.setTexture(m.texture,1),A.drawElements(A.TRIANGLES,6,A.UNSIGNED_SHORT,0))}}}A.enable(A.CULL_FACE);A.enable(A.DEPTH_TEST);A.depthMask(!0)}}};THREE.ShadowMapPlugin=function(){var v,u,t,s,r,q,o=new THREE.Frustum,p=new THREE.Matrix4,n=new THREE.Vector3,m=new THREE.Vector3,k=new THREE.Vector3;this.init=function(b){v=b.context;u=b;var b=THREE.ShaderLib.depthRGBA,a=THREE.UniformsUtils.clone(b.uniforms);t=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a});s=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,morphTargets:!0});r=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,skinning:!0});q=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,morphTargets:!0,skinning:!0});t._shadowPass=!0;s._shadowPass=!0;r._shadowPass=!0;q._shadowPass=!0};this.render=function(b,d){u.shadowMapEnabled&&u.shadowMapAutoUpdate&&this.update(b,d)};this.update=function(e,f){var b,x,a,c,z,j,g,l,i,h=[];c=0;v.clearColor(1,1,1,1);v.disable(v.BLEND);v.enable(v.CULL_FACE);v.frontFace(v.CCW);u.shadowMapCullFace===THREE.CullFaceFront?v.cullFace(v.FRONT):v.cullFace(v.BACK);u.setDepthTest(!0);b=0;for(x=e.__lights.length;b<x;b++){if(a=e.__lights[b],a.castShadow){if(a instanceof THREE.DirectionalLight&&a.shadowCascade){for(z=0;z<a.shadowCascadeCount;z++){var w;if(a.shadowCascadeArray[z]){w=a.shadowCascadeArray[z]}else{i=a;g=z;w=new THREE.DirectionalLight;w.isVirtual=!0;w.onlyShadow=!0;w.castShadow=!0;w.shadowCameraNear=i.shadowCameraNear;w.shadowCameraFar=i.shadowCameraFar;w.shadowCameraLeft=i.shadowCameraLeft;w.shadowCameraRight=i.shadowCameraRight;w.shadowCameraBottom=i.shadowCameraBottom;w.shadowCameraTop=i.shadowCameraTop;w.shadowCameraVisible=i.shadowCameraVisible;w.shadowDarkness=i.shadowDarkness;w.shadowBias=i.shadowCascadeBias[g];w.shadowMapWidth=i.shadowCascadeWidth[g];w.shadowMapHeight=i.shadowCascadeHeight[g];w.pointsWorld=[];w.pointsFrustum=[];l=w.pointsWorld;j=w.pointsFrustum;for(var d=0;8>d;d++){l[d]=new THREE.Vector3,j[d]=new THREE.Vector3}l=i.shadowCascadeNearZ[g];i=i.shadowCascadeFarZ[g];j[0].set(-1,-1,l);j[1].set(1,-1,l);j[2].set(-1,1,l);j[3].set(1,1,l);j[4].set(-1,-1,i);j[5].set(1,-1,i);j[6].set(-1,1,i);j[7].set(1,1,i);w.originalCamera=f;j=new THREE.Gyroscope;j.position=a.shadowCascadeOffset;j.add(w);j.add(w.target);f.add(j);a.shadowCascadeArray[z]=w;console.log("Created virtualLight",w)}g=a;l=z;i=g.shadowCascadeArray[l];i.position.copy(g.position);i.target.position.copy(g.target.position);i.lookAt(i.target);i.shadowCameraVisible=g.shadowCameraVisible;i.shadowDarkness=g.shadowDarkness;i.shadowBias=g.shadowCascadeBias[l];j=g.shadowCascadeNearZ[l];g=g.shadowCascadeFarZ[l];i=i.pointsFrustum;i[0].z=j;i[1].z=j;i[2].z=j;i[3].z=j;i[4].z=g;i[5].z=g;i[6].z=g;i[7].z=g;h[c]=w;c++}}else{h[c]=a,c++}}}b=0;for(x=h.length;b<x;b++){a=h[b];a.shadowMap||(z=THREE.LinearFilter,u.shadowMapType===THREE.PCFSoftShadowMap&&(z=THREE.NearestFilter),a.shadowMap=new THREE.WebGLRenderTarget(a.shadowMapWidth,a.shadowMapHeight,{minFilter:z,magFilter:z,format:THREE.RGBAFormat}),a.shadowMapSize=new THREE.Vector2(a.shadowMapWidth,a.shadowMapHeight),a.shadowMatrix=new THREE.Matrix4);if(!a.shadowCamera){if(a instanceof THREE.SpotLight){a.shadowCamera=new THREE.PerspectiveCamera(a.shadowCameraFov,a.shadowMapWidth/a.shadowMapHeight,a.shadowCameraNear,a.shadowCameraFar)}else{if(a instanceof THREE.DirectionalLight){a.shadowCamera=new THREE.OrthographicCamera(a.shadowCameraLeft,a.shadowCameraRight,a.shadowCameraTop,a.shadowCameraBottom,a.shadowCameraNear,a.shadowCameraFar)}else{console.error("Unsupported light type for shadow");continue}}e.add(a.shadowCamera);!0===e.autoUpdate&&e.updateMatrixWorld()}a.shadowCameraVisible&&!a.cameraHelper&&(a.cameraHelper=new THREE.CameraHelper(a.shadowCamera),a.shadowCamera.add(a.cameraHelper));if(a.isVirtual&&w.originalCamera==f){z=f;c=a.shadowCamera;j=a.pointsFrustum;i=a.pointsWorld;n.set(Infinity,Infinity,Infinity);m.set(-Infinity,-Infinity,-Infinity);for(g=0;8>g;g++){l=i[g],l.copy(j[g]),THREE.ShadowMapPlugin.__projector.unprojectVector(l,z),l.applyMatrix4(c.matrixWorldInverse),l.x<n.x&&(n.x=l.x),l.x>m.x&&(m.x=l.x),l.y<n.y&&(n.y=l.y),l.y>m.y&&(m.y=l.y),l.z<n.z&&(n.z=l.z),l.z>m.z&&(m.z=l.z)}c.left=n.x;c.right=m.x;c.top=m.y;c.bottom=n.y;c.updateProjectionMatrix()}c=a.shadowMap;j=a.shadowMatrix;z=a.shadowCamera;z.position.getPositionFromMatrix(a.matrixWorld);k.getPositionFromMatrix(a.target.matrixWorld);z.lookAt(k);z.updateMatrixWorld();z.matrixWorldInverse.getInverse(z.matrixWorld);a.cameraHelper&&(a.cameraHelper.visible=a.shadowCameraVisible);a.shadowCameraVisible&&a.cameraHelper.update();j.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);j.multiply(z.projectionMatrix);j.multiply(z.matrixWorldInverse);p.multiplyMatrices(z.projectionMatrix,z.matrixWorldInverse);o.setFromMatrix(p);u.setRenderTarget(c);u.clear();i=e.__webglObjects;a=0;for(c=i.length;a<c;a++){if(g=i[a],j=g.object,g.render=!1,j.visible&&j.castShadow&&(!(j instanceof THREE.Mesh||j instanceof THREE.ParticleSystem)||!j.frustumCulled||o.intersectsObject(j))){j._modelViewMatrix.multiplyMatrices(z.matrixWorldInverse,j.matrixWorld),g.render=!0}}a=0;for(c=i.length;a<c;a++){g=i[a],g.render&&(j=g.object,g=g.buffer,d=j.material instanceof THREE.MeshFaceMaterial?j.material.materials[0]:j.material,l=0<j.geometry.morphTargets.length&&d.morphTargets,d=j instanceof THREE.SkinnedMesh&&d.skinning,l=j.customDepthMaterial?j.customDepthMaterial:d?l?q:r:l?s:t,g instanceof THREE.BufferGeometry?u.renderBufferDirect(z,e.__lights,null,l,g,j):u.renderBuffer(z,e.__lights,null,l,g,j))}i=e.__webglObjectsImmediate;a=0;for(c=i.length;a<c;a++){g=i[a],j=g.object,j.visible&&j.castShadow&&(j._modelViewMatrix.multiplyMatrices(z.matrixWorldInverse,j.matrixWorld),u.renderImmediateObject(z,e.__lights,null,t,j))}}b=u.getClearColor();x=u.getClearAlpha();v.clearColor(b.r,b.g,b.b,x);v.enable(v.BLEND);u.shadowMapCullFace===THREE.CullFaceFront&&v.cullFace(v.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;THREE.SpritePlugin=function(){function v(d,c){return d.z!==c.z?c.z-d.z:c.id-d.id}var u,t,s,r,q,o,p,n,m,k;this.init=function(c){u=c.context;t=c;s=c.getPrecision();r=new Float32Array(16);q=new Uint16Array(6);c=0;r[c++]=-1;r[c++]=-1;r[c++]=0;r[c++]=0;r[c++]=1;r[c++]=-1;r[c++]=1;r[c++]=0;r[c++]=1;r[c++]=1;r[c++]=1;r[c++]=1;r[c++]=-1;r[c++]=1;r[c++]=0;r[c++]=1;c=0;q[c++]=0;q[c++]=1;q[c++]=2;q[c++]=0;q[c++]=2;q[c++]=3;o=u.createBuffer();p=u.createBuffer();u.bindBuffer(u.ARRAY_BUFFER,o);u.bufferData(u.ARRAY_BUFFER,r,u.STATIC_DRAW);u.bindBuffer(u.ELEMENT_ARRAY_BUFFER,p);u.bufferData(u.ELEMENT_ARRAY_BUFFER,q,u.STATIC_DRAW);var c=THREE.ShaderSprite.sprite,b=u.createProgram(),f=u.createShader(u.FRAGMENT_SHADER),d=u.createShader(u.VERTEX_SHADER),e="precision "+s+" float;\n";u.shaderSource(f,e+c.fragmentShader);u.shaderSource(d,e+c.vertexShader);u.compileShader(f);u.compileShader(d);u.attachShader(b,f);u.attachShader(b,d);u.linkProgram(b);n=b;m={};k={};m.position=u.getAttribLocation(n,"position");m.uv=u.getAttribLocation(n,"uv");k.uvOffset=u.getUniformLocation(n,"uvOffset");k.uvScale=u.getUniformLocation(n,"uvScale");k.rotation=u.getUniformLocation(n,"rotation");k.scale=u.getUniformLocation(n,"scale");k.alignment=u.getUniformLocation(n,"alignment");k.color=u.getUniformLocation(n,"color");k.map=u.getUniformLocation(n,"map");k.opacity=u.getUniformLocation(n,"opacity");k.useScreenCoordinates=u.getUniformLocation(n,"useScreenCoordinates");k.sizeAttenuation=u.getUniformLocation(n,"sizeAttenuation");k.screenPosition=u.getUniformLocation(n,"screenPosition");k.modelViewMatrix=u.getUniformLocation(n,"modelViewMatrix");k.projectionMatrix=u.getUniformLocation(n,"projectionMatrix");k.fogType=u.getUniformLocation(n,"fogType");k.fogDensity=u.getUniformLocation(n,"fogDensity");k.fogNear=u.getUniformLocation(n,"fogNear");k.fogFar=u.getUniformLocation(n,"fogFar");k.fogColor=u.getUniformLocation(n,"fogColor");k.alphaTest=u.getUniformLocation(n,"alphaTest")};this.render=function(j,i,h,E){var a=j.__webglSprites,c=a.length;if(c){var J=m,z=k,l=E/h,h=0.5*h,C=0.5*E;u.useProgram(n);u.enableVertexAttribArray(J.position);u.enableVertexAttribArray(J.uv);u.disable(u.CULL_FACE);u.enable(u.BLEND);u.bindBuffer(u.ARRAY_BUFFER,o);u.vertexAttribPointer(J.position,2,u.FLOAT,!1,16,0);u.vertexAttribPointer(J.uv,2,u.FLOAT,!1,16,8);u.bindBuffer(u.ELEMENT_ARRAY_BUFFER,p);u.uniformMatrix4fv(z.projectionMatrix,!1,i.projectionMatrix.elements);u.activeTexture(u.TEXTURE0);u.uniform1i(z.map,0);var x=J=0,w=j.fog;w?(u.uniform3f(z.fogColor,w.color.r,w.color.g,w.color.b),w instanceof THREE.Fog?(u.uniform1f(z.fogNear,w.near),u.uniform1f(z.fogFar,w.far),u.uniform1i(z.fogType,1),x=J=1):w instanceof THREE.FogExp2&&(u.uniform1f(z.fogDensity,w.density),u.uniform1i(z.fogType,2),x=J=2)):(u.uniform1i(z.fogType,0),x=J=0);for(var D,g,b=[],w=0;w<c;w++){D=a[w],g=D.material,D.visible&&0!==g.opacity&&(g.useScreenCoordinates?D.z=-D.position.z:(D._modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,D.matrixWorld),D.z=-D._modelViewMatrix.elements[14]))}a.sort(v);for(w=0;w<c;w++){D=a[w],g=D.material,D.visible&&0!==g.opacity&&(g.map&&g.map.image&&g.map.image.width)&&(u.uniform1f(z.alphaTest,g.alphaTest),!0===g.useScreenCoordinates?(u.uniform1i(z.useScreenCoordinates,1),u.uniform3f(z.screenPosition,(D.position.x*t.devicePixelRatio-h)/h,(C-D.position.y*t.devicePixelRatio)/C,Math.max(0,Math.min(1,D.position.z))),b[0]=t.devicePixelRatio,b[1]=t.devicePixelRatio):(u.uniform1i(z.useScreenCoordinates,0),u.uniform1i(z.sizeAttenuation,g.sizeAttenuation?1:0),u.uniformMatrix4fv(z.modelViewMatrix,!1,D._modelViewMatrix.elements),b[0]=1,b[1]=1),i=j.fog&&g.fog?x:0,J!==i&&(u.uniform1i(z.fogType,i),J=i),i=1/(g.scaleByViewport?E:1),b[0]*=i*l*D.scale.x,b[1]*=i*D.scale.y,u.uniform2f(z.uvScale,g.uvScale.x,g.uvScale.y),u.uniform2f(z.uvOffset,g.uvOffset.x,g.uvOffset.y),u.uniform2f(z.alignment,g.alignment.x,g.alignment.y),u.uniform1f(z.opacity,g.opacity),u.uniform3f(z.color,g.color.r,g.color.g,g.color.b),u.uniform1f(z.rotation,D.rotation),u.uniform2fv(z.scale,b),t.setBlending(g.blending,g.blendEquation,g.blendSrc,g.blendDst),t.setDepthTest(g.depthTest),t.setDepthWrite(g.depthWrite),t.setTexture(g.map,0),u.drawElements(u.TRIANGLES,6,u.UNSIGNED_SHORT,0))}u.enable(u.CULL_FACE)}}};THREE.DepthPassPlugin=function(){this.enabled=!1;this.renderTarget=null;var j,i,p,o,n,m,k=new THREE.Frustum,l=new THREE.Matrix4;this.init=function(b){j=b.context;i=b;var b=THREE.ShaderLib.depthRGBA,a=THREE.UniformsUtils.clone(b.uniforms);p=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a});o=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,morphTargets:!0});n=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,skinning:!0});m=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,morphTargets:!0,skinning:!0});p._shadowPass=!0;o._shadowPass=!0;n._shadowPass=!0;m._shadowPass=!0};this.render=function(d,c){this.enabled&&this.update(d,c)};this.update=function(h,g){var f,d,e,b,s,a;j.clearColor(1,1,1,1);j.disable(j.BLEND);i.setDepthTest(!0);!0===h.autoUpdate&&h.updateMatrixWorld();g.matrixWorldInverse.getInverse(g.matrixWorld);l.multiplyMatrices(g.projectionMatrix,g.matrixWorldInverse);k.setFromMatrix(l);i.setRenderTarget(this.renderTarget);i.clear();a=h.__webglObjects;f=0;for(d=a.length;f<d;f++){if(e=a[f],s=e.object,e.render=!1,s.visible&&(!(s instanceof THREE.Mesh||s instanceof THREE.ParticleSystem)||!s.frustumCulled||k.intersectsObject(s))){s._modelViewMatrix.multiplyMatrices(g.matrixWorldInverse,s.matrixWorld),e.render=!0}}var c;f=0;for(d=a.length;f<d;f++){if(e=a[f],e.render&&(s=e.object,e=e.buffer,!(s instanceof THREE.ParticleSystem)||s.customDepthMaterial)){(c=s.material instanceof THREE.MeshFaceMaterial?s.material.materials[0]:s.material)&&i.setMaterialFaces(s.material),b=0<s.geometry.morphTargets.length&&c.morphTargets,c=s instanceof THREE.SkinnedMesh&&c.skinning,b=s.customDepthMaterial?s.customDepthMaterial:c?b?m:n:b?o:p,e instanceof THREE.BufferGeometry?i.renderBufferDirect(g,h.__lights,null,b,e,s):i.renderBuffer(g,h.__lights,null,b,e,s)}}a=h.__webglObjectsImmediate;f=0;for(d=a.length;f<d;f++){e=a[f],s=e.object,s.visible&&(s._modelViewMatrix.multiplyMatrices(g.matrixWorldInverse,s.matrixWorld),i.renderImmediateObject(g,h.__lights,null,p,s))}f=i.getClearColor();d=i.getClearAlpha();j.clearColor(f.r,f.g,f.b,d);j.enable(j.BLEND)}};THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},lensFlare:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};THREE.ShaderSprite={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int sizeAttenuation;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( sizeAttenuation == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",fragmentShader:"uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"}};